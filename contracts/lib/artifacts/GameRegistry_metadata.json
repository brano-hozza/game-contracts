{
	"compiler": {
		"version": "0.8.26+commit.8a97fa7a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"name": "OwnableInvalidOwner",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "OwnableUnauthorizedAccount",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "game",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "assetContract",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bytes32[]",
						"name": "attributes",
						"type": "bytes32[]"
					}
				],
				"name": "AssetPermissionGranted",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "game",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "assetContract",
						"type": "address"
					}
				],
				"name": "AssetPermissionRevoked",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "game",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "registeredBy",
						"type": "address"
					}
				],
				"name": "GameRegistered",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "game",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "unregisteredBy",
						"type": "address"
					}
				],
				"name": "GameUnregistered",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "game",
						"type": "address"
					}
				],
				"name": "getGameAssetContracts",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "",
						"type": "address[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "game",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "assetContract",
						"type": "address"
					}
				],
				"name": "getGamePermissions",
				"outputs": [
					{
						"internalType": "bytes32[]",
						"name": "",
						"type": "bytes32[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "game",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "assetContract",
						"type": "address"
					},
					{
						"internalType": "bytes32[]",
						"name": "attributes",
						"type": "bytes32[]"
					}
				],
				"name": "grantAssetPermission",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "game",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "assetContract",
						"type": "address"
					},
					{
						"internalType": "bytes32[]",
						"name": "attributes",
						"type": "bytes32[]"
					}
				],
				"name": "hasPermissions",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "game",
						"type": "address"
					}
				],
				"name": "isGameRegistered",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "game",
						"type": "address"
					}
				],
				"name": "registerGame",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "registeredGames",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "game",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "assetContract",
						"type": "address"
					}
				],
				"name": "revokeAssetPermission",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"errors": {
				"OwnableInvalidOwner(address)": [
					{
						"details": "The owner is not a valid owner account. (eg. `address(0)`)"
					}
				],
				"OwnableUnauthorizedAccount(address)": [
					{
						"details": "The caller account is not authorized to perform an operation."
					}
				]
			},
			"kind": "dev",
			"methods": {
				"getGameAssetContracts(address)": {
					"params": {
						"game": "Address of the game"
					},
					"returns": {
						"_0": "Array of asset contract addresses"
					}
				},
				"getGamePermissions(address,address)": {
					"params": {
						"assetContract": "Address of the asset contract",
						"game": "Address of the game"
					},
					"returns": {
						"_0": "Array of allowed attribute IDs"
					}
				},
				"grantAssetPermission(address,address,bytes32[])": {
					"params": {
						"assetContract": "Address of the asset contract",
						"attributes": "Array of attribute IDs the game can modify",
						"game": "Address of the game"
					}
				},
				"hasPermissions(address,address,bytes32[])": {
					"params": {
						"assetContract": "Address of the asset contract",
						"attributes": "Array of attribute IDs to check",
						"game": "Address of the game"
					},
					"returns": {
						"_0": "bool indicating if the game has all specified permissions"
					}
				},
				"isGameRegistered(address)": {
					"params": {
						"game": "Address of the game to check"
					}
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"registerGame(address)": {
					"params": {
						"game": "Address of the game to register"
					}
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
				},
				"revokeAssetPermission(address,address)": {
					"params": {
						"assetContract": "Address of the asset contract",
						"game": "Address of the game"
					}
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"getGameAssetContracts(address)": {
					"notice": "Get all asset contracts a game has permissions for"
				},
				"getGamePermissions(address,address)": {
					"notice": "Get allowed attributes for a game and asset contract"
				},
				"grantAssetPermission(address,address,bytes32[])": {
					"notice": "Grant permission to a game for specific asset contract attributes"
				},
				"hasPermissions(address,address,bytes32[])": {
					"notice": "Check if a game has permission for specific attributes on an asset contract"
				},
				"isGameRegistered(address)": {
					"notice": "Check if a game is registered"
				},
				"registerGame(address)": {
					"notice": "Register a new game"
				},
				"revokeAssetPermission(address,address)": {
					"notice": "Revoke a game's permission for an asset contract"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/lib/GameRegistry.sol": "GameRegistry"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
			"license": "MIT",
			"urls": [
				"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
				"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
			"license": "MIT",
			"urls": [
				"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
				"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
			]
		},
		"contracts/lib/GameRegistry.sol": {
			"keccak256": "0x80d3dde7a2868ed730d880229411e8a8adc4b52e0b1f53bfb232d9193210760f",
			"license": "MIT",
			"urls": [
				"bzz-raw://1bef4240092ed49176399ef7f0515b24f5dd4f83d2399899e8ab6af7f30511e6",
				"dweb:/ipfs/QmTR8q8NMpgEmaRPgQqDdvKoQVX51MPEiLYgzFuNwLvsCH"
			]
		}
	},
	"version": 1
}