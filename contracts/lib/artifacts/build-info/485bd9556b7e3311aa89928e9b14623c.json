{
	"id": "485bd9556b7e3311aa89928e9b14623c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/lib/BaseGameAsset.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\nimport \"./IGameAsset.sol\";\nimport \"./GameRegistry.sol\";\n/**\n * @title BaseGameAsset\n * @dev Abstract implementation of IGameAsset with core functionality\n */\nabstract contract BaseGameAsset is IGameAsset {\n    // Registry of games and their permissions\n    GameRegistry public immutable registry;\n    \n    // Attribute storage\n    mapping(uint256 => mapping(bytes32 => bytes)) private _attributes;\n    \n    // Token existence mapping\n    mapping(uint256 => bool) private _tokenExists;\n    \n    constructor(address registryAddress) {\n        registry = GameRegistry(registryAddress);\n    }\n\n\n    /// @dev Internal function to check if a token exists\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _tokenExists[tokenId];\n    }\n\n    /// @dev External function to check if a token exists\n    function exists(uint256 tokenId) external view override returns (bool) {\n        return _exists(tokenId);\n    }\n    \n    /// @notice Modifier to check if game is registered and has permission\n    modifier onlyRegisteredGame(bytes32[] calldata attributes) {\n        require(registry.isGameRegistered(msg.sender), \"Game not registered\");\n        bool hasPermission = registry.hasPermissions(address(0), msg.sender, attributes);\n        require(hasPermission, \"Missing permission\");\n        _;\n    }\n    \n    function setAttributes(\n        uint256 tokenId,\n        bytes32[] calldata attributes,\n        bytes[] calldata values\n    ) external override onlyRegisteredGame(attributes) {\n        require(attributes.length == values.length, \"Length mismatch\");\n        require(_exists(tokenId), \"Token doesn't exist\");\n        \n        for (uint i = 0; i < attributes.length; i++) {\n            _attributes[tokenId][attributes[i]] = values[i];\n            emit AttributeModified(tokenId, msg.sender, attributes[i], values[i]);\n        }\n    }\n    \n    function getAttributes(\n        uint256 tokenId,\n        bytes32[] calldata attributes\n    ) external view override returns (bytes[] memory) {\n        require(_exists(tokenId), \"Token doesn't exist\");\n        \n        bytes[] memory values = new bytes[](attributes.length);\n        for (uint i = 0; i < attributes.length; i++) {\n            values[i] = _attributes[tokenId][attributes[i]];\n        }\n        return values;\n    }\n}\n"
			},
			"contracts/lib/GameRegistry.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract GameRegistry is Ownable {\n    struct AssetPermission {\n        bool isRegistered;\n        bytes32[] allowedAttributes;\n    }\n\n    struct GameData {\n        bool isRegistered;\n        // Mapping: asset contract address => permissions\n        mapping(address => AssetPermission) assetPermissions;\n        uint256 registrationTime;\n        address registeredBy;\n    }\n\n    // Mapping: game address => game data\n    mapping(address => GameData) private games;\n    address[] public registeredGames;\n\n    event GameRegistered(address indexed game, address indexed registeredBy);\n    event GameUnregistered(address indexed game, address indexed unregisteredBy);\n    event AssetPermissionGranted(\n        address indexed game, \n        address indexed assetContract, \n        bytes32[] attributes\n    );\n    event AssetPermissionRevoked(\n        address indexed game, \n        address indexed assetContract\n    );\n\n    constructor() Ownable(msg.sender){}\n\n    /**\n     * @notice Register a new game\n     * @param game Address of the game to register\n     */\n    function registerGame(address game) external onlyOwner {\n        require(game != address(0), \"Invalid game address\");\n        require(!games[game].isRegistered, \"Game already registered\");\n        \n        games[game].isRegistered = true;\n        games[game].registrationTime = block.timestamp;\n        games[game].registeredBy = msg.sender;\n        \n        registeredGames.push(game);\n        emit GameRegistered(game, msg.sender);\n    }\n\n    /**\n     * @notice Grant permission to a game for specific asset contract attributes\n     * @param game Address of the game\n     * @param assetContract Address of the asset contract\n     * @param attributes Array of attribute IDs the game can modify\n     */\n    function grantAssetPermission(\n        address game,\n        address assetContract,\n        bytes32[] calldata attributes\n    ) external onlyOwner {\n        require(games[game].isRegistered, \"Game not registered\");\n        require(assetContract != address(0), \"Invalid asset contract\");\n        require(attributes.length > 0, \"No attributes specified\");\n\n        AssetPermission storage permission = games[game].assetPermissions[assetContract];\n        permission.isRegistered = true;\n        permission.allowedAttributes = attributes;\n\n        emit AssetPermissionGranted(game, assetContract, attributes);\n    }\n\n    /**\n     * @notice Revoke a game's permission for an asset contract\n     * @param game Address of the game\n     * @param assetContract Address of the asset contract\n     */\n    function revokeAssetPermission(\n        address game,\n        address assetContract\n    ) external onlyOwner {\n        require(games[game].isRegistered, \"Game not registered\");\n        require(games[game].assetPermissions[assetContract].isRegistered, \"Asset not registered for game\");\n\n        delete games[game].assetPermissions[assetContract];\n        emit AssetPermissionRevoked(game, assetContract);\n    }\n\n    /**\n     * @notice Check if a game is registered\n     * @param game Address of the game to check\n     */\n    function isGameRegistered(address game) external view returns (bool) {\n        return games[game].isRegistered;\n    }\n\n    /**\n     * @notice Get allowed attributes for a game and asset contract\n     * @param game Address of the game\n     * @param assetContract Address of the asset contract\n     * @return Array of allowed attribute IDs\n     */\n    function getGamePermissions(\n        address game,\n        address assetContract\n    ) external view returns (bytes32[] memory) {\n        require(games[game].isRegistered, \"Game not registered\");\n        require(games[game].assetPermissions[assetContract].isRegistered, \"Asset not registered for game\");\n        \n        return games[game].assetPermissions[assetContract].allowedAttributes;\n    }\n\n    /**\n     * @notice Check if a game has permission for specific attributes on an asset contract\n     * @param game Address of the game\n     * @param assetContract Address of the asset contract\n     * @param attributes Array of attribute IDs to check\n     * @return bool indicating if the game has all specified permissions\n     */\n    function hasPermissions(\n        address game,\n        address assetContract,\n        bytes32[] calldata attributes\n    ) external view returns (bool) {\n        if (!games[game].isRegistered || !games[game].assetPermissions[assetContract].isRegistered) {\n            return false;\n        }\n\n        bytes32[] storage allowedAttrs = games[game].assetPermissions[assetContract].allowedAttributes;\n        for (uint i = 0; i < attributes.length; i++) {\n            bool hasPermission = false;\n            for (uint j = 0; j < allowedAttrs.length; j++) {\n                if (attributes[i] == allowedAttrs[j]) {\n                    hasPermission = true;\n                    break;\n                }\n            }\n            if (!hasPermission) return false;\n        }\n        return true;\n    }\n\n    /**\n     * @notice Get all asset contracts a game has permissions for\n     * @param game Address of the game\n     * @return Array of asset contract addresses\n     */\n    function getGameAssetContracts(address game) external view returns (address[] memory) {\n        require(games[game].isRegistered, \"Game not registered\");\n        \n        // First count how many asset contracts the game has permissions for\n        uint256 count = 0;\n        for (uint i = 0; i < registeredGames.length; i++) {\n            if (games[game].assetPermissions[registeredGames[i]].isRegistered) {\n                count++;\n            }\n        }\n        \n        // Create and fill the array\n        address[] memory assetContracts = new address[](count);\n        uint256 index = 0;\n        for (uint i = 0; i < registeredGames.length; i++) {\n            if (games[game].assetPermissions[registeredGames[i]].isRegistered) {\n                assetContracts[index] = registeredGames[i];\n                index++;\n            }\n        }\n        \n        return assetContracts;\n    }\n}"
			},
			"contracts/lib/IGameAsset.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\n\n/**\n * @title IGameAsset\n * @dev Core interface for game assets with cross-game compatibility\n */\ninterface IGameAsset is IERC165, IERC721 {\n    /// @dev Emitted when an attribute is modified by a registered game\n    event AttributeModified(uint256 indexed tokenId, address indexed game, bytes32 indexed attributeId, bytes value);\n    \n    /// @notice Set attributes for a token\n    /// @param tokenId The ID of the token to modify\n    /// @param attributes List of attribute IDs to modify\n    /// @param values List of values for each attribute\n    function setAttributes(uint256 tokenId, bytes32[] calldata attributes, bytes[] calldata values) external;\n    \n    /// @notice Get attributes for a token\n    /// @param tokenId The ID of the token to query\n    /// @param attributes List of attribute IDs to query\n    function getAttributes(uint256 tokenId, bytes32[] calldata attributes) external view returns (bytes[] memory);\n\n    /// @notice Check if a token exists\n    /// @param tokenId The ID of the token to check\n    /// @return bool whether the token exists\n    function exists(uint256 tokenId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC-721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/lib/BaseGameAsset.sol": {
				"BaseGameAsset": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "game",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "attributeId",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "value",
									"type": "bytes"
								}
							],
							"name": "AttributeModified",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "exists",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes32[]",
									"name": "attributes",
									"type": "bytes32[]"
								}
							],
							"name": "getAttributes",
							"outputs": [
								{
									"internalType": "bytes[]",
									"name": "",
									"type": "bytes[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "registry",
							"outputs": [
								{
									"internalType": "contract GameRegistry",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes32[]",
									"name": "attributes",
									"type": "bytes32[]"
								},
								{
									"internalType": "bytes[]",
									"name": "values",
									"type": "bytes[]"
								}
							],
							"name": "setAttributes",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Abstract implementation of IGameAsset with core functionality",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"AttributeModified(uint256,address,bytes32,bytes)": {
								"details": "Emitted when an attribute is modified by a registered game"
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"exists(uint256)": {
								"details": "External function to check if a token exists"
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"getAttributes(uint256,bytes32[])": {
								"params": {
									"attributes": "List of attribute IDs to query",
									"tokenId": "The ID of the token to query"
								}
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"setAttributes(uint256,bytes32[],bytes[])": {
								"params": {
									"attributes": "List of attribute IDs to modify",
									"tokenId": "The ID of the token to modify",
									"values": "List of values for each attribute"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "BaseGameAsset",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"exists(uint256)": "4f558e79",
							"getApproved(uint256)": "081812fc",
							"getAttributes(uint256,bytes32[])": "0a35e3d7",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"registry()": "7b103999",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"setAttributes(uint256,bytes32[],bytes[])": "a122effb",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"game\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"attributeId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"AttributeModified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"attributes\",\"type\":\"bytes32[]\"}],\"name\":\"getAttributes\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"contract GameRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"attributes\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"values\",\"type\":\"bytes[]\"}],\"name\":\"setAttributes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Abstract implementation of IGameAsset with core functionality\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"AttributeModified(uint256,address,bytes32,bytes)\":{\"details\":\"Emitted when an attribute is modified by a registered game\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"exists(uint256)\":{\"details\":\"External function to check if a token exists\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"getAttributes(uint256,bytes32[])\":{\"params\":{\"attributes\":\"List of attribute IDs to query\",\"tokenId\":\"The ID of the token to query\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"setAttributes(uint256,bytes32[],bytes[])\":{\"params\":{\"attributes\":\"List of attribute IDs to modify\",\"tokenId\":\"The ID of the token to modify\",\"values\":\"List of values for each attribute\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"BaseGameAsset\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getAttributes(uint256,bytes32[])\":{\"notice\":\"Get attributes for a token\"},\"setAttributes(uint256,bytes32[],bytes[])\":{\"notice\":\"Set attributes for a token\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lib/BaseGameAsset.sol\":\"BaseGameAsset\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/lib/BaseGameAsset.sol\":{\"keccak256\":\"0x36911934dfd75fa1971a3ee62e7067e93a69ae2c7a458d6882b01fde7b703c8e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b30d0d5f345d3280b006c84fb350633be7c0aa495e4da22d84db6d7da85db3e\",\"dweb:/ipfs/Qmbq2gnxdQuYDr79eQbLXEtNs7tGgbS3ZYTsHFqvAEpCoC\"]},\"contracts/lib/GameRegistry.sol\":{\"keccak256\":\"0x80d3dde7a2868ed730d880229411e8a8adc4b52e0b1f53bfb232d9193210760f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bef4240092ed49176399ef7f0515b24f5dd4f83d2399899e8ab6af7f30511e6\",\"dweb:/ipfs/QmTR8q8NMpgEmaRPgQqDdvKoQVX51MPEiLYgzFuNwLvsCH\"]},\"contracts/lib/IGameAsset.sol\":{\"keccak256\":\"0xb81ced17f5fcd00bc0891d2e7bdc112d1ce521e7a88704af1d9095d6e825f880\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://238d27bbcee631693d0bac348a5a1fbcdb3f80a1fbc9acfc3eafd84cdfad22fb\",\"dweb:/ipfs/QmcyCZrCwXTYZBZ7iyHKZWuqhDFMMfC4DPJYxbpKQ2RQFw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 322,
								"contract": "contracts/lib/BaseGameAsset.sol:BaseGameAsset",
								"label": "_attributes",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_bytes32,t_bytes_storage))"
							},
							{
								"astId": 326,
								"contract": "contracts/lib/BaseGameAsset.sol:BaseGameAsset",
								"label": "_tokenExists",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_uint256,t_bool)"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_bytes_storage": {
								"encoding": "bytes",
								"label": "bytes",
								"numberOfBytes": "32"
							},
							"t_mapping(t_bytes32,t_bytes_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => bytes)",
								"numberOfBytes": "32",
								"value": "t_bytes_storage"
							},
							"t_mapping(t_uint256,t_bool)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_mapping(t_bytes32,t_bytes_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(bytes32 => bytes))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_bytes32,t_bytes_storage)"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"getAttributes(uint256,bytes32[])": {
								"notice": "Get attributes for a token"
							},
							"setAttributes(uint256,bytes32[],bytes[])": {
								"notice": "Set attributes for a token"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/lib/GameRegistry.sol": {
				"GameRegistry": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "game",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "assetContract",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes32[]",
									"name": "attributes",
									"type": "bytes32[]"
								}
							],
							"name": "AssetPermissionGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "game",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "assetContract",
									"type": "address"
								}
							],
							"name": "AssetPermissionRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "game",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "registeredBy",
									"type": "address"
								}
							],
							"name": "GameRegistered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "game",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "unregisteredBy",
									"type": "address"
								}
							],
							"name": "GameUnregistered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "game",
									"type": "address"
								}
							],
							"name": "getGameAssetContracts",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "game",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "assetContract",
									"type": "address"
								}
							],
							"name": "getGamePermissions",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "game",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "assetContract",
									"type": "address"
								},
								{
									"internalType": "bytes32[]",
									"name": "attributes",
									"type": "bytes32[]"
								}
							],
							"name": "grantAssetPermission",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "game",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "assetContract",
									"type": "address"
								},
								{
									"internalType": "bytes32[]",
									"name": "attributes",
									"type": "bytes32[]"
								}
							],
							"name": "hasPermissions",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "game",
									"type": "address"
								}
							],
							"name": "isGameRegistered",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "game",
									"type": "address"
								}
							],
							"name": "registerGame",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "registeredGames",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "game",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "assetContract",
									"type": "address"
								}
							],
							"name": "revokeAssetPermission",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"getGameAssetContracts(address)": {
								"params": {
									"game": "Address of the game"
								},
								"returns": {
									"_0": "Array of asset contract addresses"
								}
							},
							"getGamePermissions(address,address)": {
								"params": {
									"assetContract": "Address of the asset contract",
									"game": "Address of the game"
								},
								"returns": {
									"_0": "Array of allowed attribute IDs"
								}
							},
							"grantAssetPermission(address,address,bytes32[])": {
								"params": {
									"assetContract": "Address of the asset contract",
									"attributes": "Array of attribute IDs the game can modify",
									"game": "Address of the game"
								}
							},
							"hasPermissions(address,address,bytes32[])": {
								"params": {
									"assetContract": "Address of the asset contract",
									"attributes": "Array of attribute IDs to check",
									"game": "Address of the game"
								},
								"returns": {
									"_0": "bool indicating if the game has all specified permissions"
								}
							},
							"isGameRegistered(address)": {
								"params": {
									"game": "Address of the game to check"
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"registerGame(address)": {
								"params": {
									"game": "Address of the game to register"
								}
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"revokeAssetPermission(address,address)": {
								"params": {
									"assetContract": "Address of the asset contract",
									"game": "Address of the game"
								}
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/lib/GameRegistry.sol\":111:6144  contract GameRegistry is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/lib/GameRegistry.sol\":1031:1066  constructor() Ownable(msg.sender){} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/lib/GameRegistry.sol\":1053:1063  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_5\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_5:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_9)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/lib/GameRegistry.sol\":111:6144  contract GameRegistry is Ownable {... */\n  jump(tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:133   */\ntag_13:\n    /* \"#utility.yul\":44:51   */\n  0x00\n    /* \"#utility.yul\":84:126   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":77:82   */\n  dup3\n    /* \"#utility.yul\":73:127   */\n  and\n    /* \"#utility.yul\":62:127   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:133   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":139:235   */\ntag_14:\n    /* \"#utility.yul\":176:183   */\n  0x00\n    /* \"#utility.yul\":205:229   */\n  tag_19\n    /* \"#utility.yul\":223:228   */\n  dup3\n    /* \"#utility.yul\":205:229   */\n  tag_13\n  jump\t// in\ntag_19:\n    /* \"#utility.yul\":194:229   */\n  swap1\n  pop\n    /* \"#utility.yul\":139:235   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":241:359   */\ntag_15:\n    /* \"#utility.yul\":328:352   */\n  tag_21\n    /* \"#utility.yul\":346:351   */\n  dup2\n    /* \"#utility.yul\":328:352   */\n  tag_14\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":323:326   */\n  dup3\n    /* \"#utility.yul\":316:353   */\n  mstore\n    /* \"#utility.yul\":241:359   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":365:587   */\ntag_7:\n    /* \"#utility.yul\":458:462   */\n  0x00\n    /* \"#utility.yul\":496:498   */\n  0x20\n    /* \"#utility.yul\":485:494   */\n  dup3\n    /* \"#utility.yul\":481:499   */\n  add\n    /* \"#utility.yul\":473:499   */\n  swap1\n  pop\n    /* \"#utility.yul\":509:580   */\n  tag_23\n    /* \"#utility.yul\":577:578   */\n  0x00\n    /* \"#utility.yul\":566:575   */\n  dup4\n    /* \"#utility.yul\":562:579   */\n  add\n    /* \"#utility.yul\":553:559   */\n  dup5\n    /* \"#utility.yul\":509:580   */\n  tag_15\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":365:587   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/lib/GameRegistry.sol\":111:6144  contract GameRegistry is Ownable {... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/lib/GameRegistry.sol\":111:6144  contract GameRegistry is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x9b36057c\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x9e3c5a72\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xee658e45\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x36e9b39a\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x53c02924\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x57f623d0\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x64462142\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x6f6145f0\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/lib/GameRegistry.sol\":4286:5077  function hasPermissions(... */\n    tag_3:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      tag_18\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/lib/GameRegistry.sol\":3550:3946  function getGamePermissions(... */\n    tag_4:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/lib/GameRegistry.sol\":5253:6142  function getGameAssetContracts(address game) external view returns (address[] memory) {... */\n    tag_5:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/lib/GameRegistry.sol\":1881:2493  function grantAssetPermission(... */\n    tag_6:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_34:\n      tag_35\n      jump\t// in\n    tag_33:\n      stop\n        /* \"contracts/lib/GameRegistry.sol\":2676:3085  function revokeAssetPermission(... */\n    tag_7:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_37:\n      tag_38\n      jump\t// in\n    tag_36:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_8:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_9:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/lib/GameRegistry.sol\":1174:1613  function registerGame(address game) external onlyOwner {... */\n    tag_10:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n    tag_45:\n      stop\n        /* \"contracts/lib/GameRegistry.sol\":580:612  address[] public registeredGames */\n    tag_11:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/lib/GameRegistry.sol\":3200:3317  function isGameRegistered(address game) external view returns (bool) {... */\n    tag_12:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_13:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_58:\n      tag_59\n      jump\t// in\n    tag_57:\n      stop\n        /* \"contracts/lib/GameRegistry.sol\":4286:5077  function hasPermissions(... */\n    tag_18:\n        /* \"contracts/lib/GameRegistry.sol\":4431:4435  bool */\n      0x00\n        /* \"contracts/lib/GameRegistry.sol\":4452:4457  games */\n      0x01\n        /* \"contracts/lib/GameRegistry.sol\":4452:4463  games[game] */\n      0x00\n        /* \"contracts/lib/GameRegistry.sol\":4458:4462  game */\n      dup7\n        /* \"contracts/lib/GameRegistry.sol\":4452:4463  games[game] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/lib/GameRegistry.sol\":4452:4476  games[game].isRegistered */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/lib/GameRegistry.sol\":4451:4476  !games[game].isRegistered */\n      iszero\n        /* \"contracts/lib/GameRegistry.sol\":4451:4537  !games[game].isRegistered || !games[game].assetPermissions[assetContract].isRegistered */\n      dup1\n      tag_61\n      jumpi\n      pop\n        /* \"contracts/lib/GameRegistry.sol\":4481:4486  games */\n      0x01\n        /* \"contracts/lib/GameRegistry.sol\":4481:4492  games[game] */\n      0x00\n        /* \"contracts/lib/GameRegistry.sol\":4487:4491  game */\n      dup7\n        /* \"contracts/lib/GameRegistry.sol\":4481:4492  games[game] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/lib/GameRegistry.sol\":4481:4509  games[game].assetPermissions */\n      0x01\n      add\n        /* \"contracts/lib/GameRegistry.sol\":4481:4524  games[game].assetPermissions[assetContract] */\n      0x00\n        /* \"contracts/lib/GameRegistry.sol\":4510:4523  assetContract */\n      dup6\n        /* \"contracts/lib/GameRegistry.sol\":4481:4524  games[game].assetPermissions[assetContract] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/lib/GameRegistry.sol\":4481:4537  games[game].assetPermissions[assetContract].isRegistered */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/lib/GameRegistry.sol\":4480:4537  !games[game].assetPermissions[assetContract].isRegistered */\n      iszero\n        /* \"contracts/lib/GameRegistry.sol\":4451:4537  !games[game].isRegistered || !games[game].assetPermissions[assetContract].isRegistered */\n    tag_61:\n        /* \"contracts/lib/GameRegistry.sol\":4447:4576  if (!games[game].isRegistered || !games[game].assetPermissions[assetContract].isRegistered) {... */\n      iszero\n      tag_62\n      jumpi\n        /* \"contracts/lib/GameRegistry.sol\":4560:4565  false */\n      0x00\n        /* \"contracts/lib/GameRegistry.sol\":4553:4565  return false */\n      swap1\n      pop\n      jump(tag_60)\n        /* \"contracts/lib/GameRegistry.sol\":4447:4576  if (!games[game].isRegistered || !games[game].assetPermissions[assetContract].isRegistered) {... */\n    tag_62:\n        /* \"contracts/lib/GameRegistry.sol\":4586:4616  bytes32[] storage allowedAttrs */\n      0x00\n        /* \"contracts/lib/GameRegistry.sol\":4619:4624  games */\n      0x01\n        /* \"contracts/lib/GameRegistry.sol\":4619:4630  games[game] */\n      0x00\n        /* \"contracts/lib/GameRegistry.sol\":4625:4629  game */\n      dup8\n        /* \"contracts/lib/GameRegistry.sol\":4619:4630  games[game] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/lib/GameRegistry.sol\":4619:4647  games[game].assetPermissions */\n      0x01\n      add\n        /* \"contracts/lib/GameRegistry.sol\":4619:4662  games[game].assetPermissions[assetContract] */\n      0x00\n        /* \"contracts/lib/GameRegistry.sol\":4648:4661  assetContract */\n      dup7\n        /* \"contracts/lib/GameRegistry.sol\":4619:4662  games[game].assetPermissions[assetContract] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/lib/GameRegistry.sol\":4619:4680  games[game].assetPermissions[assetContract].allowedAttributes */\n      0x01\n      add\n        /* \"contracts/lib/GameRegistry.sol\":4586:4680  bytes32[] storage allowedAttrs = games[game].assetPermissions[assetContract].allowedAttributes */\n      swap1\n      pop\n        /* \"contracts/lib/GameRegistry.sol\":4695:4701  uint i */\n      0x00\n        /* \"contracts/lib/GameRegistry.sol\":4690:5050  for (uint i = 0; i < attributes.length; i++) {... */\n    tag_63:\n        /* \"contracts/lib/GameRegistry.sol\":4711:4721  attributes */\n      dup5\n      dup5\n        /* \"contracts/lib/GameRegistry.sol\":4711:4728  attributes.length */\n      swap1\n      pop\n        /* \"contracts/lib/GameRegistry.sol\":4707:4708  i */\n      dup2\n        /* \"contracts/lib/GameRegistry.sol\":4707:4728  i < attributes.length */\n      lt\n        /* \"contracts/lib/GameRegistry.sol\":4690:5050  for (uint i = 0; i < attributes.length; i++) {... */\n      iszero\n      tag_64\n      jumpi\n        /* \"contracts/lib/GameRegistry.sol\":4749:4767  bool hasPermission */\n      0x00\n        /* \"contracts/lib/GameRegistry.sol\":4794:4800  uint j */\n      dup1\n        /* \"contracts/lib/GameRegistry.sol\":4789:4994  for (uint j = 0; j < allowedAttrs.length; j++) {... */\n    tag_66:\n        /* \"contracts/lib/GameRegistry.sol\":4810:4822  allowedAttrs */\n      dup4\n        /* \"contracts/lib/GameRegistry.sol\":4810:4829  allowedAttrs.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/lib/GameRegistry.sol\":4806:4807  j */\n      dup2\n        /* \"contracts/lib/GameRegistry.sol\":4806:4829  j < allowedAttrs.length */\n      lt\n        /* \"contracts/lib/GameRegistry.sol\":4789:4994  for (uint j = 0; j < allowedAttrs.length; j++) {... */\n      iszero\n      tag_67\n      jumpi\n        /* \"contracts/lib/GameRegistry.sol\":4875:4887  allowedAttrs */\n      dup4\n        /* \"contracts/lib/GameRegistry.sol\":4888:4889  j */\n      dup2\n        /* \"contracts/lib/GameRegistry.sol\":4875:4890  allowedAttrs[j] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_69\n      jumpi\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n    tag_69:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"contracts/lib/GameRegistry.sol\":4858:4868  attributes */\n      dup8\n      dup8\n        /* \"contracts/lib/GameRegistry.sol\":4869:4870  i */\n      dup6\n        /* \"contracts/lib/GameRegistry.sol\":4858:4871  attributes[i] */\n      dup2\n      dup2\n      lt\n      tag_73\n      jumpi\n      tag_74\n      tag_71\n      jump\t// in\n    tag_74:\n    tag_73:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/lib/GameRegistry.sol\":4858:4890  attributes[i] == allowedAttrs[j] */\n      sub\n        /* \"contracts/lib/GameRegistry.sol\":4854:4980  if (attributes[i] == allowedAttrs[j]) {... */\n      tag_75\n      jumpi\n        /* \"contracts/lib/GameRegistry.sol\":4930:4934  true */\n      0x01\n        /* \"contracts/lib/GameRegistry.sol\":4914:4934  hasPermission = true */\n      swap2\n      pop\n        /* \"contracts/lib/GameRegistry.sol\":4956:4961  break */\n      jump(tag_67)\n        /* \"contracts/lib/GameRegistry.sol\":4854:4980  if (attributes[i] == allowedAttrs[j]) {... */\n    tag_75:\n        /* \"contracts/lib/GameRegistry.sol\":4831:4834  j++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/lib/GameRegistry.sol\":4789:4994  for (uint j = 0; j < allowedAttrs.length; j++) {... */\n      jump(tag_66)\n    tag_67:\n      pop\n        /* \"contracts/lib/GameRegistry.sol\":5012:5025  hasPermission */\n      dup1\n        /* \"contracts/lib/GameRegistry.sol\":5007:5039  if (!hasPermission) return false */\n      tag_76\n      jumpi\n        /* \"contracts/lib/GameRegistry.sol\":5034:5039  false */\n      0x00\n        /* \"contracts/lib/GameRegistry.sol\":5027:5039  return false */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_60)\n        /* \"contracts/lib/GameRegistry.sol\":5007:5039  if (!hasPermission) return false */\n    tag_76:\n        /* \"contracts/lib/GameRegistry.sol\":4735:5050  {... */\n      pop\n        /* \"contracts/lib/GameRegistry.sol\":4730:4733  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/lib/GameRegistry.sol\":4690:5050  for (uint i = 0; i < attributes.length; i++) {... */\n      jump(tag_63)\n    tag_64:\n      pop\n        /* \"contracts/lib/GameRegistry.sol\":5066:5070  true */\n      0x01\n        /* \"contracts/lib/GameRegistry.sol\":5059:5070  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/lib/GameRegistry.sol\":4286:5077  function hasPermissions(... */\n    tag_60:\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/lib/GameRegistry.sol\":3550:3946  function getGamePermissions(... */\n    tag_24:\n        /* \"contracts/lib/GameRegistry.sol\":3660:3676  bytes32[] memory */\n      0x60\n        /* \"contracts/lib/GameRegistry.sol\":3696:3701  games */\n      0x01\n        /* \"contracts/lib/GameRegistry.sol\":3696:3707  games[game] */\n      0x00\n        /* \"contracts/lib/GameRegistry.sol\":3702:3706  game */\n      dup5\n        /* \"contracts/lib/GameRegistry.sol\":3696:3707  games[game] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/lib/GameRegistry.sol\":3696:3720  games[game].isRegistered */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/lib/GameRegistry.sol\":3688:3744  require(games[game].isRegistered, \"Game not registered\") */\n      tag_78\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_79\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_78:\n        /* \"contracts/lib/GameRegistry.sol\":3762:3767  games */\n      0x01\n        /* \"contracts/lib/GameRegistry.sol\":3762:3773  games[game] */\n      0x00\n        /* \"contracts/lib/GameRegistry.sol\":3768:3772  game */\n      dup5\n        /* \"contracts/lib/GameRegistry.sol\":3762:3773  games[game] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/lib/GameRegistry.sol\":3762:3790  games[game].assetPermissions */\n      0x01\n      add\n        /* \"contracts/lib/GameRegistry.sol\":3762:3805  games[game].assetPermissions[assetContract] */\n      0x00\n        /* \"contracts/lib/GameRegistry.sol\":3791:3804  assetContract */\n      dup4\n        /* \"contracts/lib/GameRegistry.sol\":3762:3805  games[game].assetPermissions[assetContract] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/lib/GameRegistry.sol\":3762:3818  games[game].assetPermissions[assetContract].isRegistered */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/lib/GameRegistry.sol\":3754:3852  require(games[game].assetPermissions[assetContract].isRegistered, \"Asset not registered for game\") */\n      tag_81\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_81:\n        /* \"contracts/lib/GameRegistry.sol\":3878:3883  games */\n      0x01\n        /* \"contracts/lib/GameRegistry.sol\":3878:3889  games[game] */\n      0x00\n        /* \"contracts/lib/GameRegistry.sol\":3884:3888  game */\n      dup5\n        /* \"contracts/lib/GameRegistry.sol\":3878:3889  games[game] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/lib/GameRegistry.sol\":3878:3906  games[game].assetPermissions */\n      0x01\n      add\n        /* \"contracts/lib/GameRegistry.sol\":3878:3921  games[game].assetPermissions[assetContract] */\n      0x00\n        /* \"contracts/lib/GameRegistry.sol\":3907:3920  assetContract */\n      dup4\n        /* \"contracts/lib/GameRegistry.sol\":3878:3921  games[game].assetPermissions[assetContract] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/lib/GameRegistry.sol\":3878:3939  games[game].assetPermissions[assetContract].allowedAttributes */\n      0x01\n      add\n        /* \"contracts/lib/GameRegistry.sol\":3871:3939  return games[game].assetPermissions[assetContract].allowedAttributes */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_84\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_85:\n      dup2\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_85\n      jumpi\n    tag_84:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/lib/GameRegistry.sol\":3550:3946  function getGamePermissions(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/lib/GameRegistry.sol\":5253:6142  function getGameAssetContracts(address game) external view returns (address[] memory) {... */\n    tag_30:\n        /* \"contracts/lib/GameRegistry.sol\":5321:5337  address[] memory */\n      0x60\n        /* \"contracts/lib/GameRegistry.sol\":5357:5362  games */\n      0x01\n        /* \"contracts/lib/GameRegistry.sol\":5357:5368  games[game] */\n      0x00\n        /* \"contracts/lib/GameRegistry.sol\":5363:5367  game */\n      dup4\n        /* \"contracts/lib/GameRegistry.sol\":5357:5368  games[game] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/lib/GameRegistry.sol\":5357:5381  games[game].isRegistered */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/lib/GameRegistry.sol\":5349:5405  require(games[game].isRegistered, \"Game not registered\") */\n      tag_87\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_88\n      swap1\n      tag_80\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_87:\n        /* \"contracts/lib/GameRegistry.sol\":5501:5514  uint256 count */\n      0x00\n        /* \"contracts/lib/GameRegistry.sol\":5533:5539  uint i */\n      dup1\n        /* \"contracts/lib/GameRegistry.sol\":5528:5709  for (uint i = 0; i < registeredGames.length; i++) {... */\n    tag_89:\n        /* \"contracts/lib/GameRegistry.sol\":5549:5564  registeredGames */\n      0x02\n        /* \"contracts/lib/GameRegistry.sol\":5549:5571  registeredGames.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/lib/GameRegistry.sol\":5545:5546  i */\n      dup2\n        /* \"contracts/lib/GameRegistry.sol\":5545:5571  i < registeredGames.length */\n      lt\n        /* \"contracts/lib/GameRegistry.sol\":5528:5709  for (uint i = 0; i < registeredGames.length; i++) {... */\n      iszero\n      tag_90\n      jumpi\n        /* \"contracts/lib/GameRegistry.sol\":5596:5601  games */\n      0x01\n        /* \"contracts/lib/GameRegistry.sol\":5596:5607  games[game] */\n      0x00\n        /* \"contracts/lib/GameRegistry.sol\":5602:5606  game */\n      dup6\n        /* \"contracts/lib/GameRegistry.sol\":5596:5607  games[game] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/lib/GameRegistry.sol\":5596:5624  games[game].assetPermissions */\n      0x01\n      add\n        /* \"contracts/lib/GameRegistry.sol\":5596:5644  games[game].assetPermissions[registeredGames[i]] */\n      0x00\n        /* \"contracts/lib/GameRegistry.sol\":5625:5640  registeredGames */\n      0x02\n        /* \"contracts/lib/GameRegistry.sol\":5641:5642  i */\n      dup4\n        /* \"contracts/lib/GameRegistry.sol\":5625:5643  registeredGames[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_92\n      jumpi\n      tag_93\n      tag_71\n      jump\t// in\n    tag_93:\n    tag_92:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/lib/GameRegistry.sol\":5596:5644  games[game].assetPermissions[registeredGames[i]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/lib/GameRegistry.sol\":5596:5657  games[game].assetPermissions[registeredGames[i]].isRegistered */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/lib/GameRegistry.sol\":5592:5699  if (games[game].assetPermissions[registeredGames[i]].isRegistered) {... */\n      iszero\n      tag_95\n      jumpi\n        /* \"contracts/lib/GameRegistry.sol\":5677:5684  count++ */\n      dup2\n      dup1\n      tag_96\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n      swap3\n      pop\n      pop\n        /* \"contracts/lib/GameRegistry.sol\":5592:5699  if (games[game].assetPermissions[registeredGames[i]].isRegistered) {... */\n    tag_95:\n        /* \"contracts/lib/GameRegistry.sol\":5573:5576  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/lib/GameRegistry.sol\":5528:5709  for (uint i = 0; i < registeredGames.length; i++) {... */\n      jump(tag_89)\n    tag_90:\n      pop\n        /* \"contracts/lib/GameRegistry.sol\":5764:5795  address[] memory assetContracts */\n      0x00\n        /* \"contracts/lib/GameRegistry.sol\":5812:5817  count */\n      dup2\n        /* \"contracts/lib/GameRegistry.sol\":5798:5818  new address[](count) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_98\n      jumpi\n      tag_99\n      tag_100\n      jump\t// in\n    tag_99:\n    tag_98:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_101\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_101:\n      pop\n        /* \"contracts/lib/GameRegistry.sol\":5764:5818  address[] memory assetContracts = new address[](count) */\n      swap1\n      pop\n        /* \"contracts/lib/GameRegistry.sol\":5828:5841  uint256 index */\n      0x00\n        /* \"contracts/lib/GameRegistry.sol\":5860:5866  uint i */\n      dup1\n        /* \"contracts/lib/GameRegistry.sol\":5855:6096  for (uint i = 0; i < registeredGames.length; i++) {... */\n    tag_102:\n        /* \"contracts/lib/GameRegistry.sol\":5876:5891  registeredGames */\n      0x02\n        /* \"contracts/lib/GameRegistry.sol\":5876:5898  registeredGames.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/lib/GameRegistry.sol\":5872:5873  i */\n      dup2\n        /* \"contracts/lib/GameRegistry.sol\":5872:5898  i < registeredGames.length */\n      lt\n        /* \"contracts/lib/GameRegistry.sol\":5855:6096  for (uint i = 0; i < registeredGames.length; i++) {... */\n      iszero\n      tag_103\n      jumpi\n        /* \"contracts/lib/GameRegistry.sol\":5923:5928  games */\n      0x01\n        /* \"contracts/lib/GameRegistry.sol\":5923:5934  games[game] */\n      0x00\n        /* \"contracts/lib/GameRegistry.sol\":5929:5933  game */\n      dup8\n        /* \"contracts/lib/GameRegistry.sol\":5923:5934  games[game] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/lib/GameRegistry.sol\":5923:5951  games[game].assetPermissions */\n      0x01\n      add\n        /* \"contracts/lib/GameRegistry.sol\":5923:5971  games[game].assetPermissions[registeredGames[i]] */\n      0x00\n        /* \"contracts/lib/GameRegistry.sol\":5952:5967  registeredGames */\n      0x02\n        /* \"contracts/lib/GameRegistry.sol\":5968:5969  i */\n      dup4\n        /* \"contracts/lib/GameRegistry.sol\":5952:5970  registeredGames[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_105\n      jumpi\n      tag_106\n      tag_71\n      jump\t// in\n    tag_106:\n    tag_105:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/lib/GameRegistry.sol\":5923:5971  games[game].assetPermissions[registeredGames[i]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/lib/GameRegistry.sol\":5923:5984  games[game].assetPermissions[registeredGames[i]].isRegistered */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/lib/GameRegistry.sol\":5919:6086  if (games[game].assetPermissions[registeredGames[i]].isRegistered) {... */\n      iszero\n      tag_108\n      jumpi\n        /* \"contracts/lib/GameRegistry.sol\":6028:6043  registeredGames */\n      0x02\n        /* \"contracts/lib/GameRegistry.sol\":6044:6045  i */\n      dup2\n        /* \"contracts/lib/GameRegistry.sol\":6028:6046  registeredGames[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_109\n      jumpi\n      tag_110\n      tag_71\n      jump\t// in\n    tag_110:\n    tag_109:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/lib/GameRegistry.sol\":6004:6018  assetContracts */\n      dup4\n        /* \"contracts/lib/GameRegistry.sol\":6019:6024  index */\n      dup4\n        /* \"contracts/lib/GameRegistry.sol\":6004:6025  assetContracts[index] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_112\n      jumpi\n      tag_113\n      tag_71\n      jump\t// in\n    tag_113:\n    tag_112:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/lib/GameRegistry.sol\":6004:6046  assetContracts[index] = registeredGames[i] */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/lib/GameRegistry.sol\":6064:6071  index++ */\n      dup2\n      dup1\n      tag_114\n      swap1\n      tag_97\n      jump\t// in\n    tag_114:\n      swap3\n      pop\n      pop\n        /* \"contracts/lib/GameRegistry.sol\":5919:6086  if (games[game].assetPermissions[registeredGames[i]].isRegistered) {... */\n    tag_108:\n        /* \"contracts/lib/GameRegistry.sol\":5900:5903  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/lib/GameRegistry.sol\":5855:6096  for (uint i = 0; i < registeredGames.length; i++) {... */\n      jump(tag_102)\n    tag_103:\n      pop\n        /* \"contracts/lib/GameRegistry.sol\":6121:6135  assetContracts */\n      dup2\n        /* \"contracts/lib/GameRegistry.sol\":6114:6135  return assetContracts */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/lib/GameRegistry.sol\":5253:6142  function getGameAssetContracts(address game) external view returns (address[] memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/lib/GameRegistry.sol\":1881:2493  function grantAssetPermission(... */\n    tag_35:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_116\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_117\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_116:\n        /* \"contracts/lib/GameRegistry.sol\":2046:2051  games */\n      0x01\n        /* \"contracts/lib/GameRegistry.sol\":2046:2057  games[game] */\n      0x00\n        /* \"contracts/lib/GameRegistry.sol\":2052:2056  game */\n      dup6\n        /* \"contracts/lib/GameRegistry.sol\":2046:2057  games[game] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/lib/GameRegistry.sol\":2046:2070  games[game].isRegistered */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/lib/GameRegistry.sol\":2038:2094  require(games[game].isRegistered, \"Game not registered\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap1\n      tag_80\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_119:\n        /* \"contracts/lib/GameRegistry.sol\":2137:2138  0 */\n      0x00\n        /* \"contracts/lib/GameRegistry.sol\":2112:2139  assetContract != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/lib/GameRegistry.sol\":2112:2125  assetContract */\n      dup4\n        /* \"contracts/lib/GameRegistry.sol\":2112:2139  assetContract != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/lib/GameRegistry.sol\":2104:2166  require(assetContract != address(0), \"Invalid asset contract\") */\n      tag_121\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_122\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_121:\n        /* \"contracts/lib/GameRegistry.sol\":2204:2205  0 */\n      0x00\n        /* \"contracts/lib/GameRegistry.sol\":2184:2194  attributes */\n      dup3\n      dup3\n        /* \"contracts/lib/GameRegistry.sol\":2184:2201  attributes.length */\n      swap1\n      pop\n        /* \"contracts/lib/GameRegistry.sol\":2184:2205  attributes.length > 0 */\n      gt\n        /* \"contracts/lib/GameRegistry.sol\":2176:2233  require(attributes.length > 0, \"No attributes specified\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_124:\n        /* \"contracts/lib/GameRegistry.sol\":2244:2278  AssetPermission storage permission */\n      0x00\n        /* \"contracts/lib/GameRegistry.sol\":2281:2286  games */\n      0x01\n        /* \"contracts/lib/GameRegistry.sol\":2281:2292  games[game] */\n      0x00\n        /* \"contracts/lib/GameRegistry.sol\":2287:2291  game */\n      dup7\n        /* \"contracts/lib/GameRegistry.sol\":2281:2292  games[game] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/lib/GameRegistry.sol\":2281:2309  games[game].assetPermissions */\n      0x01\n      add\n        /* \"contracts/lib/GameRegistry.sol\":2281:2324  games[game].assetPermissions[assetContract] */\n      0x00\n        /* \"contracts/lib/GameRegistry.sol\":2310:2323  assetContract */\n      dup6\n        /* \"contracts/lib/GameRegistry.sol\":2281:2324  games[game].assetPermissions[assetContract] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/lib/GameRegistry.sol\":2244:2324  AssetPermission storage permission = games[game].assetPermissions[assetContract] */\n      swap1\n      pop\n        /* \"contracts/lib/GameRegistry.sol\":2360:2364  true */\n      0x01\n        /* \"contracts/lib/GameRegistry.sol\":2334:2344  permission */\n      dup2\n        /* \"contracts/lib/GameRegistry.sol\":2334:2357  permission.isRegistered */\n      0x00\n      add\n      0x00\n        /* \"contracts/lib/GameRegistry.sol\":2334:2364  permission.isRegistered = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/lib/GameRegistry.sol\":2405:2415  attributes */\n      dup3\n      dup3\n        /* \"contracts/lib/GameRegistry.sol\":2374:2384  permission */\n      dup3\n        /* \"contracts/lib/GameRegistry.sol\":2374:2402  permission.allowedAttributes */\n      0x01\n      add\n        /* \"contracts/lib/GameRegistry.sol\":2374:2415  permission.allowedAttributes = attributes */\n      swap2\n      swap1\n      tag_127\n      swap3\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n      pop\n        /* \"contracts/lib/GameRegistry.sol\":2460:2473  assetContract */\n      dup4\n        /* \"contracts/lib/GameRegistry.sol\":2431:2486  AssetPermissionGranted(game, assetContract, attributes) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/lib/GameRegistry.sol\":2454:2458  game */\n      dup6\n        /* \"contracts/lib/GameRegistry.sol\":2431:2486  AssetPermissionGranted(game, assetContract, attributes) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x5a1925924b0857ceb006f7400134cecccedb6ca75ecef791a1a109cf8890edae\n        /* \"contracts/lib/GameRegistry.sol\":2475:2485  attributes */\n      dup6\n      dup6\n        /* \"contracts/lib/GameRegistry.sol\":2431:2486  AssetPermissionGranted(game, assetContract, attributes) */\n      mload(0x40)\n      tag_129\n      swap3\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/lib/GameRegistry.sol\":2028:2493  {... */\n      pop\n        /* \"contracts/lib/GameRegistry.sol\":1881:2493  function grantAssetPermission(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/lib/GameRegistry.sol\":2676:3085  function revokeAssetPermission(... */\n    tag_38:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_132\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_117\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_132:\n        /* \"contracts/lib/GameRegistry.sol\":2803:2808  games */\n      0x01\n        /* \"contracts/lib/GameRegistry.sol\":2803:2814  games[game] */\n      0x00\n        /* \"contracts/lib/GameRegistry.sol\":2809:2813  game */\n      dup4\n        /* \"contracts/lib/GameRegistry.sol\":2803:2814  games[game] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/lib/GameRegistry.sol\":2803:2827  games[game].isRegistered */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/lib/GameRegistry.sol\":2795:2851  require(games[game].isRegistered, \"Game not registered\") */\n      tag_134\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_135\n      swap1\n      tag_80\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_134:\n        /* \"contracts/lib/GameRegistry.sol\":2869:2874  games */\n      0x01\n        /* \"contracts/lib/GameRegistry.sol\":2869:2880  games[game] */\n      0x00\n        /* \"contracts/lib/GameRegistry.sol\":2875:2879  game */\n      dup4\n        /* \"contracts/lib/GameRegistry.sol\":2869:2880  games[game] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/lib/GameRegistry.sol\":2869:2897  games[game].assetPermissions */\n      0x01\n      add\n        /* \"contracts/lib/GameRegistry.sol\":2869:2912  games[game].assetPermissions[assetContract] */\n      0x00\n        /* \"contracts/lib/GameRegistry.sol\":2898:2911  assetContract */\n      dup3\n        /* \"contracts/lib/GameRegistry.sol\":2869:2912  games[game].assetPermissions[assetContract] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/lib/GameRegistry.sol\":2869:2925  games[game].assetPermissions[assetContract].isRegistered */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/lib/GameRegistry.sol\":2861:2959  require(games[game].assetPermissions[assetContract].isRegistered, \"Asset not registered for game\") */\n      tag_136\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_137\n      swap1\n      tag_83\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_136:\n        /* \"contracts/lib/GameRegistry.sol\":2977:2982  games */\n      0x01\n        /* \"contracts/lib/GameRegistry.sol\":2977:2988  games[game] */\n      0x00\n        /* \"contracts/lib/GameRegistry.sol\":2983:2987  game */\n      dup4\n        /* \"contracts/lib/GameRegistry.sol\":2977:2988  games[game] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/lib/GameRegistry.sol\":2977:3005  games[game].assetPermissions */\n      0x01\n      add\n        /* \"contracts/lib/GameRegistry.sol\":2977:3020  games[game].assetPermissions[assetContract] */\n      0x00\n        /* \"contracts/lib/GameRegistry.sol\":3006:3019  assetContract */\n      dup3\n        /* \"contracts/lib/GameRegistry.sol\":2977:3020  games[game].assetPermissions[assetContract] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/lib/GameRegistry.sol\":2970:3020  delete games[game].assetPermissions[assetContract] */\n      dup1\n      dup3\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      swap1\n      0xff\n      mul\n      not\n      and\n      swap1\n      sstore\n      0x01\n      dup3\n      add\n      0x00\n      tag_138\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n    tag_138:\n      pop\n      pop\n        /* \"contracts/lib/GameRegistry.sol\":3064:3077  assetContract */\n      dup1\n        /* \"contracts/lib/GameRegistry.sol\":3035:3078  AssetPermissionRevoked(game, assetContract) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/lib/GameRegistry.sol\":3058:3062  game */\n      dup3\n        /* \"contracts/lib/GameRegistry.sol\":3035:3078  AssetPermissionRevoked(game, assetContract) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xb0b93a7d8a8ec4a98f21206af2d3af128fc5ba7b8df65991b7477766ed425622\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/lib/GameRegistry.sol\":2676:3085  function revokeAssetPermission(... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_141\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_117\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_141:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_143\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_144\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_143:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/lib/GameRegistry.sol\":1174:1613  function registerGame(address game) external onlyOwner {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_147\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_117\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_147:\n        /* \"contracts/lib/GameRegistry.sol\":1263:1264  0 */\n      0x00\n        /* \"contracts/lib/GameRegistry.sol\":1247:1265  game != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/lib/GameRegistry.sol\":1247:1251  game */\n      dup2\n        /* \"contracts/lib/GameRegistry.sol\":1247:1265  game != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/lib/GameRegistry.sol\":1239:1290  require(game != address(0), \"Invalid game address\") */\n      tag_149\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_150\n      swap1\n      tag_151\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_149:\n        /* \"contracts/lib/GameRegistry.sol\":1309:1314  games */\n      0x01\n        /* \"contracts/lib/GameRegistry.sol\":1309:1320  games[game] */\n      0x00\n        /* \"contracts/lib/GameRegistry.sol\":1315:1319  game */\n      dup3\n        /* \"contracts/lib/GameRegistry.sol\":1309:1320  games[game] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/lib/GameRegistry.sol\":1309:1333  games[game].isRegistered */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/lib/GameRegistry.sol\":1308:1333  !games[game].isRegistered */\n      iszero\n        /* \"contracts/lib/GameRegistry.sol\":1300:1361  require(!games[game].isRegistered, \"Game already registered\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap1\n      tag_154\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_152:\n        /* \"contracts/lib/GameRegistry.sol\":1407:1411  true */\n      0x01\n        /* \"contracts/lib/GameRegistry.sol\":1380:1385  games */\n      dup1\n        /* \"contracts/lib/GameRegistry.sol\":1380:1391  games[game] */\n      0x00\n        /* \"contracts/lib/GameRegistry.sol\":1386:1390  game */\n      dup4\n        /* \"contracts/lib/GameRegistry.sol\":1380:1391  games[game] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/lib/GameRegistry.sol\":1380:1404  games[game].isRegistered */\n      0x00\n      add\n      0x00\n        /* \"contracts/lib/GameRegistry.sol\":1380:1411  games[game].isRegistered = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/lib/GameRegistry.sol\":1452:1467  block.timestamp */\n      timestamp\n        /* \"contracts/lib/GameRegistry.sol\":1421:1426  games */\n      0x01\n        /* \"contracts/lib/GameRegistry.sol\":1421:1432  games[game] */\n      0x00\n        /* \"contracts/lib/GameRegistry.sol\":1427:1431  game */\n      dup4\n        /* \"contracts/lib/GameRegistry.sol\":1421:1432  games[game] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/lib/GameRegistry.sol\":1421:1449  games[game].registrationTime */\n      0x02\n      add\n        /* \"contracts/lib/GameRegistry.sol\":1421:1467  games[game].registrationTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/lib/GameRegistry.sol\":1504:1514  msg.sender */\n      caller\n        /* \"contracts/lib/GameRegistry.sol\":1477:1482  games */\n      0x01\n        /* \"contracts/lib/GameRegistry.sol\":1477:1488  games[game] */\n      0x00\n        /* \"contracts/lib/GameRegistry.sol\":1483:1487  game */\n      dup4\n        /* \"contracts/lib/GameRegistry.sol\":1477:1488  games[game] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/lib/GameRegistry.sol\":1477:1501  games[game].registeredBy */\n      0x03\n      add\n      0x00\n        /* \"contracts/lib/GameRegistry.sol\":1477:1514  games[game].registeredBy = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/lib/GameRegistry.sol\":1533:1548  registeredGames */\n      0x02\n        /* \"contracts/lib/GameRegistry.sol\":1554:1558  game */\n      dup2\n        /* \"contracts/lib/GameRegistry.sol\":1533:1559  registeredGames.push(game) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/lib/GameRegistry.sol\":1595:1605  msg.sender */\n      caller\n        /* \"contracts/lib/GameRegistry.sol\":1574:1606  GameRegistered(game, msg.sender) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/lib/GameRegistry.sol\":1589:1593  game */\n      dup2\n        /* \"contracts/lib/GameRegistry.sol\":1574:1606  GameRegistered(game, msg.sender) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x076eada2b266f926d3ecb187dece20428d68db62016c04bea8ccb92679f788de\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/lib/GameRegistry.sol\":1174:1613  function registerGame(address game) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/lib/GameRegistry.sol\":580:612  address[] public registeredGames */\n    tag_51:\n      0x02\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_156\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_156:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/lib/GameRegistry.sol\":3200:3317  function isGameRegistered(address game) external view returns (bool) {... */\n    tag_55:\n        /* \"contracts/lib/GameRegistry.sol\":3263:3267  bool */\n      0x00\n        /* \"contracts/lib/GameRegistry.sol\":3286:3291  games */\n      0x01\n        /* \"contracts/lib/GameRegistry.sol\":3286:3297  games[game] */\n      0x00\n        /* \"contracts/lib/GameRegistry.sol\":3292:3296  game */\n      dup4\n        /* \"contracts/lib/GameRegistry.sol\":3286:3297  games[game] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/lib/GameRegistry.sol\":3286:3310  games[game].isRegistered */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/lib/GameRegistry.sol\":3279:3310  return games[game].isRegistered */\n      swap1\n      pop\n        /* \"contracts/lib/GameRegistry.sol\":3200:3317  function isGameRegistered(address game) external view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_59:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_160\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_117\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_160:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_162\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_163\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_162:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_164\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_144\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_164:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_117:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_166\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_167\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_166:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_168\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_42\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_168:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_169\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_170\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_167\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_170:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_169:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_144:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_167:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n    tag_128:\n      dup3\n      dup1\n      sload\n      dup3\n      dup3\n      sstore\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      add\n      swap3\n      dup3\n      iszero\n      tag_174\n      jumpi\n      swap2\n      0x20\n      mul\n      dup3\n      add\n    tag_175:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_176\n      jumpi\n      dup3\n      calldataload\n      dup3\n      sstore\n      swap2\n      0x20\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_175)\n    tag_176:\n    tag_174:\n      pop\n      swap1\n      pop\n      tag_177\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_177:\n      pop\n      swap1\n      jump\t// out\n    tag_139:\n      pop\n      dup1\n      sload\n      0x00\n      dup3\n      sstore\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      add\n      swap1\n      tag_180\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_180:\n      pop\n      jump\t// out\n    tag_178:\n    tag_181:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_182\n      jumpi\n      0x00\n      dup2\n      0x00\n      swap1\n      sstore\n      pop\n      0x01\n      add\n      jump(tag_181)\n    tag_182:\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_184:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_185:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_186:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_187:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_238\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_186\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_188:\n        /* \"#utility.yul\":641:665   */\n      tag_240\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_187\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_241\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_241:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_189:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_243\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_188\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:958   */\n    tag_190:\n        /* \"#utility.yul\":950:951   */\n      0x00\n        /* \"#utility.yul\":947:948   */\n      dup1\n        /* \"#utility.yul\":940:952   */\n      revert\n        /* \"#utility.yul\":964:1081   */\n    tag_191:\n        /* \"#utility.yul\":1073:1074   */\n      0x00\n        /* \"#utility.yul\":1070:1071   */\n      dup1\n        /* \"#utility.yul\":1063:1075   */\n      revert\n        /* \"#utility.yul\":1087:1204   */\n    tag_192:\n        /* \"#utility.yul\":1196:1197   */\n      0x00\n        /* \"#utility.yul\":1193:1194   */\n      dup1\n        /* \"#utility.yul\":1186:1198   */\n      revert\n        /* \"#utility.yul\":1227:1795   */\n    tag_193:\n        /* \"#utility.yul\":1300:1308   */\n      0x00\n        /* \"#utility.yul\":1310:1316   */\n      dup1\n        /* \"#utility.yul\":1360:1363   */\n      dup4\n        /* \"#utility.yul\":1353:1357   */\n      0x1f\n        /* \"#utility.yul\":1345:1351   */\n      dup5\n        /* \"#utility.yul\":1341:1358   */\n      add\n        /* \"#utility.yul\":1337:1364   */\n      slt\n        /* \"#utility.yul\":1327:1449   */\n      tag_248\n      jumpi\n        /* \"#utility.yul\":1368:1447   */\n      tag_249\n      tag_190\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":1327:1449   */\n    tag_248:\n        /* \"#utility.yul\":1481:1487   */\n      dup3\n        /* \"#utility.yul\":1468:1488   */\n      calldataload\n        /* \"#utility.yul\":1458:1488   */\n      swap1\n      pop\n        /* \"#utility.yul\":1511:1529   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1503:1509   */\n      dup2\n        /* \"#utility.yul\":1500:1530   */\n      gt\n        /* \"#utility.yul\":1497:1614   */\n      iszero\n      tag_250\n      jumpi\n        /* \"#utility.yul\":1533:1612   */\n      tag_251\n      tag_191\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":1497:1614   */\n    tag_250:\n        /* \"#utility.yul\":1647:1651   */\n      0x20\n        /* \"#utility.yul\":1639:1645   */\n      dup4\n        /* \"#utility.yul\":1635:1652   */\n      add\n        /* \"#utility.yul\":1623:1652   */\n      swap2\n      pop\n        /* \"#utility.yul\":1701:1704   */\n      dup4\n        /* \"#utility.yul\":1693:1697   */\n      0x20\n        /* \"#utility.yul\":1685:1691   */\n      dup3\n        /* \"#utility.yul\":1681:1698   */\n      mul\n        /* \"#utility.yul\":1671:1679   */\n      dup4\n        /* \"#utility.yul\":1667:1699   */\n      add\n        /* \"#utility.yul\":1664:1705   */\n      gt\n        /* \"#utility.yul\":1661:1789   */\n      iszero\n      tag_252\n      jumpi\n        /* \"#utility.yul\":1708:1787   */\n      tag_253\n      tag_192\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":1661:1789   */\n    tag_252:\n        /* \"#utility.yul\":1227:1795   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1801:2650   */\n    tag_17:\n        /* \"#utility.yul\":1905:1911   */\n      0x00\n        /* \"#utility.yul\":1913:1919   */\n      dup1\n        /* \"#utility.yul\":1921:1927   */\n      0x00\n        /* \"#utility.yul\":1929:1935   */\n      dup1\n        /* \"#utility.yul\":1978:1980   */\n      0x60\n        /* \"#utility.yul\":1966:1975   */\n      dup6\n        /* \"#utility.yul\":1957:1964   */\n      dup8\n        /* \"#utility.yul\":1953:1976   */\n      sub\n        /* \"#utility.yul\":1949:1981   */\n      slt\n        /* \"#utility.yul\":1946:2065   */\n      iszero\n      tag_255\n      jumpi\n        /* \"#utility.yul\":1984:2063   */\n      tag_256\n      tag_184\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":1946:2065   */\n    tag_255:\n        /* \"#utility.yul\":2104:2105   */\n      0x00\n        /* \"#utility.yul\":2129:2182   */\n      tag_257\n        /* \"#utility.yul\":2174:2181   */\n      dup8\n        /* \"#utility.yul\":2165:2171   */\n      dup3\n        /* \"#utility.yul\":2154:2163   */\n      dup9\n        /* \"#utility.yul\":2150:2172   */\n      add\n        /* \"#utility.yul\":2129:2182   */\n      tag_189\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":2119:2182   */\n      swap5\n      pop\n        /* \"#utility.yul\":2075:2192   */\n      pop\n        /* \"#utility.yul\":2231:2233   */\n      0x20\n        /* \"#utility.yul\":2257:2310   */\n      tag_258\n        /* \"#utility.yul\":2302:2309   */\n      dup8\n        /* \"#utility.yul\":2293:2299   */\n      dup3\n        /* \"#utility.yul\":2282:2291   */\n      dup9\n        /* \"#utility.yul\":2278:2300   */\n      add\n        /* \"#utility.yul\":2257:2310   */\n      tag_189\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":2247:2310   */\n      swap4\n      pop\n        /* \"#utility.yul\":2202:2320   */\n      pop\n        /* \"#utility.yul\":2387:2389   */\n      0x40\n        /* \"#utility.yul\":2376:2385   */\n      dup6\n        /* \"#utility.yul\":2372:2390   */\n      add\n        /* \"#utility.yul\":2359:2391   */\n      calldataload\n        /* \"#utility.yul\":2418:2436   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2410:2416   */\n      dup2\n        /* \"#utility.yul\":2407:2437   */\n      gt\n        /* \"#utility.yul\":2404:2521   */\n      iszero\n      tag_259\n      jumpi\n        /* \"#utility.yul\":2440:2519   */\n      tag_260\n      tag_185\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":2404:2521   */\n    tag_259:\n        /* \"#utility.yul\":2553:2633   */\n      tag_261\n        /* \"#utility.yul\":2625:2632   */\n      dup8\n        /* \"#utility.yul\":2616:2622   */\n      dup3\n        /* \"#utility.yul\":2605:2614   */\n      dup9\n        /* \"#utility.yul\":2601:2623   */\n      add\n        /* \"#utility.yul\":2553:2633   */\n      tag_193\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":2535:2633   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":2330:2643   */\n      pop\n        /* \"#utility.yul\":1801:2650   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2656:2746   */\n    tag_194:\n        /* \"#utility.yul\":2690:2697   */\n      0x00\n        /* \"#utility.yul\":2733:2738   */\n      dup2\n        /* \"#utility.yul\":2726:2739   */\n      iszero\n        /* \"#utility.yul\":2719:2740   */\n      iszero\n        /* \"#utility.yul\":2708:2740   */\n      swap1\n      pop\n        /* \"#utility.yul\":2656:2746   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2752:2861   */\n    tag_195:\n        /* \"#utility.yul\":2833:2854   */\n      tag_264\n        /* \"#utility.yul\":2848:2853   */\n      dup2\n        /* \"#utility.yul\":2833:2854   */\n      tag_194\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":2828:2831   */\n      dup3\n        /* \"#utility.yul\":2821:2855   */\n      mstore\n        /* \"#utility.yul\":2752:2861   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2867:3077   */\n    tag_20:\n        /* \"#utility.yul\":2954:2958   */\n      0x00\n        /* \"#utility.yul\":2992:2994   */\n      0x20\n        /* \"#utility.yul\":2981:2990   */\n      dup3\n        /* \"#utility.yul\":2977:2995   */\n      add\n        /* \"#utility.yul\":2969:2995   */\n      swap1\n      pop\n        /* \"#utility.yul\":3005:3070   */\n      tag_266\n        /* \"#utility.yul\":3067:3068   */\n      0x00\n        /* \"#utility.yul\":3056:3065   */\n      dup4\n        /* \"#utility.yul\":3052:3069   */\n      add\n        /* \"#utility.yul\":3043:3049   */\n      dup5\n        /* \"#utility.yul\":3005:3070   */\n      tag_195\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":2867:3077   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3083:3557   */\n    tag_23:\n        /* \"#utility.yul\":3151:3157   */\n      0x00\n        /* \"#utility.yul\":3159:3165   */\n      dup1\n        /* \"#utility.yul\":3208:3210   */\n      0x40\n        /* \"#utility.yul\":3196:3205   */\n      dup4\n        /* \"#utility.yul\":3187:3194   */\n      dup6\n        /* \"#utility.yul\":3183:3206   */\n      sub\n        /* \"#utility.yul\":3179:3211   */\n      slt\n        /* \"#utility.yul\":3176:3295   */\n      iszero\n      tag_268\n      jumpi\n        /* \"#utility.yul\":3214:3293   */\n      tag_269\n      tag_184\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":3176:3295   */\n    tag_268:\n        /* \"#utility.yul\":3334:3335   */\n      0x00\n        /* \"#utility.yul\":3359:3412   */\n      tag_270\n        /* \"#utility.yul\":3404:3411   */\n      dup6\n        /* \"#utility.yul\":3395:3401   */\n      dup3\n        /* \"#utility.yul\":3384:3393   */\n      dup7\n        /* \"#utility.yul\":3380:3402   */\n      add\n        /* \"#utility.yul\":3359:3412   */\n      tag_189\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":3349:3412   */\n      swap3\n      pop\n        /* \"#utility.yul\":3305:3422   */\n      pop\n        /* \"#utility.yul\":3461:3463   */\n      0x20\n        /* \"#utility.yul\":3487:3540   */\n      tag_271\n        /* \"#utility.yul\":3532:3539   */\n      dup6\n        /* \"#utility.yul\":3523:3529   */\n      dup3\n        /* \"#utility.yul\":3512:3521   */\n      dup7\n        /* \"#utility.yul\":3508:3530   */\n      add\n        /* \"#utility.yul\":3487:3540   */\n      tag_189\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":3477:3540   */\n      swap2\n      pop\n        /* \"#utility.yul\":3432:3550   */\n      pop\n        /* \"#utility.yul\":3083:3557   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3563:3677   */\n    tag_196:\n        /* \"#utility.yul\":3630:3636   */\n      0x00\n        /* \"#utility.yul\":3664:3669   */\n      dup2\n        /* \"#utility.yul\":3658:3670   */\n      mload\n        /* \"#utility.yul\":3648:3670   */\n      swap1\n      pop\n        /* \"#utility.yul\":3563:3677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3683:3867   */\n    tag_197:\n        /* \"#utility.yul\":3782:3793   */\n      0x00\n        /* \"#utility.yul\":3816:3822   */\n      dup3\n        /* \"#utility.yul\":3811:3814   */\n      dup3\n        /* \"#utility.yul\":3804:3823   */\n      mstore\n        /* \"#utility.yul\":3856:3860   */\n      0x20\n        /* \"#utility.yul\":3851:3854   */\n      dup3\n        /* \"#utility.yul\":3847:3861   */\n      add\n        /* \"#utility.yul\":3832:3861   */\n      swap1\n      pop\n        /* \"#utility.yul\":3683:3867   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3873:4005   */\n    tag_198:\n        /* \"#utility.yul\":3940:3944   */\n      0x00\n        /* \"#utility.yul\":3963:3966   */\n      dup2\n        /* \"#utility.yul\":3955:3966   */\n      swap1\n      pop\n        /* \"#utility.yul\":3993:3997   */\n      0x20\n        /* \"#utility.yul\":3988:3991   */\n      dup3\n        /* \"#utility.yul\":3984:3998   */\n      add\n        /* \"#utility.yul\":3976:3998   */\n      swap1\n      pop\n        /* \"#utility.yul\":3873:4005   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4011:4088   */\n    tag_199:\n        /* \"#utility.yul\":4048:4055   */\n      0x00\n        /* \"#utility.yul\":4077:4082   */\n      dup2\n        /* \"#utility.yul\":4066:4082   */\n      swap1\n      pop\n        /* \"#utility.yul\":4011:4088   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4094:4202   */\n    tag_200:\n        /* \"#utility.yul\":4171:4195   */\n      tag_277\n        /* \"#utility.yul\":4189:4194   */\n      dup2\n        /* \"#utility.yul\":4171:4195   */\n      tag_199\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":4166:4169   */\n      dup3\n        /* \"#utility.yul\":4159:4196   */\n      mstore\n        /* \"#utility.yul\":4094:4202   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4208:4387   */\n    tag_201:\n        /* \"#utility.yul\":4277:4287   */\n      0x00\n        /* \"#utility.yul\":4298:4344   */\n      tag_279\n        /* \"#utility.yul\":4340:4343   */\n      dup4\n        /* \"#utility.yul\":4332:4338   */\n      dup4\n        /* \"#utility.yul\":4298:4344   */\n      tag_200\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":4376:4380   */\n      0x20\n        /* \"#utility.yul\":4371:4374   */\n      dup4\n        /* \"#utility.yul\":4367:4381   */\n      add\n        /* \"#utility.yul\":4353:4381   */\n      swap1\n      pop\n        /* \"#utility.yul\":4208:4387   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4393:4506   */\n    tag_202:\n        /* \"#utility.yul\":4463:4467   */\n      0x00\n        /* \"#utility.yul\":4495:4499   */\n      0x20\n        /* \"#utility.yul\":4490:4493   */\n      dup3\n        /* \"#utility.yul\":4486:4500   */\n      add\n        /* \"#utility.yul\":4478:4500   */\n      swap1\n      pop\n        /* \"#utility.yul\":4393:4506   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4542:5274   */\n    tag_203:\n        /* \"#utility.yul\":4661:4664   */\n      0x00\n        /* \"#utility.yul\":4690:4744   */\n      tag_282\n        /* \"#utility.yul\":4738:4743   */\n      dup3\n        /* \"#utility.yul\":4690:4744   */\n      tag_196\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":4760:4846   */\n      tag_283\n        /* \"#utility.yul\":4839:4845   */\n      dup2\n        /* \"#utility.yul\":4834:4837   */\n      dup6\n        /* \"#utility.yul\":4760:4846   */\n      tag_197\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":4753:4846   */\n      swap4\n      pop\n        /* \"#utility.yul\":4870:4926   */\n      tag_284\n        /* \"#utility.yul\":4920:4925   */\n      dup4\n        /* \"#utility.yul\":4870:4926   */\n      tag_198\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":4949:4956   */\n      dup1\n        /* \"#utility.yul\":4980:4981   */\n      0x00\n        /* \"#utility.yul\":4965:5249   */\n    tag_285:\n        /* \"#utility.yul\":4990:4996   */\n      dup4\n        /* \"#utility.yul\":4987:4988   */\n      dup2\n        /* \"#utility.yul\":4984:4997   */\n      lt\n        /* \"#utility.yul\":4965:5249   */\n      iszero\n      tag_287\n      jumpi\n        /* \"#utility.yul\":5066:5072   */\n      dup2\n        /* \"#utility.yul\":5060:5073   */\n      mload\n        /* \"#utility.yul\":5093:5156   */\n      tag_288\n        /* \"#utility.yul\":5152:5155   */\n      dup9\n        /* \"#utility.yul\":5137:5150   */\n      dup3\n        /* \"#utility.yul\":5093:5156   */\n      tag_201\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":5086:5156   */\n      swap8\n      pop\n        /* \"#utility.yul\":5179:5239   */\n      tag_289\n        /* \"#utility.yul\":5232:5238   */\n      dup4\n        /* \"#utility.yul\":5179:5239   */\n      tag_202\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":5169:5239   */\n      swap3\n      pop\n        /* \"#utility.yul\":5025:5249   */\n      pop\n        /* \"#utility.yul\":5012:5013   */\n      0x01\n        /* \"#utility.yul\":5009:5010   */\n      dup2\n        /* \"#utility.yul\":5005:5014   */\n      add\n        /* \"#utility.yul\":5000:5014   */\n      swap1\n      pop\n        /* \"#utility.yul\":4965:5249   */\n      jump(tag_285)\n    tag_287:\n        /* \"#utility.yul\":4969:4983   */\n      pop\n        /* \"#utility.yul\":5265:5268   */\n      dup6\n        /* \"#utility.yul\":5258:5268   */\n      swap4\n      pop\n        /* \"#utility.yul\":4666:5274   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":4542:5274   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5280:5653   */\n    tag_26:\n        /* \"#utility.yul\":5423:5427   */\n      0x00\n        /* \"#utility.yul\":5461:5463   */\n      0x20\n        /* \"#utility.yul\":5450:5459   */\n      dup3\n        /* \"#utility.yul\":5446:5464   */\n      add\n        /* \"#utility.yul\":5438:5464   */\n      swap1\n      pop\n        /* \"#utility.yul\":5510:5519   */\n      dup2\n        /* \"#utility.yul\":5504:5508   */\n      dup2\n        /* \"#utility.yul\":5500:5520   */\n      sub\n        /* \"#utility.yul\":5496:5497   */\n      0x00\n        /* \"#utility.yul\":5485:5494   */\n      dup4\n        /* \"#utility.yul\":5481:5498   */\n      add\n        /* \"#utility.yul\":5474:5521   */\n      mstore\n        /* \"#utility.yul\":5538:5646   */\n      tag_291\n        /* \"#utility.yul\":5641:5645   */\n      dup2\n        /* \"#utility.yul\":5632:5638   */\n      dup5\n        /* \"#utility.yul\":5538:5646   */\n      tag_203\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":5530:5646   */\n      swap1\n      pop\n        /* \"#utility.yul\":5280:5653   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5659:5988   */\n    tag_29:\n        /* \"#utility.yul\":5718:5724   */\n      0x00\n        /* \"#utility.yul\":5767:5769   */\n      0x20\n        /* \"#utility.yul\":5755:5764   */\n      dup3\n        /* \"#utility.yul\":5746:5753   */\n      dup5\n        /* \"#utility.yul\":5742:5765   */\n      sub\n        /* \"#utility.yul\":5738:5770   */\n      slt\n        /* \"#utility.yul\":5735:5854   */\n      iszero\n      tag_293\n      jumpi\n        /* \"#utility.yul\":5773:5852   */\n      tag_294\n      tag_184\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":5735:5854   */\n    tag_293:\n        /* \"#utility.yul\":5893:5894   */\n      0x00\n        /* \"#utility.yul\":5918:5971   */\n      tag_295\n        /* \"#utility.yul\":5963:5970   */\n      dup5\n        /* \"#utility.yul\":5954:5960   */\n      dup3\n        /* \"#utility.yul\":5943:5952   */\n      dup6\n        /* \"#utility.yul\":5939:5961   */\n      add\n        /* \"#utility.yul\":5918:5971   */\n      tag_189\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":5908:5971   */\n      swap2\n      pop\n        /* \"#utility.yul\":5864:5981   */\n      pop\n        /* \"#utility.yul\":5659:5988   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5994:6108   */\n    tag_204:\n        /* \"#utility.yul\":6061:6067   */\n      0x00\n        /* \"#utility.yul\":6095:6100   */\n      dup2\n        /* \"#utility.yul\":6089:6101   */\n      mload\n        /* \"#utility.yul\":6079:6101   */\n      swap1\n      pop\n        /* \"#utility.yul\":5994:6108   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6114:6298   */\n    tag_205:\n        /* \"#utility.yul\":6213:6224   */\n      0x00\n        /* \"#utility.yul\":6247:6253   */\n      dup3\n        /* \"#utility.yul\":6242:6245   */\n      dup3\n        /* \"#utility.yul\":6235:6254   */\n      mstore\n        /* \"#utility.yul\":6287:6291   */\n      0x20\n        /* \"#utility.yul\":6282:6285   */\n      dup3\n        /* \"#utility.yul\":6278:6292   */\n      add\n        /* \"#utility.yul\":6263:6292   */\n      swap1\n      pop\n        /* \"#utility.yul\":6114:6298   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6304:6436   */\n    tag_206:\n        /* \"#utility.yul\":6371:6375   */\n      0x00\n        /* \"#utility.yul\":6394:6397   */\n      dup2\n        /* \"#utility.yul\":6386:6397   */\n      swap1\n      pop\n        /* \"#utility.yul\":6424:6428   */\n      0x20\n        /* \"#utility.yul\":6419:6422   */\n      dup3\n        /* \"#utility.yul\":6415:6429   */\n      add\n        /* \"#utility.yul\":6407:6429   */\n      swap1\n      pop\n        /* \"#utility.yul\":6304:6436   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6442:6550   */\n    tag_207:\n        /* \"#utility.yul\":6519:6543   */\n      tag_300\n        /* \"#utility.yul\":6537:6542   */\n      dup2\n        /* \"#utility.yul\":6519:6543   */\n      tag_187\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":6514:6517   */\n      dup3\n        /* \"#utility.yul\":6507:6544   */\n      mstore\n        /* \"#utility.yul\":6442:6550   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6556:6735   */\n    tag_208:\n        /* \"#utility.yul\":6625:6635   */\n      0x00\n        /* \"#utility.yul\":6646:6692   */\n      tag_302\n        /* \"#utility.yul\":6688:6691   */\n      dup4\n        /* \"#utility.yul\":6680:6686   */\n      dup4\n        /* \"#utility.yul\":6646:6692   */\n      tag_207\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":6724:6728   */\n      0x20\n        /* \"#utility.yul\":6719:6722   */\n      dup4\n        /* \"#utility.yul\":6715:6729   */\n      add\n        /* \"#utility.yul\":6701:6729   */\n      swap1\n      pop\n        /* \"#utility.yul\":6556:6735   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6741:6854   */\n    tag_209:\n        /* \"#utility.yul\":6811:6815   */\n      0x00\n        /* \"#utility.yul\":6843:6847   */\n      0x20\n        /* \"#utility.yul\":6838:6841   */\n      dup3\n        /* \"#utility.yul\":6834:6848   */\n      add\n        /* \"#utility.yul\":6826:6848   */\n      swap1\n      pop\n        /* \"#utility.yul\":6741:6854   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6890:7622   */\n    tag_210:\n        /* \"#utility.yul\":7009:7012   */\n      0x00\n        /* \"#utility.yul\":7038:7092   */\n      tag_305\n        /* \"#utility.yul\":7086:7091   */\n      dup3\n        /* \"#utility.yul\":7038:7092   */\n      tag_204\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":7108:7194   */\n      tag_306\n        /* \"#utility.yul\":7187:7193   */\n      dup2\n        /* \"#utility.yul\":7182:7185   */\n      dup6\n        /* \"#utility.yul\":7108:7194   */\n      tag_205\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":7101:7194   */\n      swap4\n      pop\n        /* \"#utility.yul\":7218:7274   */\n      tag_307\n        /* \"#utility.yul\":7268:7273   */\n      dup4\n        /* \"#utility.yul\":7218:7274   */\n      tag_206\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":7297:7304   */\n      dup1\n        /* \"#utility.yul\":7328:7329   */\n      0x00\n        /* \"#utility.yul\":7313:7597   */\n    tag_308:\n        /* \"#utility.yul\":7338:7344   */\n      dup4\n        /* \"#utility.yul\":7335:7336   */\n      dup2\n        /* \"#utility.yul\":7332:7345   */\n      lt\n        /* \"#utility.yul\":7313:7597   */\n      iszero\n      tag_310\n      jumpi\n        /* \"#utility.yul\":7414:7420   */\n      dup2\n        /* \"#utility.yul\":7408:7421   */\n      mload\n        /* \"#utility.yul\":7441:7504   */\n      tag_311\n        /* \"#utility.yul\":7500:7503   */\n      dup9\n        /* \"#utility.yul\":7485:7498   */\n      dup3\n        /* \"#utility.yul\":7441:7504   */\n      tag_208\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":7434:7504   */\n      swap8\n      pop\n        /* \"#utility.yul\":7527:7587   */\n      tag_312\n        /* \"#utility.yul\":7580:7586   */\n      dup4\n        /* \"#utility.yul\":7527:7587   */\n      tag_209\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":7517:7587   */\n      swap3\n      pop\n        /* \"#utility.yul\":7373:7597   */\n      pop\n        /* \"#utility.yul\":7360:7361   */\n      0x01\n        /* \"#utility.yul\":7357:7358   */\n      dup2\n        /* \"#utility.yul\":7353:7362   */\n      add\n        /* \"#utility.yul\":7348:7362   */\n      swap1\n      pop\n        /* \"#utility.yul\":7313:7597   */\n      jump(tag_308)\n    tag_310:\n        /* \"#utility.yul\":7317:7331   */\n      pop\n        /* \"#utility.yul\":7613:7616   */\n      dup6\n        /* \"#utility.yul\":7606:7616   */\n      swap4\n      pop\n        /* \"#utility.yul\":7014:7622   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":6890:7622   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7628:8001   */\n    tag_32:\n        /* \"#utility.yul\":7771:7775   */\n      0x00\n        /* \"#utility.yul\":7809:7811   */\n      0x20\n        /* \"#utility.yul\":7798:7807   */\n      dup3\n        /* \"#utility.yul\":7794:7812   */\n      add\n        /* \"#utility.yul\":7786:7812   */\n      swap1\n      pop\n        /* \"#utility.yul\":7858:7867   */\n      dup2\n        /* \"#utility.yul\":7852:7856   */\n      dup2\n        /* \"#utility.yul\":7848:7868   */\n      sub\n        /* \"#utility.yul\":7844:7845   */\n      0x00\n        /* \"#utility.yul\":7833:7842   */\n      dup4\n        /* \"#utility.yul\":7829:7846   */\n      add\n        /* \"#utility.yul\":7822:7869   */\n      mstore\n        /* \"#utility.yul\":7886:7994   */\n      tag_314\n        /* \"#utility.yul\":7989:7993   */\n      dup2\n        /* \"#utility.yul\":7980:7986   */\n      dup5\n        /* \"#utility.yul\":7886:7994   */\n      tag_210\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":7878:7994   */\n      swap1\n      pop\n        /* \"#utility.yul\":7628:8001   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8007:8125   */\n    tag_211:\n        /* \"#utility.yul\":8094:8118   */\n      tag_316\n        /* \"#utility.yul\":8112:8117   */\n      dup2\n        /* \"#utility.yul\":8094:8118   */\n      tag_187\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":8089:8092   */\n      dup3\n        /* \"#utility.yul\":8082:8119   */\n      mstore\n        /* \"#utility.yul\":8007:8125   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8131:8353   */\n    tag_44:\n        /* \"#utility.yul\":8224:8228   */\n      0x00\n        /* \"#utility.yul\":8262:8264   */\n      0x20\n        /* \"#utility.yul\":8251:8260   */\n      dup3\n        /* \"#utility.yul\":8247:8265   */\n      add\n        /* \"#utility.yul\":8239:8265   */\n      swap1\n      pop\n        /* \"#utility.yul\":8275:8346   */\n      tag_318\n        /* \"#utility.yul\":8343:8344   */\n      0x00\n        /* \"#utility.yul\":8332:8341   */\n      dup4\n        /* \"#utility.yul\":8328:8345   */\n      add\n        /* \"#utility.yul\":8319:8325   */\n      dup5\n        /* \"#utility.yul\":8275:8346   */\n      tag_211\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":8131:8353   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8359:8436   */\n    tag_212:\n        /* \"#utility.yul\":8396:8403   */\n      0x00\n        /* \"#utility.yul\":8425:8430   */\n      dup2\n        /* \"#utility.yul\":8414:8430   */\n      swap1\n      pop\n        /* \"#utility.yul\":8359:8436   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8442:8564   */\n    tag_213:\n        /* \"#utility.yul\":8515:8539   */\n      tag_321\n        /* \"#utility.yul\":8533:8538   */\n      dup2\n        /* \"#utility.yul\":8515:8539   */\n      tag_212\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":8508:8513   */\n      dup2\n        /* \"#utility.yul\":8505:8540   */\n      eq\n        /* \"#utility.yul\":8495:8558   */\n      tag_322\n      jumpi\n        /* \"#utility.yul\":8554:8555   */\n      0x00\n        /* \"#utility.yul\":8551:8552   */\n      dup1\n        /* \"#utility.yul\":8544:8556   */\n      revert\n        /* \"#utility.yul\":8495:8558   */\n    tag_322:\n        /* \"#utility.yul\":8442:8564   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8570:8709   */\n    tag_214:\n        /* \"#utility.yul\":8616:8621   */\n      0x00\n        /* \"#utility.yul\":8654:8660   */\n      dup2\n        /* \"#utility.yul\":8641:8661   */\n      calldataload\n        /* \"#utility.yul\":8632:8661   */\n      swap1\n      pop\n        /* \"#utility.yul\":8670:8703   */\n      tag_324\n        /* \"#utility.yul\":8697:8702   */\n      dup2\n        /* \"#utility.yul\":8670:8703   */\n      tag_213\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":8570:8709   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8715:9044   */\n    tag_50:\n        /* \"#utility.yul\":8774:8780   */\n      0x00\n        /* \"#utility.yul\":8823:8825   */\n      0x20\n        /* \"#utility.yul\":8811:8820   */\n      dup3\n        /* \"#utility.yul\":8802:8809   */\n      dup5\n        /* \"#utility.yul\":8798:8821   */\n      sub\n        /* \"#utility.yul\":8794:8826   */\n      slt\n        /* \"#utility.yul\":8791:8910   */\n      iszero\n      tag_326\n      jumpi\n        /* \"#utility.yul\":8829:8908   */\n      tag_327\n      tag_184\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":8791:8910   */\n    tag_326:\n        /* \"#utility.yul\":8949:8950   */\n      0x00\n        /* \"#utility.yul\":8974:9027   */\n      tag_328\n        /* \"#utility.yul\":9019:9026   */\n      dup5\n        /* \"#utility.yul\":9010:9016   */\n      dup3\n        /* \"#utility.yul\":8999:9008   */\n      dup6\n        /* \"#utility.yul\":8995:9017   */\n      add\n        /* \"#utility.yul\":8974:9027   */\n      tag_214\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":8964:9027   */\n      swap2\n      pop\n        /* \"#utility.yul\":8920:9037   */\n      pop\n        /* \"#utility.yul\":8715:9044   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9050:9230   */\n    tag_71:\n        /* \"#utility.yul\":9098:9175   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9095:9096   */\n      0x00\n        /* \"#utility.yul\":9088:9176   */\n      mstore\n        /* \"#utility.yul\":9195:9199   */\n      0x32\n        /* \"#utility.yul\":9192:9193   */\n      0x04\n        /* \"#utility.yul\":9185:9200   */\n      mstore\n        /* \"#utility.yul\":9219:9223   */\n      0x24\n        /* \"#utility.yul\":9216:9217   */\n      0x00\n        /* \"#utility.yul\":9209:9224   */\n      revert\n        /* \"#utility.yul\":9236:9405   */\n    tag_215:\n        /* \"#utility.yul\":9320:9331   */\n      0x00\n        /* \"#utility.yul\":9354:9360   */\n      dup3\n        /* \"#utility.yul\":9349:9352   */\n      dup3\n        /* \"#utility.yul\":9342:9361   */\n      mstore\n        /* \"#utility.yul\":9394:9398   */\n      0x20\n        /* \"#utility.yul\":9389:9392   */\n      dup3\n        /* \"#utility.yul\":9385:9399   */\n      add\n        /* \"#utility.yul\":9370:9399   */\n      swap1\n      pop\n        /* \"#utility.yul\":9236:9405   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9411:9580   */\n    tag_216:\n        /* \"#utility.yul\":9551:9572   */\n      0x47616d65206e6f74207265676973746572656400000000000000000000000000\n        /* \"#utility.yul\":9547:9548   */\n      0x00\n        /* \"#utility.yul\":9539:9545   */\n      dup3\n        /* \"#utility.yul\":9535:9549   */\n      add\n        /* \"#utility.yul\":9528:9573   */\n      mstore\n        /* \"#utility.yul\":9411:9580   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9586:9952   */\n    tag_217:\n        /* \"#utility.yul\":9728:9731   */\n      0x00\n        /* \"#utility.yul\":9749:9816   */\n      tag_333\n        /* \"#utility.yul\":9813:9815   */\n      0x13\n        /* \"#utility.yul\":9808:9811   */\n      dup4\n        /* \"#utility.yul\":9749:9816   */\n      tag_215\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":9742:9816   */\n      swap2\n      pop\n        /* \"#utility.yul\":9825:9918   */\n      tag_334\n        /* \"#utility.yul\":9914:9917   */\n      dup3\n        /* \"#utility.yul\":9825:9918   */\n      tag_216\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":9943:9945   */\n      0x20\n        /* \"#utility.yul\":9938:9941   */\n      dup3\n        /* \"#utility.yul\":9934:9946   */\n      add\n        /* \"#utility.yul\":9927:9946   */\n      swap1\n      pop\n        /* \"#utility.yul\":9586:9952   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9958:10377   */\n    tag_80:\n        /* \"#utility.yul\":10124:10128   */\n      0x00\n        /* \"#utility.yul\":10162:10164   */\n      0x20\n        /* \"#utility.yul\":10151:10160   */\n      dup3\n        /* \"#utility.yul\":10147:10165   */\n      add\n        /* \"#utility.yul\":10139:10165   */\n      swap1\n      pop\n        /* \"#utility.yul\":10211:10220   */\n      dup2\n        /* \"#utility.yul\":10205:10209   */\n      dup2\n        /* \"#utility.yul\":10201:10221   */\n      sub\n        /* \"#utility.yul\":10197:10198   */\n      0x00\n        /* \"#utility.yul\":10186:10195   */\n      dup4\n        /* \"#utility.yul\":10182:10199   */\n      add\n        /* \"#utility.yul\":10175:10222   */\n      mstore\n        /* \"#utility.yul\":10239:10370   */\n      tag_336\n        /* \"#utility.yul\":10365:10369   */\n      dup2\n        /* \"#utility.yul\":10239:10370   */\n      tag_217\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":10231:10370   */\n      swap1\n      pop\n        /* \"#utility.yul\":9958:10377   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10383:10562   */\n    tag_218:\n        /* \"#utility.yul\":10523:10554   */\n      0x4173736574206e6f74207265676973746572656420666f722067616d65000000\n        /* \"#utility.yul\":10519:10520   */\n      0x00\n        /* \"#utility.yul\":10511:10517   */\n      dup3\n        /* \"#utility.yul\":10507:10521   */\n      add\n        /* \"#utility.yul\":10500:10555   */\n      mstore\n        /* \"#utility.yul\":10383:10562   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10568:10934   */\n    tag_219:\n        /* \"#utility.yul\":10710:10713   */\n      0x00\n        /* \"#utility.yul\":10731:10798   */\n      tag_339\n        /* \"#utility.yul\":10795:10797   */\n      0x1d\n        /* \"#utility.yul\":10790:10793   */\n      dup4\n        /* \"#utility.yul\":10731:10798   */\n      tag_215\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":10724:10798   */\n      swap2\n      pop\n        /* \"#utility.yul\":10807:10900   */\n      tag_340\n        /* \"#utility.yul\":10896:10899   */\n      dup3\n        /* \"#utility.yul\":10807:10900   */\n      tag_218\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":10925:10927   */\n      0x20\n        /* \"#utility.yul\":10920:10923   */\n      dup3\n        /* \"#utility.yul\":10916:10928   */\n      add\n        /* \"#utility.yul\":10909:10928   */\n      swap1\n      pop\n        /* \"#utility.yul\":10568:10934   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10940:11359   */\n    tag_83:\n        /* \"#utility.yul\":11106:11110   */\n      0x00\n        /* \"#utility.yul\":11144:11146   */\n      0x20\n        /* \"#utility.yul\":11133:11142   */\n      dup3\n        /* \"#utility.yul\":11129:11147   */\n      add\n        /* \"#utility.yul\":11121:11147   */\n      swap1\n      pop\n        /* \"#utility.yul\":11193:11202   */\n      dup2\n        /* \"#utility.yul\":11187:11191   */\n      dup2\n        /* \"#utility.yul\":11183:11203   */\n      sub\n        /* \"#utility.yul\":11179:11180   */\n      0x00\n        /* \"#utility.yul\":11168:11177   */\n      dup4\n        /* \"#utility.yul\":11164:11181   */\n      add\n        /* \"#utility.yul\":11157:11204   */\n      mstore\n        /* \"#utility.yul\":11221:11352   */\n      tag_342\n        /* \"#utility.yul\":11347:11351   */\n      dup2\n        /* \"#utility.yul\":11221:11352   */\n      tag_219\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":11213:11352   */\n      swap1\n      pop\n        /* \"#utility.yul\":10940:11359   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11365:11545   */\n    tag_220:\n        /* \"#utility.yul\":11413:11490   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11410:11411   */\n      0x00\n        /* \"#utility.yul\":11403:11491   */\n      mstore\n        /* \"#utility.yul\":11510:11514   */\n      0x11\n        /* \"#utility.yul\":11507:11508   */\n      0x04\n        /* \"#utility.yul\":11500:11515   */\n      mstore\n        /* \"#utility.yul\":11534:11538   */\n      0x24\n        /* \"#utility.yul\":11531:11532   */\n      0x00\n        /* \"#utility.yul\":11524:11539   */\n      revert\n        /* \"#utility.yul\":11551:11784   */\n    tag_97:\n        /* \"#utility.yul\":11590:11593   */\n      0x00\n        /* \"#utility.yul\":11613:11637   */\n      tag_345\n        /* \"#utility.yul\":11631:11636   */\n      dup3\n        /* \"#utility.yul\":11613:11637   */\n      tag_212\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":11604:11637   */\n      swap2\n      pop\n        /* \"#utility.yul\":11659:11725   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11652:11657   */\n      dup3\n        /* \"#utility.yul\":11649:11726   */\n      sub\n        /* \"#utility.yul\":11646:11749   */\n      tag_346\n      jumpi\n        /* \"#utility.yul\":11729:11747   */\n      tag_347\n      tag_220\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":11646:11749   */\n    tag_346:\n        /* \"#utility.yul\":11776:11777   */\n      0x01\n        /* \"#utility.yul\":11769:11774   */\n      dup3\n        /* \"#utility.yul\":11765:11778   */\n      add\n        /* \"#utility.yul\":11758:11778   */\n      swap1\n      pop\n        /* \"#utility.yul\":11551:11784   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11790:11970   */\n    tag_100:\n        /* \"#utility.yul\":11838:11915   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11835:11836   */\n      0x00\n        /* \"#utility.yul\":11828:11916   */\n      mstore\n        /* \"#utility.yul\":11935:11939   */\n      0x41\n        /* \"#utility.yul\":11932:11933   */\n      0x04\n        /* \"#utility.yul\":11925:11940   */\n      mstore\n        /* \"#utility.yul\":11959:11963   */\n      0x24\n        /* \"#utility.yul\":11956:11957   */\n      0x00\n        /* \"#utility.yul\":11949:11964   */\n      revert\n        /* \"#utility.yul\":11976:12148   */\n    tag_221:\n        /* \"#utility.yul\":12116:12140   */\n      0x496e76616c696420617373657420636f6e747261637400000000000000000000\n        /* \"#utility.yul\":12112:12113   */\n      0x00\n        /* \"#utility.yul\":12104:12110   */\n      dup3\n        /* \"#utility.yul\":12100:12114   */\n      add\n        /* \"#utility.yul\":12093:12141   */\n      mstore\n        /* \"#utility.yul\":11976:12148   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12154:12520   */\n    tag_222:\n        /* \"#utility.yul\":12296:12299   */\n      0x00\n        /* \"#utility.yul\":12317:12384   */\n      tag_351\n        /* \"#utility.yul\":12381:12383   */\n      0x16\n        /* \"#utility.yul\":12376:12379   */\n      dup4\n        /* \"#utility.yul\":12317:12384   */\n      tag_215\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":12310:12384   */\n      swap2\n      pop\n        /* \"#utility.yul\":12393:12486   */\n      tag_352\n        /* \"#utility.yul\":12482:12485   */\n      dup3\n        /* \"#utility.yul\":12393:12486   */\n      tag_221\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":12511:12513   */\n      0x20\n        /* \"#utility.yul\":12506:12509   */\n      dup3\n        /* \"#utility.yul\":12502:12514   */\n      add\n        /* \"#utility.yul\":12495:12514   */\n      swap1\n      pop\n        /* \"#utility.yul\":12154:12520   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12526:12945   */\n    tag_123:\n        /* \"#utility.yul\":12692:12696   */\n      0x00\n        /* \"#utility.yul\":12730:12732   */\n      0x20\n        /* \"#utility.yul\":12719:12728   */\n      dup3\n        /* \"#utility.yul\":12715:12733   */\n      add\n        /* \"#utility.yul\":12707:12733   */\n      swap1\n      pop\n        /* \"#utility.yul\":12779:12788   */\n      dup2\n        /* \"#utility.yul\":12773:12777   */\n      dup2\n        /* \"#utility.yul\":12769:12789   */\n      sub\n        /* \"#utility.yul\":12765:12766   */\n      0x00\n        /* \"#utility.yul\":12754:12763   */\n      dup4\n        /* \"#utility.yul\":12750:12767   */\n      add\n        /* \"#utility.yul\":12743:12790   */\n      mstore\n        /* \"#utility.yul\":12807:12938   */\n      tag_354\n        /* \"#utility.yul\":12933:12937   */\n      dup2\n        /* \"#utility.yul\":12807:12938   */\n      tag_222\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":12799:12938   */\n      swap1\n      pop\n        /* \"#utility.yul\":12526:12945   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12951:13124   */\n    tag_223:\n        /* \"#utility.yul\":13091:13116   */\n      0x4e6f206174747269627574657320737065636966696564000000000000000000\n        /* \"#utility.yul\":13087:13088   */\n      0x00\n        /* \"#utility.yul\":13079:13085   */\n      dup3\n        /* \"#utility.yul\":13075:13089   */\n      add\n        /* \"#utility.yul\":13068:13117   */\n      mstore\n        /* \"#utility.yul\":12951:13124   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13130:13496   */\n    tag_224:\n        /* \"#utility.yul\":13272:13275   */\n      0x00\n        /* \"#utility.yul\":13293:13360   */\n      tag_357\n        /* \"#utility.yul\":13357:13359   */\n      0x17\n        /* \"#utility.yul\":13352:13355   */\n      dup4\n        /* \"#utility.yul\":13293:13360   */\n      tag_215\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":13286:13360   */\n      swap2\n      pop\n        /* \"#utility.yul\":13369:13462   */\n      tag_358\n        /* \"#utility.yul\":13458:13461   */\n      dup3\n        /* \"#utility.yul\":13369:13462   */\n      tag_223\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":13487:13489   */\n      0x20\n        /* \"#utility.yul\":13482:13485   */\n      dup3\n        /* \"#utility.yul\":13478:13490   */\n      add\n        /* \"#utility.yul\":13471:13490   */\n      swap1\n      pop\n        /* \"#utility.yul\":13130:13496   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13502:13921   */\n    tag_126:\n        /* \"#utility.yul\":13668:13672   */\n      0x00\n        /* \"#utility.yul\":13706:13708   */\n      0x20\n        /* \"#utility.yul\":13695:13704   */\n      dup3\n        /* \"#utility.yul\":13691:13709   */\n      add\n        /* \"#utility.yul\":13683:13709   */\n      swap1\n      pop\n        /* \"#utility.yul\":13755:13764   */\n      dup2\n        /* \"#utility.yul\":13749:13753   */\n      dup2\n        /* \"#utility.yul\":13745:13765   */\n      sub\n        /* \"#utility.yul\":13741:13742   */\n      0x00\n        /* \"#utility.yul\":13730:13739   */\n      dup4\n        /* \"#utility.yul\":13726:13743   */\n      add\n        /* \"#utility.yul\":13719:13766   */\n      mstore\n        /* \"#utility.yul\":13783:13914   */\n      tag_360\n        /* \"#utility.yul\":13909:13913   */\n      dup2\n        /* \"#utility.yul\":13783:13914   */\n      tag_224\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":13775:13914   */\n      swap1\n      pop\n        /* \"#utility.yul\":13502:13921   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13927:14044   */\n    tag_225:\n        /* \"#utility.yul\":14036:14037   */\n      0x00\n        /* \"#utility.yul\":14033:14034   */\n      dup1\n        /* \"#utility.yul\":14026:14038   */\n      revert\n        /* \"#utility.yul\":14050:14149   */\n    tag_226:\n        /* \"#utility.yul\":14135:14141   */\n      dup3\n        /* \"#utility.yul\":14130:14133   */\n      dup2\n        /* \"#utility.yul\":14125:14128   */\n      dup4\n        /* \"#utility.yul\":14112:14142   */\n      calldatacopy\n        /* \"#utility.yul\":14050:14149   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14185:14722   */\n    tag_227:\n        /* \"#utility.yul\":14313:14316   */\n      0x00\n        /* \"#utility.yul\":14334:14420   */\n      tag_364\n        /* \"#utility.yul\":14413:14419   */\n      dup4\n        /* \"#utility.yul\":14408:14411   */\n      dup6\n        /* \"#utility.yul\":14334:14420   */\n      tag_197\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":14327:14420   */\n      swap4\n      pop\n        /* \"#utility.yul\":14444:14510   */\n      0x07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":14436:14442   */\n      dup4\n        /* \"#utility.yul\":14433:14511   */\n      gt\n        /* \"#utility.yul\":14430:14595   */\n      iszero\n      tag_365\n      jumpi\n        /* \"#utility.yul\":14514:14593   */\n      tag_366\n      tag_225\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":14430:14595   */\n    tag_365:\n        /* \"#utility.yul\":14626:14630   */\n      0x20\n        /* \"#utility.yul\":14618:14624   */\n      dup4\n        /* \"#utility.yul\":14614:14631   */\n      mul\n        /* \"#utility.yul\":14604:14631   */\n      swap3\n      pop\n        /* \"#utility.yul\":14641:14684   */\n      tag_367\n        /* \"#utility.yul\":14677:14683   */\n      dup4\n        /* \"#utility.yul\":14672:14675   */\n      dup6\n        /* \"#utility.yul\":14665:14670   */\n      dup5\n        /* \"#utility.yul\":14641:14684   */\n      tag_226\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":14709:14715   */\n      dup3\n        /* \"#utility.yul\":14704:14707   */\n      dup5\n        /* \"#utility.yul\":14700:14716   */\n      add\n        /* \"#utility.yul\":14693:14716   */\n      swap1\n      pop\n        /* \"#utility.yul\":14185:14722   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14728:15121   */\n    tag_130:\n        /* \"#utility.yul\":14881:14885   */\n      0x00\n        /* \"#utility.yul\":14919:14921   */\n      0x20\n        /* \"#utility.yul\":14908:14917   */\n      dup3\n        /* \"#utility.yul\":14904:14922   */\n      add\n        /* \"#utility.yul\":14896:14922   */\n      swap1\n      pop\n        /* \"#utility.yul\":14968:14977   */\n      dup2\n        /* \"#utility.yul\":14962:14966   */\n      dup2\n        /* \"#utility.yul\":14958:14978   */\n      sub\n        /* \"#utility.yul\":14954:14955   */\n      0x00\n        /* \"#utility.yul\":14943:14952   */\n      dup4\n        /* \"#utility.yul\":14939:14956   */\n      add\n        /* \"#utility.yul\":14932:14979   */\n      mstore\n        /* \"#utility.yul\":14996:15114   */\n      tag_369\n        /* \"#utility.yul\":15109:15113   */\n      dup2\n        /* \"#utility.yul\":15100:15106   */\n      dup5\n        /* \"#utility.yul\":15092:15098   */\n      dup7\n        /* \"#utility.yul\":14996:15114   */\n      tag_227\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":14988:15114   */\n      swap1\n      pop\n        /* \"#utility.yul\":14728:15121   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15127:15297   */\n    tag_228:\n        /* \"#utility.yul\":15267:15289   */\n      0x496e76616c69642067616d652061646472657373000000000000000000000000\n        /* \"#utility.yul\":15263:15264   */\n      0x00\n        /* \"#utility.yul\":15255:15261   */\n      dup3\n        /* \"#utility.yul\":15251:15265   */\n      add\n        /* \"#utility.yul\":15244:15290   */\n      mstore\n        /* \"#utility.yul\":15127:15297   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15303:15669   */\n    tag_229:\n        /* \"#utility.yul\":15445:15448   */\n      0x00\n        /* \"#utility.yul\":15466:15533   */\n      tag_372\n        /* \"#utility.yul\":15530:15532   */\n      0x14\n        /* \"#utility.yul\":15525:15528   */\n      dup4\n        /* \"#utility.yul\":15466:15533   */\n      tag_215\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":15459:15533   */\n      swap2\n      pop\n        /* \"#utility.yul\":15542:15635   */\n      tag_373\n        /* \"#utility.yul\":15631:15634   */\n      dup3\n        /* \"#utility.yul\":15542:15635   */\n      tag_228\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":15660:15662   */\n      0x20\n        /* \"#utility.yul\":15655:15658   */\n      dup3\n        /* \"#utility.yul\":15651:15663   */\n      add\n        /* \"#utility.yul\":15644:15663   */\n      swap1\n      pop\n        /* \"#utility.yul\":15303:15669   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15675:16094   */\n    tag_151:\n        /* \"#utility.yul\":15841:15845   */\n      0x00\n        /* \"#utility.yul\":15879:15881   */\n      0x20\n        /* \"#utility.yul\":15868:15877   */\n      dup3\n        /* \"#utility.yul\":15864:15882   */\n      add\n        /* \"#utility.yul\":15856:15882   */\n      swap1\n      pop\n        /* \"#utility.yul\":15928:15937   */\n      dup2\n        /* \"#utility.yul\":15922:15926   */\n      dup2\n        /* \"#utility.yul\":15918:15938   */\n      sub\n        /* \"#utility.yul\":15914:15915   */\n      0x00\n        /* \"#utility.yul\":15903:15912   */\n      dup4\n        /* \"#utility.yul\":15899:15916   */\n      add\n        /* \"#utility.yul\":15892:15939   */\n      mstore\n        /* \"#utility.yul\":15956:16087   */\n      tag_375\n        /* \"#utility.yul\":16082:16086   */\n      dup2\n        /* \"#utility.yul\":15956:16087   */\n      tag_229\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":15948:16087   */\n      swap1\n      pop\n        /* \"#utility.yul\":15675:16094   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16100:16273   */\n    tag_230:\n        /* \"#utility.yul\":16240:16265   */\n      0x47616d6520616c72656164792072656769737465726564000000000000000000\n        /* \"#utility.yul\":16236:16237   */\n      0x00\n        /* \"#utility.yul\":16228:16234   */\n      dup3\n        /* \"#utility.yul\":16224:16238   */\n      add\n        /* \"#utility.yul\":16217:16266   */\n      mstore\n        /* \"#utility.yul\":16100:16273   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16279:16645   */\n    tag_231:\n        /* \"#utility.yul\":16421:16424   */\n      0x00\n        /* \"#utility.yul\":16442:16509   */\n      tag_378\n        /* \"#utility.yul\":16506:16508   */\n      0x17\n        /* \"#utility.yul\":16501:16504   */\n      dup4\n        /* \"#utility.yul\":16442:16509   */\n      tag_215\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":16435:16509   */\n      swap2\n      pop\n        /* \"#utility.yul\":16518:16611   */\n      tag_379\n        /* \"#utility.yul\":16607:16610   */\n      dup3\n        /* \"#utility.yul\":16518:16611   */\n      tag_230\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":16636:16638   */\n      0x20\n        /* \"#utility.yul\":16631:16634   */\n      dup3\n        /* \"#utility.yul\":16627:16639   */\n      add\n        /* \"#utility.yul\":16620:16639   */\n      swap1\n      pop\n        /* \"#utility.yul\":16279:16645   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16651:17070   */\n    tag_154:\n        /* \"#utility.yul\":16817:16821   */\n      0x00\n        /* \"#utility.yul\":16855:16857   */\n      0x20\n        /* \"#utility.yul\":16844:16853   */\n      dup3\n        /* \"#utility.yul\":16840:16858   */\n      add\n        /* \"#utility.yul\":16832:16858   */\n      swap1\n      pop\n        /* \"#utility.yul\":16904:16913   */\n      dup2\n        /* \"#utility.yul\":16898:16902   */\n      dup2\n        /* \"#utility.yul\":16894:16914   */\n      sub\n        /* \"#utility.yul\":16890:16891   */\n      0x00\n        /* \"#utility.yul\":16879:16888   */\n      dup4\n        /* \"#utility.yul\":16875:16892   */\n      add\n        /* \"#utility.yul\":16868:16915   */\n      mstore\n        /* \"#utility.yul\":16932:17063   */\n      tag_381\n        /* \"#utility.yul\":17058:17062   */\n      dup2\n        /* \"#utility.yul\":16932:17063   */\n      tag_231\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":16924:17063   */\n      swap1\n      pop\n        /* \"#utility.yul\":16651:17070   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220bb6e151a27a9dd7f9f86f1321e922261e029f2dfd2ce38b0f14b0e79927fbbb864736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_595": {
									"entryPoint": null,
									"id": 595,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 150,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 391,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 406,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 374,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 343,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:590:7",
										"nodeType": "YulBlock",
										"src": "0:590:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:7",
													"nodeType": "YulBlock",
													"src": "52:81:7",
													"statements": [
														{
															"nativeSrc": "62:65:7",
															"nodeType": "YulAssignment",
															"src": "62:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:7",
																		"nodeType": "YulLiteral",
																		"src": "84:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:7"
																},
																"nativeSrc": "73:54:7",
																"nodeType": "YulFunctionCall",
																"src": "73:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:7",
														"nodeType": "YulTypedName",
														"src": "34:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:7",
														"nodeType": "YulTypedName",
														"src": "44:7:7",
														"type": ""
													}
												],
												"src": "7:126:7"
											},
											{
												"body": {
													"nativeSrc": "184:51:7",
													"nodeType": "YulBlock",
													"src": "184:51:7",
													"statements": [
														{
															"nativeSrc": "194:35:7",
															"nodeType": "YulAssignment",
															"src": "194:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:7"
																},
																"nativeSrc": "205:24:7",
																"nodeType": "YulFunctionCall",
																"src": "205:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:7",
														"nodeType": "YulTypedName",
														"src": "166:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:7",
														"nodeType": "YulTypedName",
														"src": "176:7:7",
														"type": ""
													}
												],
												"src": "139:96:7"
											},
											{
												"body": {
													"nativeSrc": "306:53:7",
													"nodeType": "YulBlock",
													"src": "306:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:7"
																		},
																		"nativeSrc": "328:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:7"
																},
																"nativeSrc": "316:37:7",
																"nodeType": "YulFunctionCall",
																"src": "316:37:7"
															},
															"nativeSrc": "316:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:7",
														"nodeType": "YulTypedName",
														"src": "294:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:7",
														"nodeType": "YulTypedName",
														"src": "301:3:7",
														"type": ""
													}
												],
												"src": "241:118:7"
											},
											{
												"body": {
													"nativeSrc": "463:124:7",
													"nodeType": "YulBlock",
													"src": "463:124:7",
													"statements": [
														{
															"nativeSrc": "473:26:7",
															"nodeType": "YulAssignment",
															"src": "473:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:7",
																		"nodeType": "YulLiteral",
																		"src": "496:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:7"
																},
																"nativeSrc": "481:18:7",
																"nodeType": "YulFunctionCall",
																"src": "481:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:7",
																				"nodeType": "YulLiteral",
																				"src": "577:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:7"
																		},
																		"nativeSrc": "562:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:7"
																},
																"nativeSrc": "509:71:7",
																"nodeType": "YulFunctionCall",
																"src": "509:71:7"
															},
															"nativeSrc": "509:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:7",
														"nodeType": "YulTypedName",
														"src": "435:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:7",
														"nodeType": "YulTypedName",
														"src": "447:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:7",
														"nodeType": "YulTypedName",
														"src": "458:4:7",
														"type": ""
													}
												],
												"src": "365:222:7"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610081575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100789190610196565b60405180910390fd5b6100908161009660201b60201c565b506101af565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61018082610157565b9050919050565b61019081610176565b82525050565b5f6020820190506101a95f830184610187565b92915050565b611c8d806101bc5f395ff3fe608060405234801561000f575f80fd5b50600436106100a7575f3560e01c8063715018a61161006f578063715018a6146101735780638da5cb5b1461017d5780639b36057c1461019b5780639e3c5a72146101b7578063ee658e45146101e7578063f2fde38b14610217576100a7565b806336e9b39a146100ab57806353c02924146100db57806357f623d01461010b578063644621421461013b5780636f6145f014610157575b5f80fd5b6100c560048036038101906100c09190611535565b610233565b6040516100d291906115c0565b60405180910390f35b6100f560048036038101906100f091906115d9565b61043c565b60405161010291906116d7565b60405180910390f35b610125600480360381019061012091906116f7565b610665565b60405161013291906117d9565b60405180910390f35b61015560048036038101906101509190611535565b6109c0565b005b610171600480360381019061016c91906115d9565b610c21565b005b61017b610e7a565b005b610185610e8d565b6040516101929190611808565b60405180910390f35b6101b560048036038101906101b091906116f7565b610eb4565b005b6101d160048036038101906101cc9190611854565b61118c565b6040516101de9190611808565b60405180910390f35b61020160048036038101906101fc91906116f7565b6111c7565b60405161020e91906115c0565b60405180910390f35b610231600480360381019061022c91906116f7565b61121b565b005b5f60015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f9054906101000a900460ff161580610313575060015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f9054906101000a900460ff16155b15610320575f9050610434565b5f60015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2060010190505f5b8484905081101561042d575f805b838054905081101561040e578381815481106103d0576103cf61187f565b5b905f5260205f2001548787858181106103ec576103eb61187f565b5b9050602002013503610401576001915061040e565b80806001019150506103b1565b508061041f575f9350505050610434565b5080806001019150506103a3565b5060019150505b949350505050565b606060015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f9054906101000a900460ff166104c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c090611906565b60405180910390fd5b60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f9054906101000a900460ff16610592576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105899061196e565b60405180910390fd5b60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2060010180548060200260200160405190810160405280929190818152602001828054801561065857602002820191905f5260205f20905b815481526020019060010190808311610644575b5050505050905092915050565b606060015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f9054906101000a900460ff166106f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e990611906565b60405180910390fd5b5f805b6002805490508110156107e85760015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001015f600283815481106107575761075661187f565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f9054906101000a900460ff16156107db5781806107d7906119b9565b9250505b80806001019150506106f5565b505f8167ffffffffffffffff81111561080457610803611a00565b5b6040519080825280602002602001820160405280156108325781602001602082028036833780820191505090505b5090505f805b6002805490508110156109b45760015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001015f6002838154811061089a5761089961187f565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f9054906101000a900460ff16156109a757600281815481106109235761092261187f565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683838151811061095e5761095d61187f565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505081806109a3906119b9565b9250505b8080600101915050610838565b50819350505050919050565b6109c861129f565b60015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f9054906101000a900460ff16610a53576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4a90611906565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ac1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab890611a77565b60405180910390fd5b5f8282905011610b06576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610afd90611adf565b60405180910390fd5b5f60015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090506001815f015f6101000a81548160ff0219169083151502179055508282826001019190610bb29291906113ee565b508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f5a1925924b0857ceb006f7400134cecccedb6ca75ecef791a1a109cf8890edae8585604051610c12929190611b65565b60405180910390a35050505050565b610c2961129f565b60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f9054906101000a900460ff16610cb4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cab90611906565b60405180910390fd5b60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001015f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f9054906101000a900460ff16610d7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d749061196e565b60405180910390fd5b60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001015f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8082015f6101000a81549060ff0219169055600182015f610e1a9190611439565b50508073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fb0b93a7d8a8ec4a98f21206af2d3af128fc5ba7b8df65991b7477766ed42562260405160405180910390a35050565b610e8261129f565b610e8b5f611326565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610ebc61129f565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610f2a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f2190611bd1565b60405180910390fd5b60015f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f9054906101000a900460ff1615610fb6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fad90611c39565b60405180910390fd5b6001805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f6101000a81548160ff0219169083151502179055504260015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20600201819055503360015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206003015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600281908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f076eada2b266f926d3ecb187dece20428d68db62016c04bea8ccb92679f788de60405160405180910390a350565b6002818154811061119b575f80fd5b905f5260205f20015f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f9054906101000a900460ff169050919050565b61122361129f565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611293575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161128a9190611808565b60405180910390fd5b61129c81611326565b50565b6112a76113e7565b73ffffffffffffffffffffffffffffffffffffffff166112c5610e8d565b73ffffffffffffffffffffffffffffffffffffffff1614611324576112e86113e7565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161131b9190611808565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b828054828255905f5260205f20908101928215611428579160200282015b8281111561142757823582559160200191906001019061140c565b5b5090506114359190611457565b5090565b5080545f8255905f5260205f20908101906114549190611457565b50565b5b8082111561146e575f815f905550600101611458565b5090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6114a38261147a565b9050919050565b6114b381611499565b81146114bd575f80fd5b50565b5f813590506114ce816114aa565b92915050565b5f80fd5b5f80fd5b5f80fd5b5f8083601f8401126114f5576114f46114d4565b5b8235905067ffffffffffffffff811115611512576115116114d8565b5b60208301915083602082028301111561152e5761152d6114dc565b5b9250929050565b5f805f806060858703121561154d5761154c611472565b5b5f61155a878288016114c0565b945050602061156b878288016114c0565b935050604085013567ffffffffffffffff81111561158c5761158b611476565b5b611598878288016114e0565b925092505092959194509250565b5f8115159050919050565b6115ba816115a6565b82525050565b5f6020820190506115d35f8301846115b1565b92915050565b5f80604083850312156115ef576115ee611472565b5b5f6115fc858286016114c0565b925050602061160d858286016114c0565b9150509250929050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f819050919050565b61165281611640565b82525050565b5f6116638383611649565b60208301905092915050565b5f602082019050919050565b5f61168582611617565b61168f8185611621565b935061169a83611631565b805f5b838110156116ca5781516116b18882611658565b97506116bc8361166f565b92505060018101905061169d565b5085935050505092915050565b5f6020820190508181035f8301526116ef818461167b565b905092915050565b5f6020828403121561170c5761170b611472565b5b5f611719848285016114c0565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b61175481611499565b82525050565b5f611765838361174b565b60208301905092915050565b5f602082019050919050565b5f61178782611722565b611791818561172c565b935061179c8361173c565b805f5b838110156117cc5781516117b3888261175a565b97506117be83611771565b92505060018101905061179f565b5085935050505092915050565b5f6020820190508181035f8301526117f1818461177d565b905092915050565b61180281611499565b82525050565b5f60208201905061181b5f8301846117f9565b92915050565b5f819050919050565b61183381611821565b811461183d575f80fd5b50565b5f8135905061184e8161182a565b92915050565b5f6020828403121561186957611868611472565b5b5f61187684828501611840565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f82825260208201905092915050565b7f47616d65206e6f742072656769737465726564000000000000000000000000005f82015250565b5f6118f06013836118ac565b91506118fb826118bc565b602082019050919050565b5f6020820190508181035f83015261191d816118e4565b9050919050565b7f4173736574206e6f74207265676973746572656420666f722067616d650000005f82015250565b5f611958601d836118ac565b915061196382611924565b602082019050919050565b5f6020820190508181035f8301526119858161194c565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6119c382611821565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036119f5576119f461198c565b5b600182019050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f496e76616c696420617373657420636f6e7472616374000000000000000000005f82015250565b5f611a616016836118ac565b9150611a6c82611a2d565b602082019050919050565b5f6020820190508181035f830152611a8e81611a55565b9050919050565b7f4e6f2061747472696275746573207370656369666965640000000000000000005f82015250565b5f611ac96017836118ac565b9150611ad482611a95565b602082019050919050565b5f6020820190508181035f830152611af681611abd565b9050919050565b5f80fd5b82818337505050565b5f611b158385611621565b93507f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831115611b4857611b47611afd565b5b602083029250611b59838584611b01565b82840190509392505050565b5f6020820190508181035f830152611b7e818486611b0a565b90509392505050565b7f496e76616c69642067616d6520616464726573730000000000000000000000005f82015250565b5f611bbb6014836118ac565b9150611bc682611b87565b602082019050919050565b5f6020820190508181035f830152611be881611baf565b9050919050565b7f47616d6520616c726561647920726567697374657265640000000000000000005f82015250565b5f611c236017836118ac565b9150611c2e82611bef565b602082019050919050565b5f6020820190508181035f830152611c5081611c17565b905091905056fea2646970667358221220bb6e151a27a9dd7f9f86f1321e922261e029f2dfd2ce38b0f14b0e79927fbbb864736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x81 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78 SWAP2 SWAP1 PUSH2 0x196 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x90 DUP2 PUSH2 0x96 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x1AF JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x180 DUP3 PUSH2 0x157 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x190 DUP2 PUSH2 0x176 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A9 PUSH0 DUP4 ADD DUP5 PUSH2 0x187 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C8D DUP1 PUSH2 0x1BC PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0x9B36057C EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0x9E3C5A72 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0xEE658E45 EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x217 JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0x36E9B39A EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x53C02924 EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0x57F623D0 EQ PUSH2 0x10B JUMPI DUP1 PUSH4 0x64462142 EQ PUSH2 0x13B JUMPI DUP1 PUSH4 0x6F6145F0 EQ PUSH2 0x157 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x1535 JUMP JUMPDEST PUSH2 0x233 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD2 SWAP2 SWAP1 PUSH2 0x15C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0x15D9 JUMP JUMPDEST PUSH2 0x43C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x102 SWAP2 SWAP1 PUSH2 0x16D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x125 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x120 SWAP2 SWAP1 PUSH2 0x16F7 JUMP JUMPDEST PUSH2 0x665 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x132 SWAP2 SWAP1 PUSH2 0x17D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x155 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x150 SWAP2 SWAP1 PUSH2 0x1535 JUMP JUMPDEST PUSH2 0x9C0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x171 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x15D9 JUMP JUMPDEST PUSH2 0xC21 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17B PUSH2 0xE7A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x185 PUSH2 0xE8D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x192 SWAP2 SWAP1 PUSH2 0x1808 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B0 SWAP2 SWAP1 PUSH2 0x16F7 JUMP JUMPDEST PUSH2 0xEB4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x1854 JUMP JUMPDEST PUSH2 0x118C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x1808 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x201 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x16F7 JUMP JUMPDEST PUSH2 0x11C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20E SWAP2 SWAP1 PUSH2 0x15C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x231 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22C SWAP2 SWAP1 PUSH2 0x16F7 JUMP JUMPDEST PUSH2 0x121B JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 PUSH2 0x313 JUMPI POP PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x320 JUMPI PUSH0 SWAP1 POP PUSH2 0x434 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SWAP1 POP PUSH0 JUMPDEST DUP5 DUP5 SWAP1 POP DUP2 LT ISZERO PUSH2 0x42D JUMPI PUSH0 DUP1 JUMPDEST DUP4 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x40E JUMPI DUP4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x3D0 JUMPI PUSH2 0x3CF PUSH2 0x187F JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD DUP8 DUP8 DUP6 DUP2 DUP2 LT PUSH2 0x3EC JUMPI PUSH2 0x3EB PUSH2 0x187F JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD SUB PUSH2 0x401 JUMPI PUSH1 0x1 SWAP2 POP PUSH2 0x40E JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x3B1 JUMP JUMPDEST POP DUP1 PUSH2 0x41F JUMPI PUSH0 SWAP4 POP POP POP POP PUSH2 0x434 JUMP JUMPDEST POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x3A3 JUMP JUMPDEST POP PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x4C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C0 SWAP1 PUSH2 0x1906 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x592 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x589 SWAP1 PUSH2 0x196E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x658 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x644 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x6F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E9 SWAP1 PUSH2 0x1906 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x7E8 JUMPI PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 PUSH1 0x2 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x757 JUMPI PUSH2 0x756 PUSH2 0x187F JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x7DB JUMPI DUP2 DUP1 PUSH2 0x7D7 SWAP1 PUSH2 0x19B9 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x6F5 JUMP JUMPDEST POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x804 JUMPI PUSH2 0x803 PUSH2 0x1A00 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x832 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP1 JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x9B4 JUMPI PUSH1 0x1 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 PUSH1 0x2 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x89A JUMPI PUSH2 0x899 PUSH2 0x187F JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x9A7 JUMPI PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x923 JUMPI PUSH2 0x922 PUSH2 0x187F JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x95E JUMPI PUSH2 0x95D PUSH2 0x187F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 DUP1 PUSH2 0x9A3 SWAP1 PUSH2 0x19B9 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x838 JUMP JUMPDEST POP DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9C8 PUSH2 0x129F JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xA53 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA4A SWAP1 PUSH2 0x1906 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAC1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAB8 SWAP1 PUSH2 0x1A77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 DUP3 SWAP1 POP GT PUSH2 0xB06 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAFD SWAP1 PUSH2 0x1ADF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH1 0x1 DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 DUP3 DUP3 PUSH1 0x1 ADD SWAP2 SWAP1 PUSH2 0xBB2 SWAP3 SWAP2 SWAP1 PUSH2 0x13EE JUMP JUMPDEST POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5A1925924B0857CEB006F7400134CECCCEDB6CA75ECEF791A1A109CF8890EDAE DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0xC12 SWAP3 SWAP2 SWAP1 PUSH2 0x1B65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xC29 PUSH2 0x129F JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xCB4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCAB SWAP1 PUSH2 0x1906 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xD7D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD74 SWAP1 PUSH2 0x196E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP1 DUP3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH0 PUSH2 0xE1A SWAP2 SWAP1 PUSH2 0x1439 JUMP JUMPDEST POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB0B93A7D8A8EC4A98F21206AF2D3AF128FC5BA7B8DF65991B7477766ED425622 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xE82 PUSH2 0x129F JUMP JUMPDEST PUSH2 0xE8B PUSH0 PUSH2 0x1326 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xEBC PUSH2 0x129F JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF2A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF21 SWAP1 PUSH2 0x1BD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xFB6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFAD SWAP1 PUSH2 0x1C39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x76EADA2B266F926D3ECB187DECE20428D68DB62016C04BEA8CCB92679F788DE PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x119B JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1223 PUSH2 0x129F JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1293 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x128A SWAP2 SWAP1 PUSH2 0x1808 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x129C DUP2 PUSH2 0x1326 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x12A7 PUSH2 0x13E7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x12C5 PUSH2 0xE8D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1324 JUMPI PUSH2 0x12E8 PUSH2 0x13E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x131B SWAP2 SWAP1 PUSH2 0x1808 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x1428 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1427 JUMPI DUP3 CALLDATALOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x140C JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x1435 SWAP2 SWAP1 PUSH2 0x1457 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH0 DUP3 SSTORE SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1454 SWAP2 SWAP1 PUSH2 0x1457 JUMP JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x146E JUMPI PUSH0 DUP2 PUSH0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x1458 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x14A3 DUP3 PUSH2 0x147A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14B3 DUP2 PUSH2 0x1499 JUMP JUMPDEST DUP2 EQ PUSH2 0x14BD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14CE DUP2 PUSH2 0x14AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x14F5 JUMPI PUSH2 0x14F4 PUSH2 0x14D4 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1512 JUMPI PUSH2 0x1511 PUSH2 0x14D8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x152E JUMPI PUSH2 0x152D PUSH2 0x14DC JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x154D JUMPI PUSH2 0x154C PUSH2 0x1472 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x155A DUP8 DUP3 DUP9 ADD PUSH2 0x14C0 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x156B DUP8 DUP3 DUP9 ADD PUSH2 0x14C0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x158C JUMPI PUSH2 0x158B PUSH2 0x1476 JUMP JUMPDEST JUMPDEST PUSH2 0x1598 DUP8 DUP3 DUP9 ADD PUSH2 0x14E0 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15BA DUP2 PUSH2 0x15A6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15D3 PUSH0 DUP4 ADD DUP5 PUSH2 0x15B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15EF JUMPI PUSH2 0x15EE PUSH2 0x1472 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15FC DUP6 DUP3 DUP7 ADD PUSH2 0x14C0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x160D DUP6 DUP3 DUP7 ADD PUSH2 0x14C0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1652 DUP2 PUSH2 0x1640 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1663 DUP4 DUP4 PUSH2 0x1649 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1685 DUP3 PUSH2 0x1617 JUMP JUMPDEST PUSH2 0x168F DUP2 DUP6 PUSH2 0x1621 JUMP JUMPDEST SWAP4 POP PUSH2 0x169A DUP4 PUSH2 0x1631 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16CA JUMPI DUP2 MLOAD PUSH2 0x16B1 DUP9 DUP3 PUSH2 0x1658 JUMP JUMPDEST SWAP8 POP PUSH2 0x16BC DUP4 PUSH2 0x166F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x169D JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x16EF DUP2 DUP5 PUSH2 0x167B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x170C JUMPI PUSH2 0x170B PUSH2 0x1472 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1719 DUP5 DUP3 DUP6 ADD PUSH2 0x14C0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1754 DUP2 PUSH2 0x1499 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1765 DUP4 DUP4 PUSH2 0x174B JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1787 DUP3 PUSH2 0x1722 JUMP JUMPDEST PUSH2 0x1791 DUP2 DUP6 PUSH2 0x172C JUMP JUMPDEST SWAP4 POP PUSH2 0x179C DUP4 PUSH2 0x173C JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x17CC JUMPI DUP2 MLOAD PUSH2 0x17B3 DUP9 DUP3 PUSH2 0x175A JUMP JUMPDEST SWAP8 POP PUSH2 0x17BE DUP4 PUSH2 0x1771 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x179F JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17F1 DUP2 DUP5 PUSH2 0x177D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1802 DUP2 PUSH2 0x1499 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x181B PUSH0 DUP4 ADD DUP5 PUSH2 0x17F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1833 DUP2 PUSH2 0x1821 JUMP JUMPDEST DUP2 EQ PUSH2 0x183D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x184E DUP2 PUSH2 0x182A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1869 JUMPI PUSH2 0x1868 PUSH2 0x1472 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1876 DUP5 DUP3 DUP6 ADD PUSH2 0x1840 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x47616D65206E6F74207265676973746572656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x18F0 PUSH1 0x13 DUP4 PUSH2 0x18AC JUMP JUMPDEST SWAP2 POP PUSH2 0x18FB DUP3 PUSH2 0x18BC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x191D DUP2 PUSH2 0x18E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4173736574206E6F74207265676973746572656420666F722067616D65000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1958 PUSH1 0x1D DUP4 PUSH2 0x18AC JUMP JUMPDEST SWAP2 POP PUSH2 0x1963 DUP3 PUSH2 0x1924 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1985 DUP2 PUSH2 0x194C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x19C3 DUP3 PUSH2 0x1821 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x19F5 JUMPI PUSH2 0x19F4 PUSH2 0x198C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x496E76616C696420617373657420636F6E747261637400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A61 PUSH1 0x16 DUP4 PUSH2 0x18AC JUMP JUMPDEST SWAP2 POP PUSH2 0x1A6C DUP3 PUSH2 0x1A2D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A8E DUP2 PUSH2 0x1A55 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F206174747269627574657320737065636966696564000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1AC9 PUSH1 0x17 DUP4 PUSH2 0x18AC JUMP JUMPDEST SWAP2 POP PUSH2 0x1AD4 DUP3 PUSH2 0x1A95 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AF6 DUP2 PUSH2 0x1ABD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B15 DUP4 DUP6 PUSH2 0x1621 JUMP JUMPDEST SWAP4 POP PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x1B48 JUMPI PUSH2 0x1B47 PUSH2 0x1AFD JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 MUL SWAP3 POP PUSH2 0x1B59 DUP4 DUP6 DUP5 PUSH2 0x1B01 JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B7E DUP2 DUP5 DUP7 PUSH2 0x1B0A JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x496E76616C69642067616D652061646472657373000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1BBB PUSH1 0x14 DUP4 PUSH2 0x18AC JUMP JUMPDEST SWAP2 POP PUSH2 0x1BC6 DUP3 PUSH2 0x1B87 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BE8 DUP2 PUSH2 0x1BAF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x47616D6520616C72656164792072656769737465726564000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C23 PUSH1 0x17 DUP4 PUSH2 0x18AC JUMP JUMPDEST SWAP2 POP PUSH2 0x1C2E DUP3 PUSH2 0x1BEF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C50 DUP2 PUSH2 0x1C17 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB PUSH15 0x151A27A9DD7F9F86F1321E922261E0 0x29 CALLCODE 0xDF 0xD2 0xCE CODESIZE 0xB0 CALL 0x4B 0xE PUSH26 0x927FBBB864736F6C634300081A00330000000000000000000000 ",
							"sourceMap": "111:6033:5:-:0;;;1031:35;;;;;;;;;;1053:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;111:6033:5;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:126:7:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;111:6033:5:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 4767,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_276": {
									"entryPoint": 5095,
									"id": 276,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 4902,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getGameAssetContracts_1019": {
									"entryPoint": 1637,
									"id": 1019,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getGamePermissions_822": {
									"entryPoint": 1084,
									"id": 822,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@grantAssetPermission_726": {
									"entryPoint": 2496,
									"id": 726,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@hasPermissions_918": {
									"entryPoint": 563,
									"id": 918,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@isGameRegistered_783": {
									"entryPoint": 4551,
									"id": 783,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 3725,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@registerGame_658": {
									"entryPoint": 3764,
									"id": 658,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@registeredGames_560": {
									"entryPoint": 4492,
									"id": 560,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 3706,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@revokeAssetPermission_769": {
									"entryPoint": 3105,
									"id": 769,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 4635,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 5312,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_bytes32_$dyn_calldata_ptr": {
									"entryPoint": 5344,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6208,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5879,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5593,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_bytes32_$dyn_calldata_ptr": {
									"entryPoint": 5429,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6228,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_address_to_t_address": {
									"entryPoint": 5978,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_bytes32_to_t_bytes32": {
									"entryPoint": 5720,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 5963,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6137,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 6013,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_array$_t_bytes32_$dyn_calldata_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack": {
									"entryPoint": 6922,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack": {
									"entryPoint": 5755,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5553,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32": {
									"entryPoint": 5705,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_052cf812ba7508c49cdec2b16509980e963100ee665849219692e78e8ddd4650_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6741,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1edb0667ab871f480cc99b846d0e89fbd59606d5093450b6acb4e5c6386744c5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6372,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_277f09ddce34479b4d8dbf7c94ce9867419d4661334c514823c83992376d37f6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6476,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_523a1be2df150250aa7866f2d72f2430b839f9917e1233923df7f810d36fadc8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7191,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7fa703979043a4477af2668208e33e99c2be710d1b8d49bb5cc41b4b3bbac4a8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7087,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e44ec8f4706645e78b250e633c2648c89f9bf6bc2df7092dd012b1ffcc15e7e8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6845,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6152,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 6105,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_bytes32_$dyn_calldata_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 7013,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 5847,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5568,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_052cf812ba7508c49cdec2b16509980e963100ee665849219692e78e8ddd4650__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6775,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1edb0667ab871f480cc99b846d0e89fbd59606d5093450b6acb4e5c6386744c5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6406,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_277f09ddce34479b4d8dbf7c94ce9867419d4661334c514823c83992376d37f6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6510,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_523a1be2df150250aa7866f2d72f2430b839f9917e1233923df7f810d36fadc8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7225,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7fa703979043a4477af2668208e33e99c2be710d1b8d49bb5cc41b4b3bbac4a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7121,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e44ec8f4706645e78b250e633c2648c89f9bf6bc2df7092dd012b1ffcc15e7e8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6879,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 5948,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr": {
									"entryPoint": 5681,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 5922,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_bytes32_$dyn_memory_ptr": {
									"entryPoint": 5655,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 6001,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr": {
									"entryPoint": 5743,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 5932,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack": {
									"entryPoint": 5665,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6316,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5273,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5542,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 5696,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5242,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6177,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 6913,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 6585,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6540,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 6271,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6656,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 5336,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 5332,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 5340,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 5238,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_d0468cefdb41083d2ff66f1e66140f10c9da08cd905521a779422e76a84d11ec": {
									"entryPoint": 6909,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5234,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_052cf812ba7508c49cdec2b16509980e963100ee665849219692e78e8ddd4650": {
									"entryPoint": 6701,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1edb0667ab871f480cc99b846d0e89fbd59606d5093450b6acb4e5c6386744c5": {
									"entryPoint": 6332,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_277f09ddce34479b4d8dbf7c94ce9867419d4661334c514823c83992376d37f6": {
									"entryPoint": 6436,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_523a1be2df150250aa7866f2d72f2430b839f9917e1233923df7f810d36fadc8": {
									"entryPoint": 7151,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7fa703979043a4477af2668208e33e99c2be710d1b8d49bb5cc41b4b3bbac4a8": {
									"entryPoint": 7047,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e44ec8f4706645e78b250e633c2648c89f9bf6bc2df7092dd012b1ffcc15e7e8": {
									"entryPoint": 6805,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5290,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6186,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:17073:7",
										"nodeType": "YulBlock",
										"src": "0:17073:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "379:81:7",
													"nodeType": "YulBlock",
													"src": "379:81:7",
													"statements": [
														{
															"nativeSrc": "389:65:7",
															"nodeType": "YulAssignment",
															"src": "389:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:7",
																		"nodeType": "YulLiteral",
																		"src": "411:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:7"
																},
																"nativeSrc": "400:54:7",
																"nodeType": "YulFunctionCall",
																"src": "400:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:7",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:7",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:126:7"
											},
											{
												"body": {
													"nativeSrc": "511:51:7",
													"nodeType": "YulBlock",
													"src": "511:51:7",
													"statements": [
														{
															"nativeSrc": "521:35:7",
															"nodeType": "YulAssignment",
															"src": "521:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:7"
																},
																"nativeSrc": "532:24:7",
																"nodeType": "YulFunctionCall",
																"src": "532:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:7",
														"nodeType": "YulTypedName",
														"src": "493:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:7",
														"nodeType": "YulTypedName",
														"src": "503:7:7",
														"type": ""
													}
												],
												"src": "466:96:7"
											},
											{
												"body": {
													"nativeSrc": "611:79:7",
													"nodeType": "YulBlock",
													"src": "611:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:7",
																"nodeType": "YulBlock",
																"src": "668:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:7",
																					"nodeType": "YulLiteral",
																					"src": "677:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:7",
																					"nodeType": "YulLiteral",
																					"src": "680:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:7"
																			},
																			"nativeSrc": "670:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:7"
																		},
																		"nativeSrc": "670:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:7"
																				},
																				"nativeSrc": "641:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:7"
																		},
																		"nativeSrc": "631:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:7"
																},
																"nativeSrc": "624:43:7",
																"nodeType": "YulFunctionCall",
																"src": "624:43:7"
															},
															"nativeSrc": "621:63:7",
															"nodeType": "YulIf",
															"src": "621:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:7",
														"nodeType": "YulTypedName",
														"src": "604:5:7",
														"type": ""
													}
												],
												"src": "568:122:7"
											},
											{
												"body": {
													"nativeSrc": "748:87:7",
													"nodeType": "YulBlock",
													"src": "748:87:7",
													"statements": [
														{
															"nativeSrc": "758:29:7",
															"nodeType": "YulAssignment",
															"src": "758:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:7"
																},
																"nativeSrc": "767:20:7",
																"nodeType": "YulFunctionCall",
																"src": "767:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:7"
																},
																"nativeSrc": "796:33:7",
																"nodeType": "YulFunctionCall",
																"src": "796:33:7"
															},
															"nativeSrc": "796:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:7",
														"nodeType": "YulTypedName",
														"src": "726:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:7",
														"nodeType": "YulTypedName",
														"src": "734:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:7",
														"nodeType": "YulTypedName",
														"src": "742:5:7",
														"type": ""
													}
												],
												"src": "696:139:7"
											},
											{
												"body": {
													"nativeSrc": "930:28:7",
													"nodeType": "YulBlock",
													"src": "930:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "947:1:7",
																		"nodeType": "YulLiteral",
																		"src": "947:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "950:1:7",
																		"nodeType": "YulLiteral",
																		"src": "950:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "940:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "940:6:7"
																},
																"nativeSrc": "940:12:7",
																"nodeType": "YulFunctionCall",
																"src": "940:12:7"
															},
															"nativeSrc": "940:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "940:12:7"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "841:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "841:117:7"
											},
											{
												"body": {
													"nativeSrc": "1053:28:7",
													"nodeType": "YulBlock",
													"src": "1053:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1070:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1070:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1073:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1073:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1063:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1063:6:7"
																},
																"nativeSrc": "1063:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1063:12:7"
															},
															"nativeSrc": "1063:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1063:12:7"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nativeSrc": "964:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "964:117:7"
											},
											{
												"body": {
													"nativeSrc": "1176:28:7",
													"nodeType": "YulBlock",
													"src": "1176:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1193:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1193:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1196:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1196:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1186:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1186:6:7"
																},
																"nativeSrc": "1186:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1186:12:7"
															},
															"nativeSrc": "1186:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1186:12:7"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "1087:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1087:117:7"
											},
											{
												"body": {
													"nativeSrc": "1317:478:7",
													"nodeType": "YulBlock",
													"src": "1317:478:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1366:83:7",
																"nodeType": "YulBlock",
																"src": "1366:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "1368:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "1368:77:7"
																			},
																			"nativeSrc": "1368:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1368:79:7"
																		},
																		"nativeSrc": "1368:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1368:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "1345:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1345:6:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1353:4:7",
																						"nodeType": "YulLiteral",
																						"src": "1353:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1341:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1341:3:7"
																				},
																				"nativeSrc": "1341:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1341:17:7"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "1360:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "1360:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "1337:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1337:3:7"
																		},
																		"nativeSrc": "1337:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1337:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1330:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1330:6:7"
																},
																"nativeSrc": "1330:35:7",
																"nodeType": "YulFunctionCall",
																"src": "1330:35:7"
															},
															"nativeSrc": "1327:122:7",
															"nodeType": "YulIf",
															"src": "1327:122:7"
														},
														{
															"nativeSrc": "1458:30:7",
															"nodeType": "YulAssignment",
															"src": "1458:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1481:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1481:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1468:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "1468:12:7"
																},
																"nativeSrc": "1468:20:7",
																"nodeType": "YulFunctionCall",
																"src": "1468:20:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1458:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1458:6:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1531:83:7",
																"nodeType": "YulBlock",
																"src": "1531:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "1533:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "1533:77:7"
																			},
																			"nativeSrc": "1533:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1533:79:7"
																		},
																		"nativeSrc": "1533:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1533:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1503:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1503:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1511:18:7",
																		"nodeType": "YulLiteral",
																		"src": "1511:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1500:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1500:2:7"
																},
																"nativeSrc": "1500:30:7",
																"nodeType": "YulFunctionCall",
																"src": "1500:30:7"
															},
															"nativeSrc": "1497:117:7",
															"nodeType": "YulIf",
															"src": "1497:117:7"
														},
														{
															"nativeSrc": "1623:29:7",
															"nodeType": "YulAssignment",
															"src": "1623:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1639:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1639:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1647:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1647:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1635:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:7"
																},
																"nativeSrc": "1635:17:7",
																"nodeType": "YulFunctionCall",
																"src": "1635:17:7"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "1623:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "1623:8:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1706:83:7",
																"nodeType": "YulBlock",
																"src": "1706:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "1708:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "1708:77:7"
																			},
																			"nativeSrc": "1708:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1708:79:7"
																		},
																		"nativeSrc": "1708:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1708:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "1671:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "1671:8:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "1685:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1685:6:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1693:4:7",
																						"nodeType": "YulLiteral",
																						"src": "1693:4:7",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "1681:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1681:3:7"
																				},
																				"nativeSrc": "1681:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1681:17:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1667:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1667:3:7"
																		},
																		"nativeSrc": "1667:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1667:32:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "1701:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1701:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1664:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1664:2:7"
																},
																"nativeSrc": "1664:41:7",
																"nodeType": "YulFunctionCall",
																"src": "1664:41:7"
															},
															"nativeSrc": "1661:128:7",
															"nodeType": "YulIf",
															"src": "1661:128:7"
														}
													]
												},
												"name": "abi_decode_t_array$_t_bytes32_$dyn_calldata_ptr",
												"nativeSrc": "1227:568:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1284:6:7",
														"nodeType": "YulTypedName",
														"src": "1284:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1292:3:7",
														"nodeType": "YulTypedName",
														"src": "1292:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "1300:8:7",
														"nodeType": "YulTypedName",
														"src": "1300:8:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1310:6:7",
														"nodeType": "YulTypedName",
														"src": "1310:6:7",
														"type": ""
													}
												],
												"src": "1227:568:7"
											},
											{
												"body": {
													"nativeSrc": "1936:714:7",
													"nodeType": "YulBlock",
													"src": "1936:714:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1982:83:7",
																"nodeType": "YulBlock",
																"src": "1982:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1984:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "1984:77:7"
																			},
																			"nativeSrc": "1984:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1984:79:7"
																		},
																		"nativeSrc": "1984:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1984:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1957:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1957:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1966:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1966:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1953:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1953:3:7"
																		},
																		"nativeSrc": "1953:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1953:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1978:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1978:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1949:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1949:3:7"
																},
																"nativeSrc": "1949:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1949:32:7"
															},
															"nativeSrc": "1946:119:7",
															"nodeType": "YulIf",
															"src": "1946:119:7"
														},
														{
															"nativeSrc": "2075:117:7",
															"nodeType": "YulBlock",
															"src": "2075:117:7",
															"statements": [
																{
																	"nativeSrc": "2090:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2090:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2104:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2104:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2094:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2094:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2119:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2119:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2154:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2154:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2165:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2165:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2150:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2150:3:7"
																				},
																				"nativeSrc": "2150:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2150:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2174:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2174:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2129:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2129:20:7"
																		},
																		"nativeSrc": "2129:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2129:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2119:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2119:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2202:118:7",
															"nodeType": "YulBlock",
															"src": "2202:118:7",
															"statements": [
																{
																	"nativeSrc": "2217:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2217:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2231:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2231:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2221:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2221:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2247:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2247:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2282:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2282:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2293:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2293:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2278:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2278:3:7"
																				},
																				"nativeSrc": "2278:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2278:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2302:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2302:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2257:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2257:20:7"
																		},
																		"nativeSrc": "2257:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2257:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2247:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2247:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2330:313:7",
															"nodeType": "YulBlock",
															"src": "2330:313:7",
															"statements": [
																{
																	"nativeSrc": "2345:46:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2345:46:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2376:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2376:9:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2387:2:7",
																						"nodeType": "YulLiteral",
																						"src": "2387:2:7",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2372:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2372:3:7"
																				},
																				"nativeSrc": "2372:18:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2372:18:7"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "2359:12:7",
																			"nodeType": "YulIdentifier",
																			"src": "2359:12:7"
																		},
																		"nativeSrc": "2359:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2359:32:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2349:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2349:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "2438:83:7",
																		"nodeType": "YulBlock",
																		"src": "2438:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "2440:77:7",
																						"nodeType": "YulIdentifier",
																						"src": "2440:77:7"
																					},
																					"nativeSrc": "2440:79:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2440:79:7"
																				},
																				"nativeSrc": "2440:79:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "2440:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2410:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2410:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2418:18:7",
																				"nodeType": "YulLiteral",
																				"src": "2418:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2407:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2407:2:7"
																		},
																		"nativeSrc": "2407:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2407:30:7"
																	},
																	"nativeSrc": "2404:117:7",
																	"nodeType": "YulIf",
																	"src": "2404:117:7"
																},
																{
																	"nativeSrc": "2535:98:7",
																	"nodeType": "YulAssignment",
																	"src": "2535:98:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2605:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2605:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2616:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2616:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2601:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2601:3:7"
																				},
																				"nativeSrc": "2601:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2601:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2625:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2625:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_bytes32_$dyn_calldata_ptr",
																			"nativeSrc": "2553:47:7",
																			"nodeType": "YulIdentifier",
																			"src": "2553:47:7"
																		},
																		"nativeSrc": "2553:80:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2553:80:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "2535:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2535:6:7"
																		},
																		{
																			"name": "value3",
																			"nativeSrc": "2543:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2543:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_bytes32_$dyn_calldata_ptr",
												"nativeSrc": "1801:849:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1882:9:7",
														"nodeType": "YulTypedName",
														"src": "1882:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1893:7:7",
														"nodeType": "YulTypedName",
														"src": "1893:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1905:6:7",
														"nodeType": "YulTypedName",
														"src": "1905:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1913:6:7",
														"nodeType": "YulTypedName",
														"src": "1913:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1921:6:7",
														"nodeType": "YulTypedName",
														"src": "1921:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1929:6:7",
														"nodeType": "YulTypedName",
														"src": "1929:6:7",
														"type": ""
													}
												],
												"src": "1801:849:7"
											},
											{
												"body": {
													"nativeSrc": "2698:48:7",
													"nodeType": "YulBlock",
													"src": "2698:48:7",
													"statements": [
														{
															"nativeSrc": "2708:32:7",
															"nodeType": "YulAssignment",
															"src": "2708:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2733:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2733:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2726:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2726:6:7"
																		},
																		"nativeSrc": "2726:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2726:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2719:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2719:6:7"
																},
																"nativeSrc": "2719:21:7",
																"nodeType": "YulFunctionCall",
																"src": "2719:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2708:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2708:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2656:90:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2680:5:7",
														"nodeType": "YulTypedName",
														"src": "2680:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2690:7:7",
														"nodeType": "YulTypedName",
														"src": "2690:7:7",
														"type": ""
													}
												],
												"src": "2656:90:7"
											},
											{
												"body": {
													"nativeSrc": "2811:50:7",
													"nodeType": "YulBlock",
													"src": "2811:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2828:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2828:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2848:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2848:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "2833:14:7",
																			"nodeType": "YulIdentifier",
																			"src": "2833:14:7"
																		},
																		"nativeSrc": "2833:21:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2833:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2821:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2821:6:7"
																},
																"nativeSrc": "2821:34:7",
																"nodeType": "YulFunctionCall",
																"src": "2821:34:7"
															},
															"nativeSrc": "2821:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "2821:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "2752:109:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2799:5:7",
														"nodeType": "YulTypedName",
														"src": "2799:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2806:3:7",
														"nodeType": "YulTypedName",
														"src": "2806:3:7",
														"type": ""
													}
												],
												"src": "2752:109:7"
											},
											{
												"body": {
													"nativeSrc": "2959:118:7",
													"nodeType": "YulBlock",
													"src": "2959:118:7",
													"statements": [
														{
															"nativeSrc": "2969:26:7",
															"nodeType": "YulAssignment",
															"src": "2969:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2981:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2981:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2992:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2992:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2977:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2977:3:7"
																},
																"nativeSrc": "2977:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2977:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2969:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2969:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3043:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3043:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3056:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3056:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3067:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3067:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3052:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3052:3:7"
																		},
																		"nativeSrc": "3052:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3052:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3005:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "3005:37:7"
																},
																"nativeSrc": "3005:65:7",
																"nodeType": "YulFunctionCall",
																"src": "3005:65:7"
															},
															"nativeSrc": "3005:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "3005:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "2867:210:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2931:9:7",
														"nodeType": "YulTypedName",
														"src": "2931:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2943:6:7",
														"nodeType": "YulTypedName",
														"src": "2943:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2954:4:7",
														"nodeType": "YulTypedName",
														"src": "2954:4:7",
														"type": ""
													}
												],
												"src": "2867:210:7"
											},
											{
												"body": {
													"nativeSrc": "3166:391:7",
													"nodeType": "YulBlock",
													"src": "3166:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3212:83:7",
																"nodeType": "YulBlock",
																"src": "3212:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3214:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3214:77:7"
																			},
																			"nativeSrc": "3214:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3214:79:7"
																		},
																		"nativeSrc": "3214:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3214:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3187:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3187:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3196:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3196:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3183:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3183:3:7"
																		},
																		"nativeSrc": "3183:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3183:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3208:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3208:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3179:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3179:3:7"
																},
																"nativeSrc": "3179:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3179:32:7"
															},
															"nativeSrc": "3176:119:7",
															"nodeType": "YulIf",
															"src": "3176:119:7"
														},
														{
															"nativeSrc": "3305:117:7",
															"nodeType": "YulBlock",
															"src": "3305:117:7",
															"statements": [
																{
																	"nativeSrc": "3320:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3320:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3334:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3334:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3324:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3324:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3349:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3349:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3384:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3384:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3395:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3395:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3380:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3380:3:7"
																				},
																				"nativeSrc": "3380:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3380:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3404:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3404:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3359:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "3359:20:7"
																		},
																		"nativeSrc": "3359:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3359:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3349:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3349:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3432:118:7",
															"nodeType": "YulBlock",
															"src": "3432:118:7",
															"statements": [
																{
																	"nativeSrc": "3447:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3447:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3461:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3461:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3451:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3451:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3477:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3477:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3512:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3512:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3523:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3523:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3508:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3508:3:7"
																				},
																				"nativeSrc": "3508:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3508:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3532:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3532:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3487:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "3487:20:7"
																		},
																		"nativeSrc": "3487:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3487:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3477:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3477:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "3083:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3128:9:7",
														"nodeType": "YulTypedName",
														"src": "3128:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3139:7:7",
														"nodeType": "YulTypedName",
														"src": "3139:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3151:6:7",
														"nodeType": "YulTypedName",
														"src": "3151:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3159:6:7",
														"nodeType": "YulTypedName",
														"src": "3159:6:7",
														"type": ""
													}
												],
												"src": "3083:474:7"
											},
											{
												"body": {
													"nativeSrc": "3637:40:7",
													"nodeType": "YulBlock",
													"src": "3637:40:7",
													"statements": [
														{
															"nativeSrc": "3648:22:7",
															"nodeType": "YulAssignment",
															"src": "3648:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3664:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3664:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3658:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3658:5:7"
																},
																"nativeSrc": "3658:12:7",
																"nodeType": "YulFunctionCall",
																"src": "3658:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3648:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3648:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_bytes32_$dyn_memory_ptr",
												"nativeSrc": "3563:114:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3620:5:7",
														"nodeType": "YulTypedName",
														"src": "3620:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3630:6:7",
														"nodeType": "YulTypedName",
														"src": "3630:6:7",
														"type": ""
													}
												],
												"src": "3563:114:7"
											},
											{
												"body": {
													"nativeSrc": "3794:73:7",
													"nodeType": "YulBlock",
													"src": "3794:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3811:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3811:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3816:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3816:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3804:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3804:6:7"
																},
																"nativeSrc": "3804:19:7",
																"nodeType": "YulFunctionCall",
																"src": "3804:19:7"
															},
															"nativeSrc": "3804:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "3804:19:7"
														},
														{
															"nativeSrc": "3832:29:7",
															"nodeType": "YulAssignment",
															"src": "3832:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3851:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3851:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3856:4:7",
																		"nodeType": "YulLiteral",
																		"src": "3856:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3847:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3847:3:7"
																},
																"nativeSrc": "3847:14:7",
																"nodeType": "YulFunctionCall",
																"src": "3847:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3832:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "3832:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack",
												"nativeSrc": "3683:184:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3766:3:7",
														"nodeType": "YulTypedName",
														"src": "3766:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3771:6:7",
														"nodeType": "YulTypedName",
														"src": "3771:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3782:11:7",
														"nodeType": "YulTypedName",
														"src": "3782:11:7",
														"type": ""
													}
												],
												"src": "3683:184:7"
											},
											{
												"body": {
													"nativeSrc": "3945:60:7",
													"nodeType": "YulBlock",
													"src": "3945:60:7",
													"statements": [
														{
															"nativeSrc": "3955:11:7",
															"nodeType": "YulAssignment",
															"src": "3955:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "3963:3:7",
																"nodeType": "YulIdentifier",
																"src": "3963:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3955:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3955:4:7"
																}
															]
														},
														{
															"nativeSrc": "3976:22:7",
															"nodeType": "YulAssignment",
															"src": "3976:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "3988:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3988:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3993:4:7",
																		"nodeType": "YulLiteral",
																		"src": "3993:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3984:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3984:3:7"
																},
																"nativeSrc": "3984:14:7",
																"nodeType": "YulFunctionCall",
																"src": "3984:14:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3976:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3976:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr",
												"nativeSrc": "3873:132:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "3932:3:7",
														"nodeType": "YulTypedName",
														"src": "3932:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "3940:4:7",
														"nodeType": "YulTypedName",
														"src": "3940:4:7",
														"type": ""
													}
												],
												"src": "3873:132:7"
											},
											{
												"body": {
													"nativeSrc": "4056:32:7",
													"nodeType": "YulBlock",
													"src": "4056:32:7",
													"statements": [
														{
															"nativeSrc": "4066:16:7",
															"nodeType": "YulAssignment",
															"src": "4066:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "4077:5:7",
																"nodeType": "YulIdentifier",
																"src": "4077:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4066:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "4066:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "4011:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4038:5:7",
														"nodeType": "YulTypedName",
														"src": "4038:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4048:7:7",
														"nodeType": "YulTypedName",
														"src": "4048:7:7",
														"type": ""
													}
												],
												"src": "4011:77:7"
											},
											{
												"body": {
													"nativeSrc": "4149:53:7",
													"nodeType": "YulBlock",
													"src": "4149:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4166:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4166:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4189:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4189:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "4171:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "4171:17:7"
																		},
																		"nativeSrc": "4171:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4171:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4159:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4159:6:7"
																},
																"nativeSrc": "4159:37:7",
																"nodeType": "YulFunctionCall",
																"src": "4159:37:7"
															},
															"nativeSrc": "4159:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "4159:37:7"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32",
												"nativeSrc": "4094:108:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4137:5:7",
														"nodeType": "YulTypedName",
														"src": "4137:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4144:3:7",
														"nodeType": "YulTypedName",
														"src": "4144:3:7",
														"type": ""
													}
												],
												"src": "4094:108:7"
											},
											{
												"body": {
													"nativeSrc": "4288:99:7",
													"nodeType": "YulBlock",
													"src": "4288:99:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4332:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4332:6:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "4340:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4340:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32",
																	"nativeSrc": "4298:33:7",
																	"nodeType": "YulIdentifier",
																	"src": "4298:33:7"
																},
																"nativeSrc": "4298:46:7",
																"nodeType": "YulFunctionCall",
																"src": "4298:46:7"
															},
															"nativeSrc": "4298:46:7",
															"nodeType": "YulExpressionStatement",
															"src": "4298:46:7"
														},
														{
															"nativeSrc": "4353:28:7",
															"nodeType": "YulAssignment",
															"src": "4353:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4371:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4371:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4376:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4376:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4367:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4367:3:7"
																},
																"nativeSrc": "4367:14:7",
																"nodeType": "YulFunctionCall",
																"src": "4367:14:7"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "4353:10:7",
																	"nodeType": "YulIdentifier",
																	"src": "4353:10:7"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_bytes32_to_t_bytes32",
												"nativeSrc": "4208:179:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "4261:6:7",
														"nodeType": "YulTypedName",
														"src": "4261:6:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4269:3:7",
														"nodeType": "YulTypedName",
														"src": "4269:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "4277:10:7",
														"nodeType": "YulTypedName",
														"src": "4277:10:7",
														"type": ""
													}
												],
												"src": "4208:179:7"
											},
											{
												"body": {
													"nativeSrc": "4468:38:7",
													"nodeType": "YulBlock",
													"src": "4468:38:7",
													"statements": [
														{
															"nativeSrc": "4478:22:7",
															"nodeType": "YulAssignment",
															"src": "4478:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "4490:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4490:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4495:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4495:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4486:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4486:3:7"
																},
																"nativeSrc": "4486:14:7",
																"nodeType": "YulFunctionCall",
																"src": "4486:14:7"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "4478:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4478:4:7"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr",
												"nativeSrc": "4393:113:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "4455:3:7",
														"nodeType": "YulTypedName",
														"src": "4455:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "4463:4:7",
														"nodeType": "YulTypedName",
														"src": "4463:4:7",
														"type": ""
													}
												],
												"src": "4393:113:7"
											},
											{
												"body": {
													"nativeSrc": "4666:608:7",
													"nodeType": "YulBlock",
													"src": "4666:608:7",
													"statements": [
														{
															"nativeSrc": "4676:68:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4676:68:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4738:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4738:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_bytes32_$dyn_memory_ptr",
																	"nativeSrc": "4690:47:7",
																	"nodeType": "YulIdentifier",
																	"src": "4690:47:7"
																},
																"nativeSrc": "4690:54:7",
																"nodeType": "YulFunctionCall",
																"src": "4690:54:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "4680:6:7",
																	"nodeType": "YulTypedName",
																	"src": "4680:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4753:93:7",
															"nodeType": "YulAssignment",
															"src": "4753:93:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4834:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4834:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4839:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4839:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "4760:73:7",
																	"nodeType": "YulIdentifier",
																	"src": "4760:73:7"
																},
																"nativeSrc": "4760:86:7",
																"nodeType": "YulFunctionCall",
																"src": "4760:86:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4753:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4753:3:7"
																}
															]
														},
														{
															"nativeSrc": "4855:71:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4855:71:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4920:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4920:5:7"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr",
																	"nativeSrc": "4870:49:7",
																	"nodeType": "YulIdentifier",
																	"src": "4870:49:7"
																},
																"nativeSrc": "4870:56:7",
																"nodeType": "YulFunctionCall",
																"src": "4870:56:7"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "4859:7:7",
																	"nodeType": "YulTypedName",
																	"src": "4859:7:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4935:21:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4935:21:7",
															"value": {
																"name": "baseRef",
																"nativeSrc": "4949:7:7",
																"nodeType": "YulIdentifier",
																"src": "4949:7:7"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "4939:6:7",
																	"nodeType": "YulTypedName",
																	"src": "4939:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5025:224:7",
																"nodeType": "YulBlock",
																"src": "5025:224:7",
																"statements": [
																	{
																		"nativeSrc": "5039:34:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5039:34:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "5066:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "5066:6:7"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "5060:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5060:5:7"
																			},
																			"nativeSrc": "5060:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5060:13:7"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "5043:13:7",
																				"nodeType": "YulTypedName",
																				"src": "5043:13:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "5086:70:7",
																		"nodeType": "YulAssignment",
																		"src": "5086:70:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "5137:13:7",
																					"nodeType": "YulIdentifier",
																					"src": "5137:13:7"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "5152:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5152:3:7"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_bytes32_to_t_bytes32",
																				"nativeSrc": "5093:43:7",
																				"nodeType": "YulIdentifier",
																				"src": "5093:43:7"
																			},
																			"nativeSrc": "5093:63:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5093:63:7"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "5086:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "5086:3:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "5169:70:7",
																		"nodeType": "YulAssignment",
																		"src": "5169:70:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "5232:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "5232:6:7"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr",
																				"nativeSrc": "5179:52:7",
																				"nodeType": "YulIdentifier",
																				"src": "5179:52:7"
																			},
																			"nativeSrc": "5179:60:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5179:60:7"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "5169:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5169:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "4987:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "4987:1:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4990:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4990:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "4984:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4984:2:7"
																},
																"nativeSrc": "4984:13:7",
																"nodeType": "YulFunctionCall",
																"src": "4984:13:7"
															},
															"nativeSrc": "4965:284:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4998:18:7",
																"nodeType": "YulBlock",
																"src": "4998:18:7",
																"statements": [
																	{
																		"nativeSrc": "5000:14:7",
																		"nodeType": "YulAssignment",
																		"src": "5000:14:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "5009:1:7",
																					"nodeType": "YulIdentifier",
																					"src": "5009:1:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5012:1:7",
																					"nodeType": "YulLiteral",
																					"src": "5012:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5005:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "5005:3:7"
																			},
																			"nativeSrc": "5005:9:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5005:9:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "5000:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "5000:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "4969:14:7",
																"nodeType": "YulBlock",
																"src": "4969:14:7",
																"statements": [
																	{
																		"nativeSrc": "4971:10:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4971:10:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "4980:1:7",
																			"nodeType": "YulLiteral",
																			"src": "4980:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "4975:1:7",
																				"nodeType": "YulTypedName",
																				"src": "4975:1:7",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "4965:284:7"
														},
														{
															"nativeSrc": "5258:10:7",
															"nodeType": "YulAssignment",
															"src": "5258:10:7",
															"value": {
																"name": "pos",
																"nativeSrc": "5265:3:7",
																"nodeType": "YulIdentifier",
																"src": "5265:3:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5258:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5258:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack",
												"nativeSrc": "4542:732:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4645:5:7",
														"nodeType": "YulTypedName",
														"src": "4645:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4652:3:7",
														"nodeType": "YulTypedName",
														"src": "4652:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4661:3:7",
														"nodeType": "YulTypedName",
														"src": "4661:3:7",
														"type": ""
													}
												],
												"src": "4542:732:7"
											},
											{
												"body": {
													"nativeSrc": "5428:225:7",
													"nodeType": "YulBlock",
													"src": "5428:225:7",
													"statements": [
														{
															"nativeSrc": "5438:26:7",
															"nodeType": "YulAssignment",
															"src": "5438:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5450:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5450:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5461:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5461:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5446:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5446:3:7"
																},
																"nativeSrc": "5446:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5446:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5438:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5438:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5485:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5485:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5496:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5496:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5481:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5481:3:7"
																		},
																		"nativeSrc": "5481:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5481:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5504:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "5504:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5510:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5510:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5500:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5500:3:7"
																		},
																		"nativeSrc": "5500:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5500:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5474:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5474:6:7"
																},
																"nativeSrc": "5474:47:7",
																"nodeType": "YulFunctionCall",
																"src": "5474:47:7"
															},
															"nativeSrc": "5474:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "5474:47:7"
														},
														{
															"nativeSrc": "5530:116:7",
															"nodeType": "YulAssignment",
															"src": "5530:116:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5632:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5632:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "5641:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5641:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "5538:93:7",
																	"nodeType": "YulIdentifier",
																	"src": "5538:93:7"
																},
																"nativeSrc": "5538:108:7",
																"nodeType": "YulFunctionCall",
																"src": "5538:108:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5530:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5530:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "5280:373:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5400:9:7",
														"nodeType": "YulTypedName",
														"src": "5400:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5412:6:7",
														"nodeType": "YulTypedName",
														"src": "5412:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5423:4:7",
														"nodeType": "YulTypedName",
														"src": "5423:4:7",
														"type": ""
													}
												],
												"src": "5280:373:7"
											},
											{
												"body": {
													"nativeSrc": "5725:263:7",
													"nodeType": "YulBlock",
													"src": "5725:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5771:83:7",
																"nodeType": "YulBlock",
																"src": "5771:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5773:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "5773:77:7"
																			},
																			"nativeSrc": "5773:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5773:79:7"
																		},
																		"nativeSrc": "5773:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5773:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5746:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5746:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5755:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5755:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5742:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5742:3:7"
																		},
																		"nativeSrc": "5742:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5742:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5767:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5767:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5738:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5738:3:7"
																},
																"nativeSrc": "5738:32:7",
																"nodeType": "YulFunctionCall",
																"src": "5738:32:7"
															},
															"nativeSrc": "5735:119:7",
															"nodeType": "YulIf",
															"src": "5735:119:7"
														},
														{
															"nativeSrc": "5864:117:7",
															"nodeType": "YulBlock",
															"src": "5864:117:7",
															"statements": [
																{
																	"nativeSrc": "5879:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5879:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5893:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5893:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5883:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5883:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5908:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5908:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5943:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5943:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5954:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5954:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5939:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5939:3:7"
																				},
																				"nativeSrc": "5939:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5939:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5963:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5963:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5918:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5918:20:7"
																		},
																		"nativeSrc": "5918:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5918:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5908:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5908:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5659:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5695:9:7",
														"nodeType": "YulTypedName",
														"src": "5695:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5706:7:7",
														"nodeType": "YulTypedName",
														"src": "5706:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5718:6:7",
														"nodeType": "YulTypedName",
														"src": "5718:6:7",
														"type": ""
													}
												],
												"src": "5659:329:7"
											},
											{
												"body": {
													"nativeSrc": "6068:40:7",
													"nodeType": "YulBlock",
													"src": "6068:40:7",
													"statements": [
														{
															"nativeSrc": "6079:22:7",
															"nodeType": "YulAssignment",
															"src": "6079:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6095:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "6095:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6089:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "6089:5:7"
																},
																"nativeSrc": "6089:12:7",
																"nodeType": "YulFunctionCall",
																"src": "6089:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6079:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6079:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "5994:114:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6051:5:7",
														"nodeType": "YulTypedName",
														"src": "6051:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6061:6:7",
														"nodeType": "YulTypedName",
														"src": "6061:6:7",
														"type": ""
													}
												],
												"src": "5994:114:7"
											},
											{
												"body": {
													"nativeSrc": "6225:73:7",
													"nodeType": "YulBlock",
													"src": "6225:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6242:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6242:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6247:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6247:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6235:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6235:6:7"
																},
																"nativeSrc": "6235:19:7",
																"nodeType": "YulFunctionCall",
																"src": "6235:19:7"
															},
															"nativeSrc": "6235:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "6235:19:7"
														},
														{
															"nativeSrc": "6263:29:7",
															"nodeType": "YulAssignment",
															"src": "6263:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6282:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6282:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6287:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6287:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6278:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6278:3:7"
																},
																"nativeSrc": "6278:14:7",
																"nodeType": "YulFunctionCall",
																"src": "6278:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "6263:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "6263:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nativeSrc": "6114:184:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6197:3:7",
														"nodeType": "YulTypedName",
														"src": "6197:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6202:6:7",
														"nodeType": "YulTypedName",
														"src": "6202:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "6213:11:7",
														"nodeType": "YulTypedName",
														"src": "6213:11:7",
														"type": ""
													}
												],
												"src": "6114:184:7"
											},
											{
												"body": {
													"nativeSrc": "6376:60:7",
													"nodeType": "YulBlock",
													"src": "6376:60:7",
													"statements": [
														{
															"nativeSrc": "6386:11:7",
															"nodeType": "YulAssignment",
															"src": "6386:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "6394:3:7",
																"nodeType": "YulIdentifier",
																"src": "6394:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6386:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6386:4:7"
																}
															]
														},
														{
															"nativeSrc": "6407:22:7",
															"nodeType": "YulAssignment",
															"src": "6407:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "6419:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6419:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6424:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6424:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6415:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6415:3:7"
																},
																"nativeSrc": "6415:14:7",
																"nodeType": "YulFunctionCall",
																"src": "6415:14:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6407:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6407:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "6304:132:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "6363:3:7",
														"nodeType": "YulTypedName",
														"src": "6363:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "6371:4:7",
														"nodeType": "YulTypedName",
														"src": "6371:4:7",
														"type": ""
													}
												],
												"src": "6304:132:7"
											},
											{
												"body": {
													"nativeSrc": "6497:53:7",
													"nodeType": "YulBlock",
													"src": "6497:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6514:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6514:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6537:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6537:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6519:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "6519:17:7"
																		},
																		"nativeSrc": "6519:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6519:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6507:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6507:6:7"
																},
																"nativeSrc": "6507:37:7",
																"nodeType": "YulFunctionCall",
																"src": "6507:37:7"
															},
															"nativeSrc": "6507:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "6507:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nativeSrc": "6442:108:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6485:5:7",
														"nodeType": "YulTypedName",
														"src": "6485:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6492:3:7",
														"nodeType": "YulTypedName",
														"src": "6492:3:7",
														"type": ""
													}
												],
												"src": "6442:108:7"
											},
											{
												"body": {
													"nativeSrc": "6636:99:7",
													"nodeType": "YulBlock",
													"src": "6636:99:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6680:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6680:6:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "6688:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6688:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address",
																	"nativeSrc": "6646:33:7",
																	"nodeType": "YulIdentifier",
																	"src": "6646:33:7"
																},
																"nativeSrc": "6646:46:7",
																"nodeType": "YulFunctionCall",
																"src": "6646:46:7"
															},
															"nativeSrc": "6646:46:7",
															"nodeType": "YulExpressionStatement",
															"src": "6646:46:7"
														},
														{
															"nativeSrc": "6701:28:7",
															"nodeType": "YulAssignment",
															"src": "6701:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6719:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6719:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6724:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6724:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6715:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6715:3:7"
																},
																"nativeSrc": "6715:14:7",
																"nodeType": "YulFunctionCall",
																"src": "6715:14:7"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "6701:10:7",
																	"nodeType": "YulIdentifier",
																	"src": "6701:10:7"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_address_to_t_address",
												"nativeSrc": "6556:179:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "6609:6:7",
														"nodeType": "YulTypedName",
														"src": "6609:6:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6617:3:7",
														"nodeType": "YulTypedName",
														"src": "6617:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "6625:10:7",
														"nodeType": "YulTypedName",
														"src": "6625:10:7",
														"type": ""
													}
												],
												"src": "6556:179:7"
											},
											{
												"body": {
													"nativeSrc": "6816:38:7",
													"nodeType": "YulBlock",
													"src": "6816:38:7",
													"statements": [
														{
															"nativeSrc": "6826:22:7",
															"nodeType": "YulAssignment",
															"src": "6826:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "6838:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6838:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6843:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6843:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6834:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6834:3:7"
																},
																"nativeSrc": "6834:14:7",
																"nodeType": "YulFunctionCall",
																"src": "6834:14:7"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "6826:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6826:4:7"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "6741:113:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "6803:3:7",
														"nodeType": "YulTypedName",
														"src": "6803:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "6811:4:7",
														"nodeType": "YulTypedName",
														"src": "6811:4:7",
														"type": ""
													}
												],
												"src": "6741:113:7"
											},
											{
												"body": {
													"nativeSrc": "7014:608:7",
													"nodeType": "YulBlock",
													"src": "7014:608:7",
													"statements": [
														{
															"nativeSrc": "7024:68:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7024:68:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7086:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "7086:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
																	"nativeSrc": "7038:47:7",
																	"nodeType": "YulIdentifier",
																	"src": "7038:47:7"
																},
																"nativeSrc": "7038:54:7",
																"nodeType": "YulFunctionCall",
																"src": "7038:54:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7028:6:7",
																	"nodeType": "YulTypedName",
																	"src": "7028:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7101:93:7",
															"nodeType": "YulAssignment",
															"src": "7101:93:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7182:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7182:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7187:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7187:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "7108:73:7",
																	"nodeType": "YulIdentifier",
																	"src": "7108:73:7"
																},
																"nativeSrc": "7108:86:7",
																"nodeType": "YulFunctionCall",
																"src": "7108:86:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7101:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7101:3:7"
																}
															]
														},
														{
															"nativeSrc": "7203:71:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7203:71:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7268:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "7268:5:7"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
																	"nativeSrc": "7218:49:7",
																	"nodeType": "YulIdentifier",
																	"src": "7218:49:7"
																},
																"nativeSrc": "7218:56:7",
																"nodeType": "YulFunctionCall",
																"src": "7218:56:7"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "7207:7:7",
																	"nodeType": "YulTypedName",
																	"src": "7207:7:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7283:21:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7283:21:7",
															"value": {
																"name": "baseRef",
																"nativeSrc": "7297:7:7",
																"nodeType": "YulIdentifier",
																"src": "7297:7:7"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "7287:6:7",
																	"nodeType": "YulTypedName",
																	"src": "7287:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7373:224:7",
																"nodeType": "YulBlock",
																"src": "7373:224:7",
																"statements": [
																	{
																		"nativeSrc": "7387:34:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7387:34:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "7414:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "7414:6:7"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "7408:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "7408:5:7"
																			},
																			"nativeSrc": "7408:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7408:13:7"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "7391:13:7",
																				"nodeType": "YulTypedName",
																				"src": "7391:13:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "7434:70:7",
																		"nodeType": "YulAssignment",
																		"src": "7434:70:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "7485:13:7",
																					"nodeType": "YulIdentifier",
																					"src": "7485:13:7"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "7500:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7500:3:7"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_address_to_t_address",
																				"nativeSrc": "7441:43:7",
																				"nodeType": "YulIdentifier",
																				"src": "7441:43:7"
																			},
																			"nativeSrc": "7441:63:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7441:63:7"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "7434:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "7434:3:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7517:70:7",
																		"nodeType": "YulAssignment",
																		"src": "7517:70:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "7580:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "7580:6:7"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
																				"nativeSrc": "7527:52:7",
																				"nodeType": "YulIdentifier",
																				"src": "7527:52:7"
																			},
																			"nativeSrc": "7527:60:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7527:60:7"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "7517:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7517:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "7335:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7335:1:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7338:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7338:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "7332:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7332:2:7"
																},
																"nativeSrc": "7332:13:7",
																"nodeType": "YulFunctionCall",
																"src": "7332:13:7"
															},
															"nativeSrc": "7313:284:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "7346:18:7",
																"nodeType": "YulBlock",
																"src": "7346:18:7",
																"statements": [
																	{
																		"nativeSrc": "7348:14:7",
																		"nodeType": "YulAssignment",
																		"src": "7348:14:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "7357:1:7",
																					"nodeType": "YulIdentifier",
																					"src": "7357:1:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7360:1:7",
																					"nodeType": "YulLiteral",
																					"src": "7360:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7353:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "7353:3:7"
																			},
																			"nativeSrc": "7353:9:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7353:9:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "7348:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "7348:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "7317:14:7",
																"nodeType": "YulBlock",
																"src": "7317:14:7",
																"statements": [
																	{
																		"nativeSrc": "7319:10:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7319:10:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "7328:1:7",
																			"nodeType": "YulLiteral",
																			"src": "7328:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "7323:1:7",
																				"nodeType": "YulTypedName",
																				"src": "7323:1:7",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "7313:284:7"
														},
														{
															"nativeSrc": "7606:10:7",
															"nodeType": "YulAssignment",
															"src": "7606:10:7",
															"value": {
																"name": "pos",
																"nativeSrc": "7613:3:7",
																"nodeType": "YulIdentifier",
																"src": "7613:3:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7606:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7606:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nativeSrc": "6890:732:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6993:5:7",
														"nodeType": "YulTypedName",
														"src": "6993:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7000:3:7",
														"nodeType": "YulTypedName",
														"src": "7000:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7009:3:7",
														"nodeType": "YulTypedName",
														"src": "7009:3:7",
														"type": ""
													}
												],
												"src": "6890:732:7"
											},
											{
												"body": {
													"nativeSrc": "7776:225:7",
													"nodeType": "YulBlock",
													"src": "7776:225:7",
													"statements": [
														{
															"nativeSrc": "7786:26:7",
															"nodeType": "YulAssignment",
															"src": "7786:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7798:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7798:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7809:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7809:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7794:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7794:3:7"
																},
																"nativeSrc": "7794:18:7",
																"nodeType": "YulFunctionCall",
																"src": "7794:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7786:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7786:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7833:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7833:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7844:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7844:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7829:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7829:3:7"
																		},
																		"nativeSrc": "7829:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7829:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7852:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "7852:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7858:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7858:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7848:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7848:3:7"
																		},
																		"nativeSrc": "7848:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7848:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7822:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7822:6:7"
																},
																"nativeSrc": "7822:47:7",
																"nodeType": "YulFunctionCall",
																"src": "7822:47:7"
															},
															"nativeSrc": "7822:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "7822:47:7"
														},
														{
															"nativeSrc": "7878:116:7",
															"nodeType": "YulAssignment",
															"src": "7878:116:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7980:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7980:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "7989:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7989:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "7886:93:7",
																	"nodeType": "YulIdentifier",
																	"src": "7886:93:7"
																},
																"nativeSrc": "7886:108:7",
																"nodeType": "YulFunctionCall",
																"src": "7886:108:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7878:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7878:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "7628:373:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7748:9:7",
														"nodeType": "YulTypedName",
														"src": "7748:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7760:6:7",
														"nodeType": "YulTypedName",
														"src": "7760:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7771:4:7",
														"nodeType": "YulTypedName",
														"src": "7771:4:7",
														"type": ""
													}
												],
												"src": "7628:373:7"
											},
											{
												"body": {
													"nativeSrc": "8072:53:7",
													"nodeType": "YulBlock",
													"src": "8072:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8089:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8089:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8112:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "8112:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "8094:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "8094:17:7"
																		},
																		"nativeSrc": "8094:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8094:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8082:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8082:6:7"
																},
																"nativeSrc": "8082:37:7",
																"nodeType": "YulFunctionCall",
																"src": "8082:37:7"
															},
															"nativeSrc": "8082:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "8082:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "8007:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8060:5:7",
														"nodeType": "YulTypedName",
														"src": "8060:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8067:3:7",
														"nodeType": "YulTypedName",
														"src": "8067:3:7",
														"type": ""
													}
												],
												"src": "8007:118:7"
											},
											{
												"body": {
													"nativeSrc": "8229:124:7",
													"nodeType": "YulBlock",
													"src": "8229:124:7",
													"statements": [
														{
															"nativeSrc": "8239:26:7",
															"nodeType": "YulAssignment",
															"src": "8239:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8251:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8251:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8262:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8262:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8247:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8247:3:7"
																},
																"nativeSrc": "8247:18:7",
																"nodeType": "YulFunctionCall",
																"src": "8247:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8239:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8239:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8319:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8319:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8332:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8332:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8343:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8343:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8328:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8328:3:7"
																		},
																		"nativeSrc": "8328:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8328:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8275:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "8275:43:7"
																},
																"nativeSrc": "8275:71:7",
																"nodeType": "YulFunctionCall",
																"src": "8275:71:7"
															},
															"nativeSrc": "8275:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "8275:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "8131:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8201:9:7",
														"nodeType": "YulTypedName",
														"src": "8201:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8213:6:7",
														"nodeType": "YulTypedName",
														"src": "8213:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8224:4:7",
														"nodeType": "YulTypedName",
														"src": "8224:4:7",
														"type": ""
													}
												],
												"src": "8131:222:7"
											},
											{
												"body": {
													"nativeSrc": "8404:32:7",
													"nodeType": "YulBlock",
													"src": "8404:32:7",
													"statements": [
														{
															"nativeSrc": "8414:16:7",
															"nodeType": "YulAssignment",
															"src": "8414:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "8425:5:7",
																"nodeType": "YulIdentifier",
																"src": "8425:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8414:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "8414:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "8359:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8386:5:7",
														"nodeType": "YulTypedName",
														"src": "8386:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8396:7:7",
														"nodeType": "YulTypedName",
														"src": "8396:7:7",
														"type": ""
													}
												],
												"src": "8359:77:7"
											},
											{
												"body": {
													"nativeSrc": "8485:79:7",
													"nodeType": "YulBlock",
													"src": "8485:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "8542:16:7",
																"nodeType": "YulBlock",
																"src": "8542:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8551:1:7",
																					"nodeType": "YulLiteral",
																					"src": "8551:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8554:1:7",
																					"nodeType": "YulLiteral",
																					"src": "8554:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8544:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8544:6:7"
																			},
																			"nativeSrc": "8544:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8544:12:7"
																		},
																		"nativeSrc": "8544:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8544:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8508:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "8508:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8533:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "8533:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "8515:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "8515:17:7"
																				},
																				"nativeSrc": "8515:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8515:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "8505:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "8505:2:7"
																		},
																		"nativeSrc": "8505:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8505:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8498:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8498:6:7"
																},
																"nativeSrc": "8498:43:7",
																"nodeType": "YulFunctionCall",
																"src": "8498:43:7"
															},
															"nativeSrc": "8495:63:7",
															"nodeType": "YulIf",
															"src": "8495:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "8442:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8478:5:7",
														"nodeType": "YulTypedName",
														"src": "8478:5:7",
														"type": ""
													}
												],
												"src": "8442:122:7"
											},
											{
												"body": {
													"nativeSrc": "8622:87:7",
													"nodeType": "YulBlock",
													"src": "8622:87:7",
													"statements": [
														{
															"nativeSrc": "8632:29:7",
															"nodeType": "YulAssignment",
															"src": "8632:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8654:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8654:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8641:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "8641:12:7"
																},
																"nativeSrc": "8641:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8641:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8632:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "8632:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8697:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "8697:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "8670:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "8670:26:7"
																},
																"nativeSrc": "8670:33:7",
																"nodeType": "YulFunctionCall",
																"src": "8670:33:7"
															},
															"nativeSrc": "8670:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "8670:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "8570:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8600:6:7",
														"nodeType": "YulTypedName",
														"src": "8600:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8608:3:7",
														"nodeType": "YulTypedName",
														"src": "8608:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "8616:5:7",
														"nodeType": "YulTypedName",
														"src": "8616:5:7",
														"type": ""
													}
												],
												"src": "8570:139:7"
											},
											{
												"body": {
													"nativeSrc": "8781:263:7",
													"nodeType": "YulBlock",
													"src": "8781:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "8827:83:7",
																"nodeType": "YulBlock",
																"src": "8827:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8829:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "8829:77:7"
																			},
																			"nativeSrc": "8829:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8829:79:7"
																		},
																		"nativeSrc": "8829:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8829:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8802:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "8802:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8811:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8811:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8798:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8798:3:7"
																		},
																		"nativeSrc": "8798:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8798:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8823:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8823:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8794:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8794:3:7"
																},
																"nativeSrc": "8794:32:7",
																"nodeType": "YulFunctionCall",
																"src": "8794:32:7"
															},
															"nativeSrc": "8791:119:7",
															"nodeType": "YulIf",
															"src": "8791:119:7"
														},
														{
															"nativeSrc": "8920:117:7",
															"nodeType": "YulBlock",
															"src": "8920:117:7",
															"statements": [
																{
																	"nativeSrc": "8935:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8935:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8949:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8949:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8939:6:7",
																			"nodeType": "YulTypedName",
																			"src": "8939:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8964:63:7",
																	"nodeType": "YulAssignment",
																	"src": "8964:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8999:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "8999:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9010:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "9010:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8995:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8995:3:7"
																				},
																				"nativeSrc": "8995:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8995:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9019:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "9019:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "8974:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "8974:20:7"
																		},
																		"nativeSrc": "8974:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8974:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8964:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "8964:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "8715:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8751:9:7",
														"nodeType": "YulTypedName",
														"src": "8751:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8762:7:7",
														"nodeType": "YulTypedName",
														"src": "8762:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8774:6:7",
														"nodeType": "YulTypedName",
														"src": "8774:6:7",
														"type": ""
													}
												],
												"src": "8715:329:7"
											},
											{
												"body": {
													"nativeSrc": "9078:152:7",
													"nodeType": "YulBlock",
													"src": "9078:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9095:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9095:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9098:77:7",
																		"nodeType": "YulLiteral",
																		"src": "9098:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9088:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9088:6:7"
																},
																"nativeSrc": "9088:88:7",
																"nodeType": "YulFunctionCall",
																"src": "9088:88:7"
															},
															"nativeSrc": "9088:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "9088:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9192:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9192:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9195:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9195:4:7",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9185:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9185:6:7"
																},
																"nativeSrc": "9185:15:7",
																"nodeType": "YulFunctionCall",
																"src": "9185:15:7"
															},
															"nativeSrc": "9185:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "9185:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9216:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9216:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9219:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9219:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9209:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9209:6:7"
																},
																"nativeSrc": "9209:15:7",
																"nodeType": "YulFunctionCall",
																"src": "9209:15:7"
															},
															"nativeSrc": "9209:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "9209:15:7"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "9050:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "9050:180:7"
											},
											{
												"body": {
													"nativeSrc": "9332:73:7",
													"nodeType": "YulBlock",
													"src": "9332:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9349:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9349:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9354:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9354:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9342:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9342:6:7"
																},
																"nativeSrc": "9342:19:7",
																"nodeType": "YulFunctionCall",
																"src": "9342:19:7"
															},
															"nativeSrc": "9342:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "9342:19:7"
														},
														{
															"nativeSrc": "9370:29:7",
															"nodeType": "YulAssignment",
															"src": "9370:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9389:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9389:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9394:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9394:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9385:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9385:3:7"
																},
																"nativeSrc": "9385:14:7",
																"nodeType": "YulFunctionCall",
																"src": "9385:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "9370:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "9370:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "9236:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9304:3:7",
														"nodeType": "YulTypedName",
														"src": "9304:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9309:6:7",
														"nodeType": "YulTypedName",
														"src": "9309:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "9320:11:7",
														"nodeType": "YulTypedName",
														"src": "9320:11:7",
														"type": ""
													}
												],
												"src": "9236:169:7"
											},
											{
												"body": {
													"nativeSrc": "9517:63:7",
													"nodeType": "YulBlock",
													"src": "9517:63:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9539:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "9539:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9547:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9547:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9535:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9535:3:7"
																		},
																		"nativeSrc": "9535:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9535:14:7"
																	},
																	{
																		"hexValue": "47616d65206e6f742072656769737465726564",
																		"kind": "string",
																		"nativeSrc": "9551:21:7",
																		"nodeType": "YulLiteral",
																		"src": "9551:21:7",
																		"type": "",
																		"value": "Game not registered"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9528:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9528:6:7"
																},
																"nativeSrc": "9528:45:7",
																"nodeType": "YulFunctionCall",
																"src": "9528:45:7"
															},
															"nativeSrc": "9528:45:7",
															"nodeType": "YulExpressionStatement",
															"src": "9528:45:7"
														}
													]
												},
												"name": "store_literal_in_memory_1edb0667ab871f480cc99b846d0e89fbd59606d5093450b6acb4e5c6386744c5",
												"nativeSrc": "9411:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9509:6:7",
														"nodeType": "YulTypedName",
														"src": "9509:6:7",
														"type": ""
													}
												],
												"src": "9411:169:7"
											},
											{
												"body": {
													"nativeSrc": "9732:220:7",
													"nodeType": "YulBlock",
													"src": "9732:220:7",
													"statements": [
														{
															"nativeSrc": "9742:74:7",
															"nodeType": "YulAssignment",
															"src": "9742:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9808:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9808:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9813:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9813:2:7",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9749:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "9749:58:7"
																},
																"nativeSrc": "9749:67:7",
																"nodeType": "YulFunctionCall",
																"src": "9749:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9742:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9742:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9914:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9914:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1edb0667ab871f480cc99b846d0e89fbd59606d5093450b6acb4e5c6386744c5",
																	"nativeSrc": "9825:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "9825:88:7"
																},
																"nativeSrc": "9825:93:7",
																"nodeType": "YulFunctionCall",
																"src": "9825:93:7"
															},
															"nativeSrc": "9825:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "9825:93:7"
														},
														{
															"nativeSrc": "9927:19:7",
															"nodeType": "YulAssignment",
															"src": "9927:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9938:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9938:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9943:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9943:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9934:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9934:3:7"
																},
																"nativeSrc": "9934:12:7",
																"nodeType": "YulFunctionCall",
																"src": "9934:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9927:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9927:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1edb0667ab871f480cc99b846d0e89fbd59606d5093450b6acb4e5c6386744c5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9586:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9720:3:7",
														"nodeType": "YulTypedName",
														"src": "9720:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9728:3:7",
														"nodeType": "YulTypedName",
														"src": "9728:3:7",
														"type": ""
													}
												],
												"src": "9586:366:7"
											},
											{
												"body": {
													"nativeSrc": "10129:248:7",
													"nodeType": "YulBlock",
													"src": "10129:248:7",
													"statements": [
														{
															"nativeSrc": "10139:26:7",
															"nodeType": "YulAssignment",
															"src": "10139:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10151:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10151:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10162:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10162:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10147:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10147:3:7"
																},
																"nativeSrc": "10147:18:7",
																"nodeType": "YulFunctionCall",
																"src": "10147:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10139:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10139:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10186:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10186:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10197:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10197:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10182:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10182:3:7"
																		},
																		"nativeSrc": "10182:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10182:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10205:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "10205:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10211:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10211:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10201:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10201:3:7"
																		},
																		"nativeSrc": "10201:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10201:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10175:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10175:6:7"
																},
																"nativeSrc": "10175:47:7",
																"nodeType": "YulFunctionCall",
																"src": "10175:47:7"
															},
															"nativeSrc": "10175:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "10175:47:7"
														},
														{
															"nativeSrc": "10231:139:7",
															"nodeType": "YulAssignment",
															"src": "10231:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10365:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "10365:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1edb0667ab871f480cc99b846d0e89fbd59606d5093450b6acb4e5c6386744c5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10239:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "10239:124:7"
																},
																"nativeSrc": "10239:131:7",
																"nodeType": "YulFunctionCall",
																"src": "10239:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10231:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10231:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1edb0667ab871f480cc99b846d0e89fbd59606d5093450b6acb4e5c6386744c5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9958:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10109:9:7",
														"nodeType": "YulTypedName",
														"src": "10109:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10124:4:7",
														"nodeType": "YulTypedName",
														"src": "10124:4:7",
														"type": ""
													}
												],
												"src": "9958:419:7"
											},
											{
												"body": {
													"nativeSrc": "10489:73:7",
													"nodeType": "YulBlock",
													"src": "10489:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10511:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "10511:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10519:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10519:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10507:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10507:3:7"
																		},
																		"nativeSrc": "10507:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10507:14:7"
																	},
																	{
																		"hexValue": "4173736574206e6f74207265676973746572656420666f722067616d65",
																		"kind": "string",
																		"nativeSrc": "10523:31:7",
																		"nodeType": "YulLiteral",
																		"src": "10523:31:7",
																		"type": "",
																		"value": "Asset not registered for game"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10500:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10500:6:7"
																},
																"nativeSrc": "10500:55:7",
																"nodeType": "YulFunctionCall",
																"src": "10500:55:7"
															},
															"nativeSrc": "10500:55:7",
															"nodeType": "YulExpressionStatement",
															"src": "10500:55:7"
														}
													]
												},
												"name": "store_literal_in_memory_277f09ddce34479b4d8dbf7c94ce9867419d4661334c514823c83992376d37f6",
												"nativeSrc": "10383:179:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10481:6:7",
														"nodeType": "YulTypedName",
														"src": "10481:6:7",
														"type": ""
													}
												],
												"src": "10383:179:7"
											},
											{
												"body": {
													"nativeSrc": "10714:220:7",
													"nodeType": "YulBlock",
													"src": "10714:220:7",
													"statements": [
														{
															"nativeSrc": "10724:74:7",
															"nodeType": "YulAssignment",
															"src": "10724:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10790:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10790:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10795:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10795:2:7",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10731:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "10731:58:7"
																},
																"nativeSrc": "10731:67:7",
																"nodeType": "YulFunctionCall",
																"src": "10731:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10724:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10724:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10896:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10896:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_277f09ddce34479b4d8dbf7c94ce9867419d4661334c514823c83992376d37f6",
																	"nativeSrc": "10807:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "10807:88:7"
																},
																"nativeSrc": "10807:93:7",
																"nodeType": "YulFunctionCall",
																"src": "10807:93:7"
															},
															"nativeSrc": "10807:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "10807:93:7"
														},
														{
															"nativeSrc": "10909:19:7",
															"nodeType": "YulAssignment",
															"src": "10909:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10920:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10920:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10925:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10925:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10916:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10916:3:7"
																},
																"nativeSrc": "10916:12:7",
																"nodeType": "YulFunctionCall",
																"src": "10916:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10909:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10909:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_277f09ddce34479b4d8dbf7c94ce9867419d4661334c514823c83992376d37f6_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10568:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10702:3:7",
														"nodeType": "YulTypedName",
														"src": "10702:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10710:3:7",
														"nodeType": "YulTypedName",
														"src": "10710:3:7",
														"type": ""
													}
												],
												"src": "10568:366:7"
											},
											{
												"body": {
													"nativeSrc": "11111:248:7",
													"nodeType": "YulBlock",
													"src": "11111:248:7",
													"statements": [
														{
															"nativeSrc": "11121:26:7",
															"nodeType": "YulAssignment",
															"src": "11121:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11133:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "11133:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11144:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11144:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11129:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11129:3:7"
																},
																"nativeSrc": "11129:18:7",
																"nodeType": "YulFunctionCall",
																"src": "11129:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11121:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11121:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11168:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11168:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11179:1:7",
																				"nodeType": "YulLiteral",
																				"src": "11179:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11164:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11164:3:7"
																		},
																		"nativeSrc": "11164:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11164:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11187:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "11187:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11193:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11193:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11183:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11183:3:7"
																		},
																		"nativeSrc": "11183:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11183:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11157:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11157:6:7"
																},
																"nativeSrc": "11157:47:7",
																"nodeType": "YulFunctionCall",
																"src": "11157:47:7"
															},
															"nativeSrc": "11157:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "11157:47:7"
														},
														{
															"nativeSrc": "11213:139:7",
															"nodeType": "YulAssignment",
															"src": "11213:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11347:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "11347:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_277f09ddce34479b4d8dbf7c94ce9867419d4661334c514823c83992376d37f6_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11221:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "11221:124:7"
																},
																"nativeSrc": "11221:131:7",
																"nodeType": "YulFunctionCall",
																"src": "11221:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11213:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11213:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_277f09ddce34479b4d8dbf7c94ce9867419d4661334c514823c83992376d37f6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10940:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11091:9:7",
														"nodeType": "YulTypedName",
														"src": "11091:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11106:4:7",
														"nodeType": "YulTypedName",
														"src": "11106:4:7",
														"type": ""
													}
												],
												"src": "10940:419:7"
											},
											{
												"body": {
													"nativeSrc": "11393:152:7",
													"nodeType": "YulBlock",
													"src": "11393:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11410:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11410:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11413:77:7",
																		"nodeType": "YulLiteral",
																		"src": "11413:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11403:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11403:6:7"
																},
																"nativeSrc": "11403:88:7",
																"nodeType": "YulFunctionCall",
																"src": "11403:88:7"
															},
															"nativeSrc": "11403:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "11403:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11507:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11507:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11510:4:7",
																		"nodeType": "YulLiteral",
																		"src": "11510:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11500:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11500:6:7"
																},
																"nativeSrc": "11500:15:7",
																"nodeType": "YulFunctionCall",
																"src": "11500:15:7"
															},
															"nativeSrc": "11500:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "11500:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11531:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11531:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11534:4:7",
																		"nodeType": "YulLiteral",
																		"src": "11534:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11524:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11524:6:7"
																},
																"nativeSrc": "11524:15:7",
																"nodeType": "YulFunctionCall",
																"src": "11524:15:7"
															},
															"nativeSrc": "11524:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "11524:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "11365:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "11365:180:7"
											},
											{
												"body": {
													"nativeSrc": "11594:190:7",
													"nodeType": "YulBlock",
													"src": "11594:190:7",
													"statements": [
														{
															"nativeSrc": "11604:33:7",
															"nodeType": "YulAssignment",
															"src": "11604:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11631:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "11631:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11613:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "11613:17:7"
																},
																"nativeSrc": "11613:24:7",
																"nodeType": "YulFunctionCall",
																"src": "11613:24:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "11604:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "11604:5:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11727:22:7",
																"nodeType": "YulBlock",
																"src": "11727:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11729:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "11729:16:7"
																			},
																			"nativeSrc": "11729:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "11729:18:7"
																		},
																		"nativeSrc": "11729:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "11729:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11652:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "11652:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11659:66:7",
																		"nodeType": "YulLiteral",
																		"src": "11659:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "11649:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "11649:2:7"
																},
																"nativeSrc": "11649:77:7",
																"nodeType": "YulFunctionCall",
																"src": "11649:77:7"
															},
															"nativeSrc": "11646:103:7",
															"nodeType": "YulIf",
															"src": "11646:103:7"
														},
														{
															"nativeSrc": "11758:20:7",
															"nodeType": "YulAssignment",
															"src": "11758:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11769:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "11769:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11776:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11776:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11765:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11765:3:7"
																},
																"nativeSrc": "11765:13:7",
																"nodeType": "YulFunctionCall",
																"src": "11765:13:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "11758:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11758:3:7"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "11551:233:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11580:5:7",
														"nodeType": "YulTypedName",
														"src": "11580:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "11590:3:7",
														"nodeType": "YulTypedName",
														"src": "11590:3:7",
														"type": ""
													}
												],
												"src": "11551:233:7"
											},
											{
												"body": {
													"nativeSrc": "11818:152:7",
													"nodeType": "YulBlock",
													"src": "11818:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11835:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11835:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11838:77:7",
																		"nodeType": "YulLiteral",
																		"src": "11838:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11828:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11828:6:7"
																},
																"nativeSrc": "11828:88:7",
																"nodeType": "YulFunctionCall",
																"src": "11828:88:7"
															},
															"nativeSrc": "11828:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "11828:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11932:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11932:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11935:4:7",
																		"nodeType": "YulLiteral",
																		"src": "11935:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11925:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11925:6:7"
																},
																"nativeSrc": "11925:15:7",
																"nodeType": "YulFunctionCall",
																"src": "11925:15:7"
															},
															"nativeSrc": "11925:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "11925:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11956:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11956:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11959:4:7",
																		"nodeType": "YulLiteral",
																		"src": "11959:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11949:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11949:6:7"
																},
																"nativeSrc": "11949:15:7",
																"nodeType": "YulFunctionCall",
																"src": "11949:15:7"
															},
															"nativeSrc": "11949:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "11949:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "11790:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "11790:180:7"
											},
											{
												"body": {
													"nativeSrc": "12082:66:7",
													"nodeType": "YulBlock",
													"src": "12082:66:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12104:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "12104:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12112:1:7",
																				"nodeType": "YulLiteral",
																				"src": "12112:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12100:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12100:3:7"
																		},
																		"nativeSrc": "12100:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12100:14:7"
																	},
																	{
																		"hexValue": "496e76616c696420617373657420636f6e7472616374",
																		"kind": "string",
																		"nativeSrc": "12116:24:7",
																		"nodeType": "YulLiteral",
																		"src": "12116:24:7",
																		"type": "",
																		"value": "Invalid asset contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12093:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12093:6:7"
																},
																"nativeSrc": "12093:48:7",
																"nodeType": "YulFunctionCall",
																"src": "12093:48:7"
															},
															"nativeSrc": "12093:48:7",
															"nodeType": "YulExpressionStatement",
															"src": "12093:48:7"
														}
													]
												},
												"name": "store_literal_in_memory_052cf812ba7508c49cdec2b16509980e963100ee665849219692e78e8ddd4650",
												"nativeSrc": "11976:172:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12074:6:7",
														"nodeType": "YulTypedName",
														"src": "12074:6:7",
														"type": ""
													}
												],
												"src": "11976:172:7"
											},
											{
												"body": {
													"nativeSrc": "12300:220:7",
													"nodeType": "YulBlock",
													"src": "12300:220:7",
													"statements": [
														{
															"nativeSrc": "12310:74:7",
															"nodeType": "YulAssignment",
															"src": "12310:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12376:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12376:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12381:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12381:2:7",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12317:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "12317:58:7"
																},
																"nativeSrc": "12317:67:7",
																"nodeType": "YulFunctionCall",
																"src": "12317:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12310:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12310:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12482:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12482:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_052cf812ba7508c49cdec2b16509980e963100ee665849219692e78e8ddd4650",
																	"nativeSrc": "12393:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "12393:88:7"
																},
																"nativeSrc": "12393:93:7",
																"nodeType": "YulFunctionCall",
																"src": "12393:93:7"
															},
															"nativeSrc": "12393:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "12393:93:7"
														},
														{
															"nativeSrc": "12495:19:7",
															"nodeType": "YulAssignment",
															"src": "12495:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12506:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12506:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12511:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12511:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12502:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12502:3:7"
																},
																"nativeSrc": "12502:12:7",
																"nodeType": "YulFunctionCall",
																"src": "12502:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12495:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12495:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_052cf812ba7508c49cdec2b16509980e963100ee665849219692e78e8ddd4650_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12154:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12288:3:7",
														"nodeType": "YulTypedName",
														"src": "12288:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12296:3:7",
														"nodeType": "YulTypedName",
														"src": "12296:3:7",
														"type": ""
													}
												],
												"src": "12154:366:7"
											},
											{
												"body": {
													"nativeSrc": "12697:248:7",
													"nodeType": "YulBlock",
													"src": "12697:248:7",
													"statements": [
														{
															"nativeSrc": "12707:26:7",
															"nodeType": "YulAssignment",
															"src": "12707:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12719:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "12719:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12730:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12730:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12715:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12715:3:7"
																},
																"nativeSrc": "12715:18:7",
																"nodeType": "YulFunctionCall",
																"src": "12715:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12707:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12707:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12754:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12754:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12765:1:7",
																				"nodeType": "YulLiteral",
																				"src": "12765:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12750:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12750:3:7"
																		},
																		"nativeSrc": "12750:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12750:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12773:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "12773:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12779:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12779:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12769:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12769:3:7"
																		},
																		"nativeSrc": "12769:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12769:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12743:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12743:6:7"
																},
																"nativeSrc": "12743:47:7",
																"nodeType": "YulFunctionCall",
																"src": "12743:47:7"
															},
															"nativeSrc": "12743:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "12743:47:7"
														},
														{
															"nativeSrc": "12799:139:7",
															"nodeType": "YulAssignment",
															"src": "12799:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12933:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "12933:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_052cf812ba7508c49cdec2b16509980e963100ee665849219692e78e8ddd4650_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12807:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "12807:124:7"
																},
																"nativeSrc": "12807:131:7",
																"nodeType": "YulFunctionCall",
																"src": "12807:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12799:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12799:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_052cf812ba7508c49cdec2b16509980e963100ee665849219692e78e8ddd4650__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12526:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12677:9:7",
														"nodeType": "YulTypedName",
														"src": "12677:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12692:4:7",
														"nodeType": "YulTypedName",
														"src": "12692:4:7",
														"type": ""
													}
												],
												"src": "12526:419:7"
											},
											{
												"body": {
													"nativeSrc": "13057:67:7",
													"nodeType": "YulBlock",
													"src": "13057:67:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13079:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "13079:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13087:1:7",
																				"nodeType": "YulLiteral",
																				"src": "13087:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13075:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13075:3:7"
																		},
																		"nativeSrc": "13075:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13075:14:7"
																	},
																	{
																		"hexValue": "4e6f206174747269627574657320737065636966696564",
																		"kind": "string",
																		"nativeSrc": "13091:25:7",
																		"nodeType": "YulLiteral",
																		"src": "13091:25:7",
																		"type": "",
																		"value": "No attributes specified"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13068:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13068:6:7"
																},
																"nativeSrc": "13068:49:7",
																"nodeType": "YulFunctionCall",
																"src": "13068:49:7"
															},
															"nativeSrc": "13068:49:7",
															"nodeType": "YulExpressionStatement",
															"src": "13068:49:7"
														}
													]
												},
												"name": "store_literal_in_memory_e44ec8f4706645e78b250e633c2648c89f9bf6bc2df7092dd012b1ffcc15e7e8",
												"nativeSrc": "12951:173:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13049:6:7",
														"nodeType": "YulTypedName",
														"src": "13049:6:7",
														"type": ""
													}
												],
												"src": "12951:173:7"
											},
											{
												"body": {
													"nativeSrc": "13276:220:7",
													"nodeType": "YulBlock",
													"src": "13276:220:7",
													"statements": [
														{
															"nativeSrc": "13286:74:7",
															"nodeType": "YulAssignment",
															"src": "13286:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13352:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13352:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13357:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13357:2:7",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13293:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "13293:58:7"
																},
																"nativeSrc": "13293:67:7",
																"nodeType": "YulFunctionCall",
																"src": "13293:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13286:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13286:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13458:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13458:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e44ec8f4706645e78b250e633c2648c89f9bf6bc2df7092dd012b1ffcc15e7e8",
																	"nativeSrc": "13369:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "13369:88:7"
																},
																"nativeSrc": "13369:93:7",
																"nodeType": "YulFunctionCall",
																"src": "13369:93:7"
															},
															"nativeSrc": "13369:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "13369:93:7"
														},
														{
															"nativeSrc": "13471:19:7",
															"nodeType": "YulAssignment",
															"src": "13471:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13482:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13482:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13487:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13487:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13478:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13478:3:7"
																},
																"nativeSrc": "13478:12:7",
																"nodeType": "YulFunctionCall",
																"src": "13478:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13471:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13471:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e44ec8f4706645e78b250e633c2648c89f9bf6bc2df7092dd012b1ffcc15e7e8_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13130:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13264:3:7",
														"nodeType": "YulTypedName",
														"src": "13264:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13272:3:7",
														"nodeType": "YulTypedName",
														"src": "13272:3:7",
														"type": ""
													}
												],
												"src": "13130:366:7"
											},
											{
												"body": {
													"nativeSrc": "13673:248:7",
													"nodeType": "YulBlock",
													"src": "13673:248:7",
													"statements": [
														{
															"nativeSrc": "13683:26:7",
															"nodeType": "YulAssignment",
															"src": "13683:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13695:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "13695:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13706:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13706:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13691:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13691:3:7"
																},
																"nativeSrc": "13691:18:7",
																"nodeType": "YulFunctionCall",
																"src": "13691:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13683:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13683:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13730:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13730:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13741:1:7",
																				"nodeType": "YulLiteral",
																				"src": "13741:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13726:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13726:3:7"
																		},
																		"nativeSrc": "13726:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13726:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13749:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "13749:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13755:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13755:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13745:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13745:3:7"
																		},
																		"nativeSrc": "13745:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13745:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13719:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13719:6:7"
																},
																"nativeSrc": "13719:47:7",
																"nodeType": "YulFunctionCall",
																"src": "13719:47:7"
															},
															"nativeSrc": "13719:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "13719:47:7"
														},
														{
															"nativeSrc": "13775:139:7",
															"nodeType": "YulAssignment",
															"src": "13775:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13909:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "13909:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e44ec8f4706645e78b250e633c2648c89f9bf6bc2df7092dd012b1ffcc15e7e8_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13783:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "13783:124:7"
																},
																"nativeSrc": "13783:131:7",
																"nodeType": "YulFunctionCall",
																"src": "13783:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13775:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13775:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e44ec8f4706645e78b250e633c2648c89f9bf6bc2df7092dd012b1ffcc15e7e8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13502:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13653:9:7",
														"nodeType": "YulTypedName",
														"src": "13653:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13668:4:7",
														"nodeType": "YulTypedName",
														"src": "13668:4:7",
														"type": ""
													}
												],
												"src": "13502:419:7"
											},
											{
												"body": {
													"nativeSrc": "14016:28:7",
													"nodeType": "YulBlock",
													"src": "14016:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14033:1:7",
																		"nodeType": "YulLiteral",
																		"src": "14033:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14036:1:7",
																		"nodeType": "YulLiteral",
																		"src": "14036:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14026:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14026:6:7"
																},
																"nativeSrc": "14026:12:7",
																"nodeType": "YulFunctionCall",
																"src": "14026:12:7"
															},
															"nativeSrc": "14026:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "14026:12:7"
														}
													]
												},
												"name": "revert_error_d0468cefdb41083d2ff66f1e66140f10c9da08cd905521a779422e76a84d11ec",
												"nativeSrc": "13927:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "13927:117:7"
											},
											{
												"body": {
													"nativeSrc": "14101:48:7",
													"nodeType": "YulBlock",
													"src": "14101:48:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "14125:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14125:3:7"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "14130:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14130:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14135:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "14135:6:7"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "14112:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "14112:12:7"
																},
																"nativeSrc": "14112:30:7",
																"nodeType": "YulFunctionCall",
																"src": "14112:30:7"
															},
															"nativeSrc": "14112:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "14112:30:7"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nativeSrc": "14050:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "14083:3:7",
														"nodeType": "YulTypedName",
														"src": "14083:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "14088:3:7",
														"nodeType": "YulTypedName",
														"src": "14088:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "14093:6:7",
														"nodeType": "YulTypedName",
														"src": "14093:6:7",
														"type": ""
													}
												],
												"src": "14050:99:7"
											},
											{
												"body": {
													"nativeSrc": "14317:405:7",
													"nodeType": "YulBlock",
													"src": "14317:405:7",
													"statements": [
														{
															"nativeSrc": "14327:93:7",
															"nodeType": "YulAssignment",
															"src": "14327:93:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14408:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14408:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14413:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "14413:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "14334:73:7",
																	"nodeType": "YulIdentifier",
																	"src": "14334:73:7"
																},
																"nativeSrc": "14334:86:7",
																"nodeType": "YulFunctionCall",
																"src": "14334:86:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14327:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14327:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14512:83:7",
																"nodeType": "YulBlock",
																"src": "14512:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_d0468cefdb41083d2ff66f1e66140f10c9da08cd905521a779422e76a84d11ec",
																				"nativeSrc": "14514:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "14514:77:7"
																			},
																			"nativeSrc": "14514:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "14514:79:7"
																		},
																		"nativeSrc": "14514:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "14514:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "14436:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "14436:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14444:66:7",
																		"nodeType": "YulLiteral",
																		"src": "14444:66:7",
																		"type": "",
																		"value": "0x07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14433:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "14433:2:7"
																},
																"nativeSrc": "14433:78:7",
																"nodeType": "YulFunctionCall",
																"src": "14433:78:7"
															},
															"nativeSrc": "14430:165:7",
															"nodeType": "YulIf",
															"src": "14430:165:7"
														},
														{
															"nativeSrc": "14604:27:7",
															"nodeType": "YulAssignment",
															"src": "14604:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "14618:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "14618:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14626:4:7",
																		"nodeType": "YulLiteral",
																		"src": "14626:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "14614:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14614:3:7"
																},
																"nativeSrc": "14614:17:7",
																"nodeType": "YulFunctionCall",
																"src": "14614:17:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "14604:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14604:6:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "14665:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "14665:5:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "14672:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14672:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14677:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "14677:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nativeSrc": "14641:23:7",
																	"nodeType": "YulIdentifier",
																	"src": "14641:23:7"
																},
																"nativeSrc": "14641:43:7",
																"nodeType": "YulFunctionCall",
																"src": "14641:43:7"
															},
															"nativeSrc": "14641:43:7",
															"nodeType": "YulExpressionStatement",
															"src": "14641:43:7"
														},
														{
															"nativeSrc": "14693:23:7",
															"nodeType": "YulAssignment",
															"src": "14693:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14704:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14704:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14709:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "14709:6:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14700:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14700:3:7"
																},
																"nativeSrc": "14700:16:7",
																"nodeType": "YulFunctionCall",
																"src": "14700:16:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14693:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14693:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_bytes32_$dyn_calldata_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack",
												"nativeSrc": "14185:537:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "14290:5:7",
														"nodeType": "YulTypedName",
														"src": "14290:5:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "14297:6:7",
														"nodeType": "YulTypedName",
														"src": "14297:6:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "14305:3:7",
														"nodeType": "YulTypedName",
														"src": "14305:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14313:3:7",
														"nodeType": "YulTypedName",
														"src": "14313:3:7",
														"type": ""
													}
												],
												"src": "14185:537:7"
											},
											{
												"body": {
													"nativeSrc": "14886:235:7",
													"nodeType": "YulBlock",
													"src": "14886:235:7",
													"statements": [
														{
															"nativeSrc": "14896:26:7",
															"nodeType": "YulAssignment",
															"src": "14896:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14908:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "14908:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14919:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14919:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14904:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14904:3:7"
																},
																"nativeSrc": "14904:18:7",
																"nodeType": "YulFunctionCall",
																"src": "14904:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14896:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "14896:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14943:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14943:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14954:1:7",
																				"nodeType": "YulLiteral",
																				"src": "14954:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14939:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14939:3:7"
																		},
																		"nativeSrc": "14939:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14939:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14962:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "14962:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14968:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14968:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14958:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14958:3:7"
																		},
																		"nativeSrc": "14958:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14958:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14932:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14932:6:7"
																},
																"nativeSrc": "14932:47:7",
																"nodeType": "YulFunctionCall",
																"src": "14932:47:7"
															},
															"nativeSrc": "14932:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "14932:47:7"
														},
														{
															"nativeSrc": "14988:126:7",
															"nodeType": "YulAssignment",
															"src": "14988:126:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15092:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "15092:6:7"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "15100:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "15100:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "15109:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "15109:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_bytes32_$dyn_calldata_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "14996:95:7",
																	"nodeType": "YulIdentifier",
																	"src": "14996:95:7"
																},
																"nativeSrc": "14996:118:7",
																"nodeType": "YulFunctionCall",
																"src": "14996:118:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14988:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "14988:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_bytes32_$dyn_calldata_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "14728:393:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14850:9:7",
														"nodeType": "YulTypedName",
														"src": "14850:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14862:6:7",
														"nodeType": "YulTypedName",
														"src": "14862:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14870:6:7",
														"nodeType": "YulTypedName",
														"src": "14870:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14881:4:7",
														"nodeType": "YulTypedName",
														"src": "14881:4:7",
														"type": ""
													}
												],
												"src": "14728:393:7"
											},
											{
												"body": {
													"nativeSrc": "15233:64:7",
													"nodeType": "YulBlock",
													"src": "15233:64:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15255:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "15255:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15263:1:7",
																				"nodeType": "YulLiteral",
																				"src": "15263:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15251:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15251:3:7"
																		},
																		"nativeSrc": "15251:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15251:14:7"
																	},
																	{
																		"hexValue": "496e76616c69642067616d652061646472657373",
																		"kind": "string",
																		"nativeSrc": "15267:22:7",
																		"nodeType": "YulLiteral",
																		"src": "15267:22:7",
																		"type": "",
																		"value": "Invalid game address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15244:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15244:6:7"
																},
																"nativeSrc": "15244:46:7",
																"nodeType": "YulFunctionCall",
																"src": "15244:46:7"
															},
															"nativeSrc": "15244:46:7",
															"nodeType": "YulExpressionStatement",
															"src": "15244:46:7"
														}
													]
												},
												"name": "store_literal_in_memory_7fa703979043a4477af2668208e33e99c2be710d1b8d49bb5cc41b4b3bbac4a8",
												"nativeSrc": "15127:170:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15225:6:7",
														"nodeType": "YulTypedName",
														"src": "15225:6:7",
														"type": ""
													}
												],
												"src": "15127:170:7"
											},
											{
												"body": {
													"nativeSrc": "15449:220:7",
													"nodeType": "YulBlock",
													"src": "15449:220:7",
													"statements": [
														{
															"nativeSrc": "15459:74:7",
															"nodeType": "YulAssignment",
															"src": "15459:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15525:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "15525:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15530:2:7",
																		"nodeType": "YulLiteral",
																		"src": "15530:2:7",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15466:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "15466:58:7"
																},
																"nativeSrc": "15466:67:7",
																"nodeType": "YulFunctionCall",
																"src": "15466:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15459:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15459:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15631:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "15631:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7fa703979043a4477af2668208e33e99c2be710d1b8d49bb5cc41b4b3bbac4a8",
																	"nativeSrc": "15542:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "15542:88:7"
																},
																"nativeSrc": "15542:93:7",
																"nodeType": "YulFunctionCall",
																"src": "15542:93:7"
															},
															"nativeSrc": "15542:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "15542:93:7"
														},
														{
															"nativeSrc": "15644:19:7",
															"nodeType": "YulAssignment",
															"src": "15644:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15655:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "15655:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15660:2:7",
																		"nodeType": "YulLiteral",
																		"src": "15660:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15651:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15651:3:7"
																},
																"nativeSrc": "15651:12:7",
																"nodeType": "YulFunctionCall",
																"src": "15651:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15644:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15644:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7fa703979043a4477af2668208e33e99c2be710d1b8d49bb5cc41b4b3bbac4a8_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15303:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15437:3:7",
														"nodeType": "YulTypedName",
														"src": "15437:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15445:3:7",
														"nodeType": "YulTypedName",
														"src": "15445:3:7",
														"type": ""
													}
												],
												"src": "15303:366:7"
											},
											{
												"body": {
													"nativeSrc": "15846:248:7",
													"nodeType": "YulBlock",
													"src": "15846:248:7",
													"statements": [
														{
															"nativeSrc": "15856:26:7",
															"nodeType": "YulAssignment",
															"src": "15856:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15868:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "15868:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15879:2:7",
																		"nodeType": "YulLiteral",
																		"src": "15879:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15864:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15864:3:7"
																},
																"nativeSrc": "15864:18:7",
																"nodeType": "YulFunctionCall",
																"src": "15864:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15856:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "15856:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15903:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "15903:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15914:1:7",
																				"nodeType": "YulLiteral",
																				"src": "15914:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15899:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15899:3:7"
																		},
																		"nativeSrc": "15899:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15899:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15922:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "15922:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15928:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "15928:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15918:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15918:3:7"
																		},
																		"nativeSrc": "15918:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15918:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15892:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15892:6:7"
																},
																"nativeSrc": "15892:47:7",
																"nodeType": "YulFunctionCall",
																"src": "15892:47:7"
															},
															"nativeSrc": "15892:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "15892:47:7"
														},
														{
															"nativeSrc": "15948:139:7",
															"nodeType": "YulAssignment",
															"src": "15948:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16082:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "16082:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7fa703979043a4477af2668208e33e99c2be710d1b8d49bb5cc41b4b3bbac4a8_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15956:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "15956:124:7"
																},
																"nativeSrc": "15956:131:7",
																"nodeType": "YulFunctionCall",
																"src": "15956:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15948:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "15948:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7fa703979043a4477af2668208e33e99c2be710d1b8d49bb5cc41b4b3bbac4a8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15675:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15826:9:7",
														"nodeType": "YulTypedName",
														"src": "15826:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15841:4:7",
														"nodeType": "YulTypedName",
														"src": "15841:4:7",
														"type": ""
													}
												],
												"src": "15675:419:7"
											},
											{
												"body": {
													"nativeSrc": "16206:67:7",
													"nodeType": "YulBlock",
													"src": "16206:67:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16228:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "16228:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16236:1:7",
																				"nodeType": "YulLiteral",
																				"src": "16236:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16224:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16224:3:7"
																		},
																		"nativeSrc": "16224:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16224:14:7"
																	},
																	{
																		"hexValue": "47616d6520616c72656164792072656769737465726564",
																		"kind": "string",
																		"nativeSrc": "16240:25:7",
																		"nodeType": "YulLiteral",
																		"src": "16240:25:7",
																		"type": "",
																		"value": "Game already registered"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16217:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "16217:6:7"
																},
																"nativeSrc": "16217:49:7",
																"nodeType": "YulFunctionCall",
																"src": "16217:49:7"
															},
															"nativeSrc": "16217:49:7",
															"nodeType": "YulExpressionStatement",
															"src": "16217:49:7"
														}
													]
												},
												"name": "store_literal_in_memory_523a1be2df150250aa7866f2d72f2430b839f9917e1233923df7f810d36fadc8",
												"nativeSrc": "16100:173:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16198:6:7",
														"nodeType": "YulTypedName",
														"src": "16198:6:7",
														"type": ""
													}
												],
												"src": "16100:173:7"
											},
											{
												"body": {
													"nativeSrc": "16425:220:7",
													"nodeType": "YulBlock",
													"src": "16425:220:7",
													"statements": [
														{
															"nativeSrc": "16435:74:7",
															"nodeType": "YulAssignment",
															"src": "16435:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16501:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "16501:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16506:2:7",
																		"nodeType": "YulLiteral",
																		"src": "16506:2:7",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16442:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "16442:58:7"
																},
																"nativeSrc": "16442:67:7",
																"nodeType": "YulFunctionCall",
																"src": "16442:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16435:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16435:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16607:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "16607:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_523a1be2df150250aa7866f2d72f2430b839f9917e1233923df7f810d36fadc8",
																	"nativeSrc": "16518:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "16518:88:7"
																},
																"nativeSrc": "16518:93:7",
																"nodeType": "YulFunctionCall",
																"src": "16518:93:7"
															},
															"nativeSrc": "16518:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "16518:93:7"
														},
														{
															"nativeSrc": "16620:19:7",
															"nodeType": "YulAssignment",
															"src": "16620:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16631:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "16631:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16636:2:7",
																		"nodeType": "YulLiteral",
																		"src": "16636:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16627:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16627:3:7"
																},
																"nativeSrc": "16627:12:7",
																"nodeType": "YulFunctionCall",
																"src": "16627:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16620:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16620:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_523a1be2df150250aa7866f2d72f2430b839f9917e1233923df7f810d36fadc8_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16279:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16413:3:7",
														"nodeType": "YulTypedName",
														"src": "16413:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16421:3:7",
														"nodeType": "YulTypedName",
														"src": "16421:3:7",
														"type": ""
													}
												],
												"src": "16279:366:7"
											},
											{
												"body": {
													"nativeSrc": "16822:248:7",
													"nodeType": "YulBlock",
													"src": "16822:248:7",
													"statements": [
														{
															"nativeSrc": "16832:26:7",
															"nodeType": "YulAssignment",
															"src": "16832:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16844:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "16844:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16855:2:7",
																		"nodeType": "YulLiteral",
																		"src": "16855:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16840:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16840:3:7"
																},
																"nativeSrc": "16840:18:7",
																"nodeType": "YulFunctionCall",
																"src": "16840:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16832:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "16832:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16879:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "16879:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16890:1:7",
																				"nodeType": "YulLiteral",
																				"src": "16890:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16875:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16875:3:7"
																		},
																		"nativeSrc": "16875:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16875:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16898:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "16898:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16904:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "16904:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16894:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16894:3:7"
																		},
																		"nativeSrc": "16894:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16894:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16868:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "16868:6:7"
																},
																"nativeSrc": "16868:47:7",
																"nodeType": "YulFunctionCall",
																"src": "16868:47:7"
															},
															"nativeSrc": "16868:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "16868:47:7"
														},
														{
															"nativeSrc": "16924:139:7",
															"nodeType": "YulAssignment",
															"src": "16924:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17058:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "17058:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_523a1be2df150250aa7866f2d72f2430b839f9917e1233923df7f810d36fadc8_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16932:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "16932:124:7"
																},
																"nativeSrc": "16932:131:7",
																"nodeType": "YulFunctionCall",
																"src": "16932:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16924:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "16924:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_523a1be2df150250aa7866f2d72f2430b839f9917e1233923df7f810d36fadc8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16651:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16802:9:7",
														"nodeType": "YulTypedName",
														"src": "16802:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16817:4:7",
														"nodeType": "YulTypedName",
														"src": "16817:4:7",
														"type": ""
													}
												],
												"src": "16651:419:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes32[]\n    function abi_decode_t_array$_t_bytes32_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_bytes32_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_array$_t_bytes32_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_bytes32_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encodeUpdatedPos_t_bytes32_to_t_bytes32(value0, pos) -> updatedPos {\n        abi_encode_t_bytes32_to_t_bytes32(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // bytes32[] -> bytes32[]\n    function abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_bytes32_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_bytes32_to_t_bytes32(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_1edb0667ab871f480cc99b846d0e89fbd59606d5093450b6acb4e5c6386744c5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Game not registered\")\n\n    }\n\n    function abi_encode_t_stringliteral_1edb0667ab871f480cc99b846d0e89fbd59606d5093450b6acb4e5c6386744c5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_1edb0667ab871f480cc99b846d0e89fbd59606d5093450b6acb4e5c6386744c5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1edb0667ab871f480cc99b846d0e89fbd59606d5093450b6acb4e5c6386744c5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1edb0667ab871f480cc99b846d0e89fbd59606d5093450b6acb4e5c6386744c5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_277f09ddce34479b4d8dbf7c94ce9867419d4661334c514823c83992376d37f6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Asset not registered for game\")\n\n    }\n\n    function abi_encode_t_stringliteral_277f09ddce34479b4d8dbf7c94ce9867419d4661334c514823c83992376d37f6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_277f09ddce34479b4d8dbf7c94ce9867419d4661334c514823c83992376d37f6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_277f09ddce34479b4d8dbf7c94ce9867419d4661334c514823c83992376d37f6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_277f09ddce34479b4d8dbf7c94ce9867419d4661334c514823c83992376d37f6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_052cf812ba7508c49cdec2b16509980e963100ee665849219692e78e8ddd4650(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid asset contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_052cf812ba7508c49cdec2b16509980e963100ee665849219692e78e8ddd4650_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_052cf812ba7508c49cdec2b16509980e963100ee665849219692e78e8ddd4650(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_052cf812ba7508c49cdec2b16509980e963100ee665849219692e78e8ddd4650__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_052cf812ba7508c49cdec2b16509980e963100ee665849219692e78e8ddd4650_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e44ec8f4706645e78b250e633c2648c89f9bf6bc2df7092dd012b1ffcc15e7e8(memPtr) {\n\n        mstore(add(memPtr, 0), \"No attributes specified\")\n\n    }\n\n    function abi_encode_t_stringliteral_e44ec8f4706645e78b250e633c2648c89f9bf6bc2df7092dd012b1ffcc15e7e8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_e44ec8f4706645e78b250e633c2648c89f9bf6bc2df7092dd012b1ffcc15e7e8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e44ec8f4706645e78b250e633c2648c89f9bf6bc2df7092dd012b1ffcc15e7e8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e44ec8f4706645e78b250e633c2648c89f9bf6bc2df7092dd012b1ffcc15e7e8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function revert_error_d0468cefdb41083d2ff66f1e66140f10c9da08cd905521a779422e76a84d11ec() {\n        revert(0, 0)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n\n    }\n\n    // bytes32[] -> bytes32[]\n    function abi_encode_t_array$_t_bytes32_$dyn_calldata_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack(pos, length)\n\n        if gt(length, 0x07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { revert_error_d0468cefdb41083d2ff66f1e66140f10c9da08cd905521a779422e76a84d11ec() }\n        length := mul(length, 0x20)\n\n        copy_calldata_to_memory(start, pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_t_array$_t_bytes32_$dyn_calldata_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_bytes32_$dyn_calldata_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack(value0, value1,  tail)\n\n    }\n\n    function store_literal_in_memory_7fa703979043a4477af2668208e33e99c2be710d1b8d49bb5cc41b4b3bbac4a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid game address\")\n\n    }\n\n    function abi_encode_t_stringliteral_7fa703979043a4477af2668208e33e99c2be710d1b8d49bb5cc41b4b3bbac4a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_7fa703979043a4477af2668208e33e99c2be710d1b8d49bb5cc41b4b3bbac4a8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7fa703979043a4477af2668208e33e99c2be710d1b8d49bb5cc41b4b3bbac4a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7fa703979043a4477af2668208e33e99c2be710d1b8d49bb5cc41b4b3bbac4a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_523a1be2df150250aa7866f2d72f2430b839f9917e1233923df7f810d36fadc8(memPtr) {\n\n        mstore(add(memPtr, 0), \"Game already registered\")\n\n    }\n\n    function abi_encode_t_stringliteral_523a1be2df150250aa7866f2d72f2430b839f9917e1233923df7f810d36fadc8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_523a1be2df150250aa7866f2d72f2430b839f9917e1233923df7f810d36fadc8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_523a1be2df150250aa7866f2d72f2430b839f9917e1233923df7f810d36fadc8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_523a1be2df150250aa7866f2d72f2430b839f9917e1233923df7f810d36fadc8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100a7575f3560e01c8063715018a61161006f578063715018a6146101735780638da5cb5b1461017d5780639b36057c1461019b5780639e3c5a72146101b7578063ee658e45146101e7578063f2fde38b14610217576100a7565b806336e9b39a146100ab57806353c02924146100db57806357f623d01461010b578063644621421461013b5780636f6145f014610157575b5f80fd5b6100c560048036038101906100c09190611535565b610233565b6040516100d291906115c0565b60405180910390f35b6100f560048036038101906100f091906115d9565b61043c565b60405161010291906116d7565b60405180910390f35b610125600480360381019061012091906116f7565b610665565b60405161013291906117d9565b60405180910390f35b61015560048036038101906101509190611535565b6109c0565b005b610171600480360381019061016c91906115d9565b610c21565b005b61017b610e7a565b005b610185610e8d565b6040516101929190611808565b60405180910390f35b6101b560048036038101906101b091906116f7565b610eb4565b005b6101d160048036038101906101cc9190611854565b61118c565b6040516101de9190611808565b60405180910390f35b61020160048036038101906101fc91906116f7565b6111c7565b60405161020e91906115c0565b60405180910390f35b610231600480360381019061022c91906116f7565b61121b565b005b5f60015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f9054906101000a900460ff161580610313575060015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f9054906101000a900460ff16155b15610320575f9050610434565b5f60015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2060010190505f5b8484905081101561042d575f805b838054905081101561040e578381815481106103d0576103cf61187f565b5b905f5260205f2001548787858181106103ec576103eb61187f565b5b9050602002013503610401576001915061040e565b80806001019150506103b1565b508061041f575f9350505050610434565b5080806001019150506103a3565b5060019150505b949350505050565b606060015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f9054906101000a900460ff166104c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c090611906565b60405180910390fd5b60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f9054906101000a900460ff16610592576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105899061196e565b60405180910390fd5b60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2060010180548060200260200160405190810160405280929190818152602001828054801561065857602002820191905f5260205f20905b815481526020019060010190808311610644575b5050505050905092915050565b606060015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f9054906101000a900460ff166106f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e990611906565b60405180910390fd5b5f805b6002805490508110156107e85760015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001015f600283815481106107575761075661187f565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f9054906101000a900460ff16156107db5781806107d7906119b9565b9250505b80806001019150506106f5565b505f8167ffffffffffffffff81111561080457610803611a00565b5b6040519080825280602002602001820160405280156108325781602001602082028036833780820191505090505b5090505f805b6002805490508110156109b45760015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001015f6002838154811061089a5761089961187f565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f9054906101000a900460ff16156109a757600281815481106109235761092261187f565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683838151811061095e5761095d61187f565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505081806109a3906119b9565b9250505b8080600101915050610838565b50819350505050919050565b6109c861129f565b60015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f9054906101000a900460ff16610a53576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4a90611906565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ac1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab890611a77565b60405180910390fd5b5f8282905011610b06576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610afd90611adf565b60405180910390fd5b5f60015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090506001815f015f6101000a81548160ff0219169083151502179055508282826001019190610bb29291906113ee565b508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f5a1925924b0857ceb006f7400134cecccedb6ca75ecef791a1a109cf8890edae8585604051610c12929190611b65565b60405180910390a35050505050565b610c2961129f565b60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f9054906101000a900460ff16610cb4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cab90611906565b60405180910390fd5b60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001015f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f9054906101000a900460ff16610d7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d749061196e565b60405180910390fd5b60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001015f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8082015f6101000a81549060ff0219169055600182015f610e1a9190611439565b50508073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fb0b93a7d8a8ec4a98f21206af2d3af128fc5ba7b8df65991b7477766ed42562260405160405180910390a35050565b610e8261129f565b610e8b5f611326565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610ebc61129f565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610f2a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f2190611bd1565b60405180910390fd5b60015f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f9054906101000a900460ff1615610fb6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fad90611c39565b60405180910390fd5b6001805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f6101000a81548160ff0219169083151502179055504260015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20600201819055503360015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206003015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600281908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f076eada2b266f926d3ecb187dece20428d68db62016c04bea8ccb92679f788de60405160405180910390a350565b6002818154811061119b575f80fd5b905f5260205f20015f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f9054906101000a900460ff169050919050565b61122361129f565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611293575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161128a9190611808565b60405180910390fd5b61129c81611326565b50565b6112a76113e7565b73ffffffffffffffffffffffffffffffffffffffff166112c5610e8d565b73ffffffffffffffffffffffffffffffffffffffff1614611324576112e86113e7565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161131b9190611808565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b828054828255905f5260205f20908101928215611428579160200282015b8281111561142757823582559160200191906001019061140c565b5b5090506114359190611457565b5090565b5080545f8255905f5260205f20908101906114549190611457565b50565b5b8082111561146e575f815f905550600101611458565b5090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6114a38261147a565b9050919050565b6114b381611499565b81146114bd575f80fd5b50565b5f813590506114ce816114aa565b92915050565b5f80fd5b5f80fd5b5f80fd5b5f8083601f8401126114f5576114f46114d4565b5b8235905067ffffffffffffffff811115611512576115116114d8565b5b60208301915083602082028301111561152e5761152d6114dc565b5b9250929050565b5f805f806060858703121561154d5761154c611472565b5b5f61155a878288016114c0565b945050602061156b878288016114c0565b935050604085013567ffffffffffffffff81111561158c5761158b611476565b5b611598878288016114e0565b925092505092959194509250565b5f8115159050919050565b6115ba816115a6565b82525050565b5f6020820190506115d35f8301846115b1565b92915050565b5f80604083850312156115ef576115ee611472565b5b5f6115fc858286016114c0565b925050602061160d858286016114c0565b9150509250929050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f819050919050565b61165281611640565b82525050565b5f6116638383611649565b60208301905092915050565b5f602082019050919050565b5f61168582611617565b61168f8185611621565b935061169a83611631565b805f5b838110156116ca5781516116b18882611658565b97506116bc8361166f565b92505060018101905061169d565b5085935050505092915050565b5f6020820190508181035f8301526116ef818461167b565b905092915050565b5f6020828403121561170c5761170b611472565b5b5f611719848285016114c0565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b61175481611499565b82525050565b5f611765838361174b565b60208301905092915050565b5f602082019050919050565b5f61178782611722565b611791818561172c565b935061179c8361173c565b805f5b838110156117cc5781516117b3888261175a565b97506117be83611771565b92505060018101905061179f565b5085935050505092915050565b5f6020820190508181035f8301526117f1818461177d565b905092915050565b61180281611499565b82525050565b5f60208201905061181b5f8301846117f9565b92915050565b5f819050919050565b61183381611821565b811461183d575f80fd5b50565b5f8135905061184e8161182a565b92915050565b5f6020828403121561186957611868611472565b5b5f61187684828501611840565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f82825260208201905092915050565b7f47616d65206e6f742072656769737465726564000000000000000000000000005f82015250565b5f6118f06013836118ac565b91506118fb826118bc565b602082019050919050565b5f6020820190508181035f83015261191d816118e4565b9050919050565b7f4173736574206e6f74207265676973746572656420666f722067616d650000005f82015250565b5f611958601d836118ac565b915061196382611924565b602082019050919050565b5f6020820190508181035f8301526119858161194c565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6119c382611821565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036119f5576119f461198c565b5b600182019050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f496e76616c696420617373657420636f6e7472616374000000000000000000005f82015250565b5f611a616016836118ac565b9150611a6c82611a2d565b602082019050919050565b5f6020820190508181035f830152611a8e81611a55565b9050919050565b7f4e6f2061747472696275746573207370656369666965640000000000000000005f82015250565b5f611ac96017836118ac565b9150611ad482611a95565b602082019050919050565b5f6020820190508181035f830152611af681611abd565b9050919050565b5f80fd5b82818337505050565b5f611b158385611621565b93507f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831115611b4857611b47611afd565b5b602083029250611b59838584611b01565b82840190509392505050565b5f6020820190508181035f830152611b7e818486611b0a565b90509392505050565b7f496e76616c69642067616d6520616464726573730000000000000000000000005f82015250565b5f611bbb6014836118ac565b9150611bc682611b87565b602082019050919050565b5f6020820190508181035f830152611be881611baf565b9050919050565b7f47616d6520616c726561647920726567697374657265640000000000000000005f82015250565b5f611c236017836118ac565b9150611c2e82611bef565b602082019050919050565b5f6020820190508181035f830152611c5081611c17565b905091905056fea2646970667358221220bb6e151a27a9dd7f9f86f1321e922261e029f2dfd2ce38b0f14b0e79927fbbb864736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0x9B36057C EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0x9E3C5A72 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0xEE658E45 EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x217 JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0x36E9B39A EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x53C02924 EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0x57F623D0 EQ PUSH2 0x10B JUMPI DUP1 PUSH4 0x64462142 EQ PUSH2 0x13B JUMPI DUP1 PUSH4 0x6F6145F0 EQ PUSH2 0x157 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x1535 JUMP JUMPDEST PUSH2 0x233 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD2 SWAP2 SWAP1 PUSH2 0x15C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0x15D9 JUMP JUMPDEST PUSH2 0x43C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x102 SWAP2 SWAP1 PUSH2 0x16D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x125 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x120 SWAP2 SWAP1 PUSH2 0x16F7 JUMP JUMPDEST PUSH2 0x665 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x132 SWAP2 SWAP1 PUSH2 0x17D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x155 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x150 SWAP2 SWAP1 PUSH2 0x1535 JUMP JUMPDEST PUSH2 0x9C0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x171 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x15D9 JUMP JUMPDEST PUSH2 0xC21 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17B PUSH2 0xE7A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x185 PUSH2 0xE8D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x192 SWAP2 SWAP1 PUSH2 0x1808 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B0 SWAP2 SWAP1 PUSH2 0x16F7 JUMP JUMPDEST PUSH2 0xEB4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x1854 JUMP JUMPDEST PUSH2 0x118C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x1808 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x201 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x16F7 JUMP JUMPDEST PUSH2 0x11C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20E SWAP2 SWAP1 PUSH2 0x15C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x231 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22C SWAP2 SWAP1 PUSH2 0x16F7 JUMP JUMPDEST PUSH2 0x121B JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 PUSH2 0x313 JUMPI POP PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x320 JUMPI PUSH0 SWAP1 POP PUSH2 0x434 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SWAP1 POP PUSH0 JUMPDEST DUP5 DUP5 SWAP1 POP DUP2 LT ISZERO PUSH2 0x42D JUMPI PUSH0 DUP1 JUMPDEST DUP4 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x40E JUMPI DUP4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x3D0 JUMPI PUSH2 0x3CF PUSH2 0x187F JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD DUP8 DUP8 DUP6 DUP2 DUP2 LT PUSH2 0x3EC JUMPI PUSH2 0x3EB PUSH2 0x187F JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD SUB PUSH2 0x401 JUMPI PUSH1 0x1 SWAP2 POP PUSH2 0x40E JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x3B1 JUMP JUMPDEST POP DUP1 PUSH2 0x41F JUMPI PUSH0 SWAP4 POP POP POP POP PUSH2 0x434 JUMP JUMPDEST POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x3A3 JUMP JUMPDEST POP PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x4C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C0 SWAP1 PUSH2 0x1906 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x592 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x589 SWAP1 PUSH2 0x196E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x658 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x644 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x6F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E9 SWAP1 PUSH2 0x1906 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x7E8 JUMPI PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 PUSH1 0x2 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x757 JUMPI PUSH2 0x756 PUSH2 0x187F JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x7DB JUMPI DUP2 DUP1 PUSH2 0x7D7 SWAP1 PUSH2 0x19B9 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x6F5 JUMP JUMPDEST POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x804 JUMPI PUSH2 0x803 PUSH2 0x1A00 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x832 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP1 JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x9B4 JUMPI PUSH1 0x1 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 PUSH1 0x2 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x89A JUMPI PUSH2 0x899 PUSH2 0x187F JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x9A7 JUMPI PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x923 JUMPI PUSH2 0x922 PUSH2 0x187F JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x95E JUMPI PUSH2 0x95D PUSH2 0x187F JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 DUP1 PUSH2 0x9A3 SWAP1 PUSH2 0x19B9 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x838 JUMP JUMPDEST POP DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9C8 PUSH2 0x129F JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xA53 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA4A SWAP1 PUSH2 0x1906 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAC1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAB8 SWAP1 PUSH2 0x1A77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 DUP3 SWAP1 POP GT PUSH2 0xB06 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAFD SWAP1 PUSH2 0x1ADF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH1 0x1 DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 DUP3 DUP3 PUSH1 0x1 ADD SWAP2 SWAP1 PUSH2 0xBB2 SWAP3 SWAP2 SWAP1 PUSH2 0x13EE JUMP JUMPDEST POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5A1925924B0857CEB006F7400134CECCCEDB6CA75ECEF791A1A109CF8890EDAE DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0xC12 SWAP3 SWAP2 SWAP1 PUSH2 0x1B65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xC29 PUSH2 0x129F JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xCB4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCAB SWAP1 PUSH2 0x1906 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xD7D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD74 SWAP1 PUSH2 0x196E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP1 DUP3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH0 PUSH2 0xE1A SWAP2 SWAP1 PUSH2 0x1439 JUMP JUMPDEST POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB0B93A7D8A8EC4A98F21206AF2D3AF128FC5BA7B8DF65991B7477766ED425622 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xE82 PUSH2 0x129F JUMP JUMPDEST PUSH2 0xE8B PUSH0 PUSH2 0x1326 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xEBC PUSH2 0x129F JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF2A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF21 SWAP1 PUSH2 0x1BD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xFB6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFAD SWAP1 PUSH2 0x1C39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x76EADA2B266F926D3ECB187DECE20428D68DB62016C04BEA8CCB92679F788DE PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x119B JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1223 PUSH2 0x129F JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1293 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x128A SWAP2 SWAP1 PUSH2 0x1808 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x129C DUP2 PUSH2 0x1326 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x12A7 PUSH2 0x13E7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x12C5 PUSH2 0xE8D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1324 JUMPI PUSH2 0x12E8 PUSH2 0x13E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x131B SWAP2 SWAP1 PUSH2 0x1808 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x1428 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1427 JUMPI DUP3 CALLDATALOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x140C JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x1435 SWAP2 SWAP1 PUSH2 0x1457 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH0 DUP3 SSTORE SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1454 SWAP2 SWAP1 PUSH2 0x1457 JUMP JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x146E JUMPI PUSH0 DUP2 PUSH0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x1458 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x14A3 DUP3 PUSH2 0x147A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14B3 DUP2 PUSH2 0x1499 JUMP JUMPDEST DUP2 EQ PUSH2 0x14BD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14CE DUP2 PUSH2 0x14AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x14F5 JUMPI PUSH2 0x14F4 PUSH2 0x14D4 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1512 JUMPI PUSH2 0x1511 PUSH2 0x14D8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x152E JUMPI PUSH2 0x152D PUSH2 0x14DC JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x154D JUMPI PUSH2 0x154C PUSH2 0x1472 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x155A DUP8 DUP3 DUP9 ADD PUSH2 0x14C0 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x156B DUP8 DUP3 DUP9 ADD PUSH2 0x14C0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x158C JUMPI PUSH2 0x158B PUSH2 0x1476 JUMP JUMPDEST JUMPDEST PUSH2 0x1598 DUP8 DUP3 DUP9 ADD PUSH2 0x14E0 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15BA DUP2 PUSH2 0x15A6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15D3 PUSH0 DUP4 ADD DUP5 PUSH2 0x15B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15EF JUMPI PUSH2 0x15EE PUSH2 0x1472 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15FC DUP6 DUP3 DUP7 ADD PUSH2 0x14C0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x160D DUP6 DUP3 DUP7 ADD PUSH2 0x14C0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1652 DUP2 PUSH2 0x1640 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1663 DUP4 DUP4 PUSH2 0x1649 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1685 DUP3 PUSH2 0x1617 JUMP JUMPDEST PUSH2 0x168F DUP2 DUP6 PUSH2 0x1621 JUMP JUMPDEST SWAP4 POP PUSH2 0x169A DUP4 PUSH2 0x1631 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16CA JUMPI DUP2 MLOAD PUSH2 0x16B1 DUP9 DUP3 PUSH2 0x1658 JUMP JUMPDEST SWAP8 POP PUSH2 0x16BC DUP4 PUSH2 0x166F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x169D JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x16EF DUP2 DUP5 PUSH2 0x167B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x170C JUMPI PUSH2 0x170B PUSH2 0x1472 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1719 DUP5 DUP3 DUP6 ADD PUSH2 0x14C0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1754 DUP2 PUSH2 0x1499 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1765 DUP4 DUP4 PUSH2 0x174B JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1787 DUP3 PUSH2 0x1722 JUMP JUMPDEST PUSH2 0x1791 DUP2 DUP6 PUSH2 0x172C JUMP JUMPDEST SWAP4 POP PUSH2 0x179C DUP4 PUSH2 0x173C JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x17CC JUMPI DUP2 MLOAD PUSH2 0x17B3 DUP9 DUP3 PUSH2 0x175A JUMP JUMPDEST SWAP8 POP PUSH2 0x17BE DUP4 PUSH2 0x1771 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x179F JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17F1 DUP2 DUP5 PUSH2 0x177D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1802 DUP2 PUSH2 0x1499 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x181B PUSH0 DUP4 ADD DUP5 PUSH2 0x17F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1833 DUP2 PUSH2 0x1821 JUMP JUMPDEST DUP2 EQ PUSH2 0x183D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x184E DUP2 PUSH2 0x182A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1869 JUMPI PUSH2 0x1868 PUSH2 0x1472 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1876 DUP5 DUP3 DUP6 ADD PUSH2 0x1840 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x47616D65206E6F74207265676973746572656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x18F0 PUSH1 0x13 DUP4 PUSH2 0x18AC JUMP JUMPDEST SWAP2 POP PUSH2 0x18FB DUP3 PUSH2 0x18BC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x191D DUP2 PUSH2 0x18E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4173736574206E6F74207265676973746572656420666F722067616D65000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1958 PUSH1 0x1D DUP4 PUSH2 0x18AC JUMP JUMPDEST SWAP2 POP PUSH2 0x1963 DUP3 PUSH2 0x1924 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1985 DUP2 PUSH2 0x194C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x19C3 DUP3 PUSH2 0x1821 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x19F5 JUMPI PUSH2 0x19F4 PUSH2 0x198C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x496E76616C696420617373657420636F6E747261637400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A61 PUSH1 0x16 DUP4 PUSH2 0x18AC JUMP JUMPDEST SWAP2 POP PUSH2 0x1A6C DUP3 PUSH2 0x1A2D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A8E DUP2 PUSH2 0x1A55 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F206174747269627574657320737065636966696564000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1AC9 PUSH1 0x17 DUP4 PUSH2 0x18AC JUMP JUMPDEST SWAP2 POP PUSH2 0x1AD4 DUP3 PUSH2 0x1A95 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AF6 DUP2 PUSH2 0x1ABD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B15 DUP4 DUP6 PUSH2 0x1621 JUMP JUMPDEST SWAP4 POP PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x1B48 JUMPI PUSH2 0x1B47 PUSH2 0x1AFD JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 MUL SWAP3 POP PUSH2 0x1B59 DUP4 DUP6 DUP5 PUSH2 0x1B01 JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B7E DUP2 DUP5 DUP7 PUSH2 0x1B0A JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x496E76616C69642067616D652061646472657373000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1BBB PUSH1 0x14 DUP4 PUSH2 0x18AC JUMP JUMPDEST SWAP2 POP PUSH2 0x1BC6 DUP3 PUSH2 0x1B87 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BE8 DUP2 PUSH2 0x1BAF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x47616D6520616C72656164792072656769737465726564000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C23 PUSH1 0x17 DUP4 PUSH2 0x18AC JUMP JUMPDEST SWAP2 POP PUSH2 0x1C2E DUP3 PUSH2 0x1BEF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C50 DUP2 PUSH2 0x1C17 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB PUSH15 0x151A27A9DD7F9F86F1321E922261E0 0x29 CALLCODE 0xDF 0xD2 0xCE CODESIZE 0xB0 CALL 0x4B 0xE PUSH26 0x927FBBB864736F6C634300081A00330000000000000000000000 ",
							"sourceMap": "111:6033:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4286:791;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3550:396;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5253:889;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1881:612;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2676:409;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1174:439:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;580:32;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3200:117;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4286:791:5;4431:4;4452:5;:11;4458:4;4452:11;;;;;;;;;;;;;;;:24;;;;;;;;;;;;4451:25;:86;;;;4481:5;:11;4487:4;4481:11;;;;;;;;;;;;;;;:28;;:43;4510:13;4481:43;;;;;;;;;;;;;;;:56;;;;;;;;;;;;4480:57;4451:86;4447:129;;;4560:5;4553:12;;;;4447:129;4586:30;4619:5;:11;4625:4;4619:11;;;;;;;;;;;;;;;:28;;:43;4648:13;4619:43;;;;;;;;;;;;;;;:61;;4586:94;;4695:6;4690:360;4711:10;;:17;;4707:1;:21;4690:360;;;4749:18;4794:6;4789:205;4810:12;:19;;;;4806:1;:23;4789:205;;;4875:12;4888:1;4875:15;;;;;;;;:::i;:::-;;;;;;;;;;4858:10;;4869:1;4858:13;;;;;;;:::i;:::-;;;;;;;;:32;4854:126;;4930:4;4914:20;;4956:5;;4854:126;4831:3;;;;;;;4789:205;;;;5012:13;5007:32;;5034:5;5027:12;;;;;;;5007:32;4735:315;4730:3;;;;;;;4690:360;;;;5066:4;5059:11;;;4286:791;;;;;;;:::o;3550:396::-;3660:16;3696:5;:11;3702:4;3696:11;;;;;;;;;;;;;;;:24;;;;;;;;;;;;3688:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;3762:5;:11;3768:4;3762:11;;;;;;;;;;;;;;;:28;;:43;3791:13;3762:43;;;;;;;;;;;;;;;:56;;;;;;;;;;;;3754:98;;;;;;;;;;;;:::i;:::-;;;;;;;;;3878:5;:11;3884:4;3878:11;;;;;;;;;;;;;;;:28;;:43;3907:13;3878:43;;;;;;;;;;;;;;;:61;;3871:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3550:396;;;;:::o;5253:889::-;5321:16;5357:5;:11;5363:4;5357:11;;;;;;;;;;;;;;;:24;;;;;;;;;;;;5349:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;5501:13;5533:6;5528:181;5549:15;:22;;;;5545:1;:26;5528:181;;;5596:5;:11;5602:4;5596:11;;;;;;;;;;;;;;;:28;;:48;5625:15;5641:1;5625:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5596:48;;;;;;;;;;;;;;;:61;;;;;;;;;;;;5592:107;;;5677:7;;;;;:::i;:::-;;;;5592:107;5573:3;;;;;;;5528:181;;;;5764:31;5812:5;5798:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5764:54;;5828:13;5860:6;5855:241;5876:15;:22;;;;5872:1;:26;5855:241;;;5923:5;:11;5929:4;5923:11;;;;;;;;;;;;;;;:28;;:48;5952:15;5968:1;5952:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5923:48;;;;;;;;;;;;;;;:61;;;;;;;;;;;;5919:167;;;6028:15;6044:1;6028:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6004:14;6019:5;6004:21;;;;;;;;:::i;:::-;;;;;;;:42;;;;;;;;;;;6064:7;;;;;:::i;:::-;;;;5919:167;5900:3;;;;;;;5855:241;;;;6121:14;6114:21;;;;;5253:889;;;:::o;1881:612::-;1531:13:0;:11;:13::i;:::-;2046:5:5::1;:11;2052:4;2046:11;;;;;;;;;;;;;;;:24;;;;;;;;;;;;2038:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2137:1;2112:27;;:13;:27;;::::0;2104:62:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2204:1;2184:10;;:17;;:21;2176:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:34;2281:5;:11;2287:4;2281:11;;;;;;;;;;;;;;;:28;;:43;2310:13;2281:43;;;;;;;;;;;;;;;2244:80;;2360:4;2334:10;:23;;;:30;;;;;;;;;;;;;;;;;;2405:10;;2374;:28;;:41;;;;;;;:::i;:::-;;2460:13;2431:55;;2454:4;2431:55;;;2475:10;;2431:55;;;;;;;:::i;:::-;;;;;;;;2028:465;1881:612:::0;;;;:::o;2676:409::-;1531:13:0;:11;:13::i;:::-;2803:5:5::1;:11;2809:4;2803:11;;;;;;;;;;;;;;;:24;;;;;;;;;;;;2795:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2869:5;:11;2875:4;2869:11;;;;;;;;;;;;;;;:28;;:43;2898:13;2869:43;;;;;;;;;;;;;;;:56;;;;;;;;;;;;2861:98;;;;;;;;;;;;:::i;:::-;;;;;;;;;2977:5;:11;2983:4;2977:11;;;;;;;;;;;;;;;:28;;:43;3006:13;2977:43;;;;;;;;;;;;;;;;2970:50:::0;::::1;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;3064:13;3035:43;;3058:4;3035:43;;;;;;;;;;;;2676:409:::0;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1174:439:5:-;1531:13:0;:11;:13::i;:::-;1263:1:5::1;1247:18;;:4;:18;;::::0;1239:51:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1309:5;:11;1315:4;1309:11;;;;;;;;;;;;;;;:24;;;;;;;;;;;;1308:25;1300:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;1407:4;1380:5:::0;:11:::1;1386:4;1380:11;;;;;;;;;;;;;;;:24;;;:31;;;;;;;;;;;;;;;;;;1452:15;1421:5;:11;1427:4;1421:11;;;;;;;;;;;;;;;:28;;:46;;;;1504:10;1477:5;:11;1483:4;1477:11;;;;;;;;;;;;;;;:24;;;:37;;;;;;;;;;;;;;;;;;1533:15;1554:4;1533:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1595:10;1574:32;;1589:4;1574:32;;;;;;;;;;;;1174:439:::0;:::o;580:32::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3200:117::-;3263:4;3286:5;:11;3292:4;3286:11;;;;;;;;;;;;;;;:24;;;;;;;;;;;;3279:31;;3200:117;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:2:-;709:7;735:10;728:17;;656:96;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;88:117:7:-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:117::-;950:1;947;940:12;964:117;1073:1;1070;1063:12;1087:117;1196:1;1193;1186:12;1227:568;1300:8;1310:6;1360:3;1353:4;1345:6;1341:17;1337:27;1327:122;;1368:79;;:::i;:::-;1327:122;1481:6;1468:20;1458:30;;1511:18;1503:6;1500:30;1497:117;;;1533:79;;:::i;:::-;1497:117;1647:4;1639:6;1635:17;1623:29;;1701:3;1693:4;1685:6;1681:17;1671:8;1667:32;1664:41;1661:128;;;1708:79;;:::i;:::-;1661:128;1227:568;;;;;:::o;1801:849::-;1905:6;1913;1921;1929;1978:2;1966:9;1957:7;1953:23;1949:32;1946:119;;;1984:79;;:::i;:::-;1946:119;2104:1;2129:53;2174:7;2165:6;2154:9;2150:22;2129:53;:::i;:::-;2119:63;;2075:117;2231:2;2257:53;2302:7;2293:6;2282:9;2278:22;2257:53;:::i;:::-;2247:63;;2202:118;2387:2;2376:9;2372:18;2359:32;2418:18;2410:6;2407:30;2404:117;;;2440:79;;:::i;:::-;2404:117;2553:80;2625:7;2616:6;2605:9;2601:22;2553:80;:::i;:::-;2535:98;;;;2330:313;1801:849;;;;;;;:::o;2656:90::-;2690:7;2733:5;2726:13;2719:21;2708:32;;2656:90;;;:::o;2752:109::-;2833:21;2848:5;2833:21;:::i;:::-;2828:3;2821:34;2752:109;;:::o;2867:210::-;2954:4;2992:2;2981:9;2977:18;2969:26;;3005:65;3067:1;3056:9;3052:17;3043:6;3005:65;:::i;:::-;2867:210;;;;:::o;3083:474::-;3151:6;3159;3208:2;3196:9;3187:7;3183:23;3179:32;3176:119;;;3214:79;;:::i;:::-;3176:119;3334:1;3359:53;3404:7;3395:6;3384:9;3380:22;3359:53;:::i;:::-;3349:63;;3305:117;3461:2;3487:53;3532:7;3523:6;3512:9;3508:22;3487:53;:::i;:::-;3477:63;;3432:118;3083:474;;;;;:::o;3563:114::-;3630:6;3664:5;3658:12;3648:22;;3563:114;;;:::o;3683:184::-;3782:11;3816:6;3811:3;3804:19;3856:4;3851:3;3847:14;3832:29;;3683:184;;;;:::o;3873:132::-;3940:4;3963:3;3955:11;;3993:4;3988:3;3984:14;3976:22;;3873:132;;;:::o;4011:77::-;4048:7;4077:5;4066:16;;4011:77;;;:::o;4094:108::-;4171:24;4189:5;4171:24;:::i;:::-;4166:3;4159:37;4094:108;;:::o;4208:179::-;4277:10;4298:46;4340:3;4332:6;4298:46;:::i;:::-;4376:4;4371:3;4367:14;4353:28;;4208:179;;;;:::o;4393:113::-;4463:4;4495;4490:3;4486:14;4478:22;;4393:113;;;:::o;4542:732::-;4661:3;4690:54;4738:5;4690:54;:::i;:::-;4760:86;4839:6;4834:3;4760:86;:::i;:::-;4753:93;;4870:56;4920:5;4870:56;:::i;:::-;4949:7;4980:1;4965:284;4990:6;4987:1;4984:13;4965:284;;;5066:6;5060:13;5093:63;5152:3;5137:13;5093:63;:::i;:::-;5086:70;;5179:60;5232:6;5179:60;:::i;:::-;5169:70;;5025:224;5012:1;5009;5005:9;5000:14;;4965:284;;;4969:14;5265:3;5258:10;;4666:608;;;4542:732;;;;:::o;5280:373::-;5423:4;5461:2;5450:9;5446:18;5438:26;;5510:9;5504:4;5500:20;5496:1;5485:9;5481:17;5474:47;5538:108;5641:4;5632:6;5538:108;:::i;:::-;5530:116;;5280:373;;;;:::o;5659:329::-;5718:6;5767:2;5755:9;5746:7;5742:23;5738:32;5735:119;;;5773:79;;:::i;:::-;5735:119;5893:1;5918:53;5963:7;5954:6;5943:9;5939:22;5918:53;:::i;:::-;5908:63;;5864:117;5659:329;;;;:::o;5994:114::-;6061:6;6095:5;6089:12;6079:22;;5994:114;;;:::o;6114:184::-;6213:11;6247:6;6242:3;6235:19;6287:4;6282:3;6278:14;6263:29;;6114:184;;;;:::o;6304:132::-;6371:4;6394:3;6386:11;;6424:4;6419:3;6415:14;6407:22;;6304:132;;;:::o;6442:108::-;6519:24;6537:5;6519:24;:::i;:::-;6514:3;6507:37;6442:108;;:::o;6556:179::-;6625:10;6646:46;6688:3;6680:6;6646:46;:::i;:::-;6724:4;6719:3;6715:14;6701:28;;6556:179;;;;:::o;6741:113::-;6811:4;6843;6838:3;6834:14;6826:22;;6741:113;;;:::o;6890:732::-;7009:3;7038:54;7086:5;7038:54;:::i;:::-;7108:86;7187:6;7182:3;7108:86;:::i;:::-;7101:93;;7218:56;7268:5;7218:56;:::i;:::-;7297:7;7328:1;7313:284;7338:6;7335:1;7332:13;7313:284;;;7414:6;7408:13;7441:63;7500:3;7485:13;7441:63;:::i;:::-;7434:70;;7527:60;7580:6;7527:60;:::i;:::-;7517:70;;7373:224;7360:1;7357;7353:9;7348:14;;7313:284;;;7317:14;7613:3;7606:10;;7014:608;;;6890:732;;;;:::o;7628:373::-;7771:4;7809:2;7798:9;7794:18;7786:26;;7858:9;7852:4;7848:20;7844:1;7833:9;7829:17;7822:47;7886:108;7989:4;7980:6;7886:108;:::i;:::-;7878:116;;7628:373;;;;:::o;8007:118::-;8094:24;8112:5;8094:24;:::i;:::-;8089:3;8082:37;8007:118;;:::o;8131:222::-;8224:4;8262:2;8251:9;8247:18;8239:26;;8275:71;8343:1;8332:9;8328:17;8319:6;8275:71;:::i;:::-;8131:222;;;;:::o;8359:77::-;8396:7;8425:5;8414:16;;8359:77;;;:::o;8442:122::-;8515:24;8533:5;8515:24;:::i;:::-;8508:5;8505:35;8495:63;;8554:1;8551;8544:12;8495:63;8442:122;:::o;8570:139::-;8616:5;8654:6;8641:20;8632:29;;8670:33;8697:5;8670:33;:::i;:::-;8570:139;;;;:::o;8715:329::-;8774:6;8823:2;8811:9;8802:7;8798:23;8794:32;8791:119;;;8829:79;;:::i;:::-;8791:119;8949:1;8974:53;9019:7;9010:6;8999:9;8995:22;8974:53;:::i;:::-;8964:63;;8920:117;8715:329;;;;:::o;9050:180::-;9098:77;9095:1;9088:88;9195:4;9192:1;9185:15;9219:4;9216:1;9209:15;9236:169;9320:11;9354:6;9349:3;9342:19;9394:4;9389:3;9385:14;9370:29;;9236:169;;;;:::o;9411:::-;9551:21;9547:1;9539:6;9535:14;9528:45;9411:169;:::o;9586:366::-;9728:3;9749:67;9813:2;9808:3;9749:67;:::i;:::-;9742:74;;9825:93;9914:3;9825:93;:::i;:::-;9943:2;9938:3;9934:12;9927:19;;9586:366;;;:::o;9958:419::-;10124:4;10162:2;10151:9;10147:18;10139:26;;10211:9;10205:4;10201:20;10197:1;10186:9;10182:17;10175:47;10239:131;10365:4;10239:131;:::i;:::-;10231:139;;9958:419;;;:::o;10383:179::-;10523:31;10519:1;10511:6;10507:14;10500:55;10383:179;:::o;10568:366::-;10710:3;10731:67;10795:2;10790:3;10731:67;:::i;:::-;10724:74;;10807:93;10896:3;10807:93;:::i;:::-;10925:2;10920:3;10916:12;10909:19;;10568:366;;;:::o;10940:419::-;11106:4;11144:2;11133:9;11129:18;11121:26;;11193:9;11187:4;11183:20;11179:1;11168:9;11164:17;11157:47;11221:131;11347:4;11221:131;:::i;:::-;11213:139;;10940:419;;;:::o;11365:180::-;11413:77;11410:1;11403:88;11510:4;11507:1;11500:15;11534:4;11531:1;11524:15;11551:233;11590:3;11613:24;11631:5;11613:24;:::i;:::-;11604:33;;11659:66;11652:5;11649:77;11646:103;;11729:18;;:::i;:::-;11646:103;11776:1;11769:5;11765:13;11758:20;;11551:233;;;:::o;11790:180::-;11838:77;11835:1;11828:88;11935:4;11932:1;11925:15;11959:4;11956:1;11949:15;11976:172;12116:24;12112:1;12104:6;12100:14;12093:48;11976:172;:::o;12154:366::-;12296:3;12317:67;12381:2;12376:3;12317:67;:::i;:::-;12310:74;;12393:93;12482:3;12393:93;:::i;:::-;12511:2;12506:3;12502:12;12495:19;;12154:366;;;:::o;12526:419::-;12692:4;12730:2;12719:9;12715:18;12707:26;;12779:9;12773:4;12769:20;12765:1;12754:9;12750:17;12743:47;12807:131;12933:4;12807:131;:::i;:::-;12799:139;;12526:419;;;:::o;12951:173::-;13091:25;13087:1;13079:6;13075:14;13068:49;12951:173;:::o;13130:366::-;13272:3;13293:67;13357:2;13352:3;13293:67;:::i;:::-;13286:74;;13369:93;13458:3;13369:93;:::i;:::-;13487:2;13482:3;13478:12;13471:19;;13130:366;;;:::o;13502:419::-;13668:4;13706:2;13695:9;13691:18;13683:26;;13755:9;13749:4;13745:20;13741:1;13730:9;13726:17;13719:47;13783:131;13909:4;13783:131;:::i;:::-;13775:139;;13502:419;;;:::o;13927:117::-;14036:1;14033;14026:12;14050:99;14135:6;14130:3;14125;14112:30;14050:99;;;:::o;14185:537::-;14313:3;14334:86;14413:6;14408:3;14334:86;:::i;:::-;14327:93;;14444:66;14436:6;14433:78;14430:165;;;14514:79;;:::i;:::-;14430:165;14626:4;14618:6;14614:17;14604:27;;14641:43;14677:6;14672:3;14665:5;14641:43;:::i;:::-;14709:6;14704:3;14700:16;14693:23;;14185:537;;;;;:::o;14728:393::-;14881:4;14919:2;14908:9;14904:18;14896:26;;14968:9;14962:4;14958:20;14954:1;14943:9;14939:17;14932:47;14996:118;15109:4;15100:6;15092;14996:118;:::i;:::-;14988:126;;14728:393;;;;;:::o;15127:170::-;15267:22;15263:1;15255:6;15251:14;15244:46;15127:170;:::o;15303:366::-;15445:3;15466:67;15530:2;15525:3;15466:67;:::i;:::-;15459:74;;15542:93;15631:3;15542:93;:::i;:::-;15660:2;15655:3;15651:12;15644:19;;15303:366;;;:::o;15675:419::-;15841:4;15879:2;15868:9;15864:18;15856:26;;15928:9;15922:4;15918:20;15914:1;15903:9;15899:17;15892:47;15956:131;16082:4;15956:131;:::i;:::-;15948:139;;15675:419;;;:::o;16100:173::-;16240:25;16236:1;16228:6;16224:14;16217:49;16100:173;:::o;16279:366::-;16421:3;16442:67;16506:2;16501:3;16442:67;:::i;:::-;16435:74;;16518:93;16607:3;16518:93;:::i;:::-;16636:2;16631:3;16627:12;16620:19;;16279:366;;;:::o;16651:419::-;16817:4;16855:2;16844:9;16840:18;16832:26;;16904:9;16898:4;16894:20;16890:1;16879:9;16875:17;16868:47;16932:131;17058:4;16932:131;:::i;:::-;16924:139;;16651:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1461800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"getGameAssetContracts(address)": "infinite",
								"getGamePermissions(address,address)": "infinite",
								"grantAssetPermission(address,address,bytes32[])": "infinite",
								"hasPermissions(address,address,bytes32[])": "infinite",
								"isGameRegistered(address)": "2963",
								"owner()": "2537",
								"registerGame(address)": "infinite",
								"registeredGames(uint256)": "5010",
								"renounceOwnership()": "infinite",
								"revokeAssetPermission(address,address)": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 111,
									"end": 6144,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 111,
									"end": 6144,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 111,
									"end": 6144,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1031,
									"end": 1066,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 1031,
									"end": 1066,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1031,
									"end": 1066,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1031,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1031,
									"end": 1066,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1031,
									"end": 1066,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1031,
									"end": 1066,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1031,
									"end": 1066,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1031,
									"end": 1066,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1031,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1031,
									"end": 1066,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1053,
									"end": 1063,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 111,
									"end": 6144,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 111,
									"end": 6144,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 133,
									"name": "tag",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 7,
									"end": 133,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 44,
									"end": 51,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 84,
									"end": 126,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 77,
									"end": 82,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 73,
									"end": 127,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 62,
									"end": 127,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 62,
									"end": 127,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7,
									"end": 133,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 133,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 139,
									"end": 235,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 139,
									"end": 235,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 176,
									"end": 183,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 223,
									"end": 228,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 205,
									"end": 229,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 205,
									"end": 229,
									"name": "tag",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 194,
									"end": 229,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 194,
									"end": 229,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 139,
									"end": 235,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 139,
									"end": 235,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 241,
									"end": 359,
									"name": "tag",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 241,
									"end": 359,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 346,
									"end": 351,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 328,
									"end": 352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 328,
									"end": 352,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 328,
									"end": 352,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 323,
									"end": 326,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 316,
									"end": 353,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 241,
									"end": 359,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 365,
									"end": 587,
									"name": "tag",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 365,
									"end": 587,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 458,
									"end": 462,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 498,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 485,
									"end": 494,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 481,
									"end": 499,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 473,
									"end": 499,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 473,
									"end": 499,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 577,
									"end": 578,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 566,
									"end": 575,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 562,
									"end": 579,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 553,
									"end": 559,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 509,
									"end": 580,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 509,
									"end": 580,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 509,
									"end": 580,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 365,
									"end": 587,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 111,
									"end": 6144,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 111,
									"end": 6144,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 111,
									"end": 6144,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 111,
									"end": 6144,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 111,
									"end": 6144,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 111,
									"end": 6144,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 111,
									"end": 6144,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 111,
									"end": 6144,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 111,
									"end": 6144,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bb6e151a27a9dd7f9f86f1321e922261e029f2dfd2ce38b0f14b0e79927fbbb864736f6c634300081a0033",
									".code": [
										{
											"begin": 111,
											"end": 6144,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "PUSH",
											"source": 5,
											"value": "715018A6"
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "PUSH",
											"source": 5,
											"value": "715018A6"
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "PUSH",
											"source": 5,
											"value": "8DA5CB5B"
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "PUSH",
											"source": 5,
											"value": "9B36057C"
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "PUSH",
											"source": 5,
											"value": "9E3C5A72"
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "PUSH",
											"source": 5,
											"value": "EE658E45"
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "PUSH",
											"source": 5,
											"value": "F2FDE38B"
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "PUSH",
											"source": 5,
											"value": "36E9B39A"
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "PUSH",
											"source": 5,
											"value": "53C02924"
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "PUSH",
											"source": 5,
											"value": "57F623D0"
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "PUSH",
											"source": 5,
											"value": "64462142"
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "PUSH",
											"source": 5,
											"value": "6F6145F0"
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 111,
											"end": 6144,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4286,
											"end": 5077,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 4286,
											"end": 5077,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4286,
											"end": 5077,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 4286,
											"end": 5077,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4286,
											"end": 5077,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4286,
											"end": 5077,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4286,
											"end": 5077,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4286,
											"end": 5077,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4286,
											"end": 5077,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4286,
											"end": 5077,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4286,
											"end": 5077,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 4286,
											"end": 5077,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4286,
											"end": 5077,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4286,
											"end": 5077,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 4286,
											"end": 5077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4286,
											"end": 5077,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 4286,
											"end": 5077,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4286,
											"end": 5077,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 4286,
											"end": 5077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4286,
											"end": 5077,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 4286,
											"end": 5077,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4286,
											"end": 5077,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4286,
											"end": 5077,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4286,
											"end": 5077,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 4286,
											"end": 5077,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4286,
											"end": 5077,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4286,
											"end": 5077,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4286,
											"end": 5077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4286,
											"end": 5077,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 4286,
											"end": 5077,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4286,
											"end": 5077,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4286,
											"end": 5077,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4286,
											"end": 5077,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4286,
											"end": 5077,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4286,
											"end": 5077,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4286,
											"end": 5077,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4286,
											"end": 5077,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3550,
											"end": 3946,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3550,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3550,
											"end": 3946,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 3550,
											"end": 3946,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3550,
											"end": 3946,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3550,
											"end": 3946,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3550,
											"end": 3946,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3550,
											"end": 3946,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3550,
											"end": 3946,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3550,
											"end": 3946,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3550,
											"end": 3946,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 3550,
											"end": 3946,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3550,
											"end": 3946,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3550,
											"end": 3946,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 3550,
											"end": 3946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3550,
											"end": 3946,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 3550,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3550,
											"end": 3946,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3550,
											"end": 3946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3550,
											"end": 3946,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 3550,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3550,
											"end": 3946,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3550,
											"end": 3946,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3550,
											"end": 3946,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 3550,
											"end": 3946,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3550,
											"end": 3946,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3550,
											"end": 3946,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 3550,
											"end": 3946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3550,
											"end": 3946,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 3550,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3550,
											"end": 3946,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3550,
											"end": 3946,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3550,
											"end": 3946,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3550,
											"end": 3946,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3550,
											"end": 3946,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3550,
											"end": 3946,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3550,
											"end": 3946,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 5253,
											"end": 6142,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 5253,
											"end": 6142,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5253,
											"end": 6142,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 5253,
											"end": 6142,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5253,
											"end": 6142,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5253,
											"end": 6142,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 5253,
											"end": 6142,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5253,
											"end": 6142,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5253,
											"end": 6142,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5253,
											"end": 6142,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5253,
											"end": 6142,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 5253,
											"end": 6142,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5253,
											"end": 6142,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5253,
											"end": 6142,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 5253,
											"end": 6142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5253,
											"end": 6142,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 5253,
											"end": 6142,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5253,
											"end": 6142,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 5253,
											"end": 6142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5253,
											"end": 6142,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 5253,
											"end": 6142,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5253,
											"end": 6142,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5253,
											"end": 6142,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5253,
											"end": 6142,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 5253,
											"end": 6142,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5253,
											"end": 6142,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5253,
											"end": 6142,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 5253,
											"end": 6142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5253,
											"end": 6142,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 5253,
											"end": 6142,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5253,
											"end": 6142,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5253,
											"end": 6142,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5253,
											"end": 6142,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5253,
											"end": 6142,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5253,
											"end": 6142,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5253,
											"end": 6142,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5253,
											"end": 6142,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1881,
											"end": 2493,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 1881,
											"end": 2493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1881,
											"end": 2493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 1881,
											"end": 2493,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1881,
											"end": 2493,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1881,
											"end": 2493,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1881,
											"end": 2493,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1881,
											"end": 2493,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1881,
											"end": 2493,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1881,
											"end": 2493,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1881,
											"end": 2493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 1881,
											"end": 2493,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1881,
											"end": 2493,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1881,
											"end": 2493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 1881,
											"end": 2493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1881,
											"end": 2493,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 1881,
											"end": 2493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1881,
											"end": 2493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 1881,
											"end": 2493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1881,
											"end": 2493,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 1881,
											"end": 2493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1881,
											"end": 2493,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 2676,
											"end": 3085,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 2676,
											"end": 3085,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2676,
											"end": 3085,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 2676,
											"end": 3085,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2676,
											"end": 3085,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2676,
											"end": 3085,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2676,
											"end": 3085,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2676,
											"end": 3085,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2676,
											"end": 3085,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2676,
											"end": 3085,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2676,
											"end": 3085,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 2676,
											"end": 3085,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2676,
											"end": 3085,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2676,
											"end": 3085,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 2676,
											"end": 3085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2676,
											"end": 3085,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 2676,
											"end": 3085,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2676,
											"end": 3085,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 2676,
											"end": 3085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2676,
											"end": 3085,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 2676,
											"end": 3085,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2676,
											"end": 3085,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1174,
											"end": 1613,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 1174,
											"end": 1613,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1174,
											"end": 1613,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 1174,
											"end": 1613,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1174,
											"end": 1613,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1174,
											"end": 1613,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1174,
											"end": 1613,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1174,
											"end": 1613,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1174,
											"end": 1613,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1174,
											"end": 1613,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1174,
											"end": 1613,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 1174,
											"end": 1613,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1174,
											"end": 1613,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1174,
											"end": 1613,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 1174,
											"end": 1613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1174,
											"end": 1613,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 1174,
											"end": 1613,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1174,
											"end": 1613,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 1174,
											"end": 1613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1174,
											"end": 1613,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 1174,
											"end": 1613,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1174,
											"end": 1613,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 580,
											"end": 612,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 580,
											"end": 612,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 580,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 580,
											"end": 612,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 580,
											"end": 612,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 580,
											"end": 612,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 580,
											"end": 612,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 580,
											"end": 612,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 580,
											"end": 612,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 580,
											"end": 612,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 580,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 580,
											"end": 612,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 580,
											"end": 612,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 580,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 580,
											"end": 612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 580,
											"end": 612,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 580,
											"end": 612,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 580,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 580,
											"end": 612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 580,
											"end": 612,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 580,
											"end": 612,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 580,
											"end": 612,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 580,
											"end": 612,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 580,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 580,
											"end": 612,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 580,
											"end": 612,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 580,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 580,
											"end": 612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 580,
											"end": 612,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 580,
											"end": 612,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 580,
											"end": 612,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 580,
											"end": 612,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 580,
											"end": 612,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 580,
											"end": 612,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 580,
											"end": 612,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 580,
											"end": 612,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 580,
											"end": 612,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3200,
											"end": 3317,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 3200,
											"end": 3317,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3200,
											"end": 3317,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 3200,
											"end": 3317,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3200,
											"end": 3317,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3200,
											"end": 3317,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3200,
											"end": 3317,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3200,
											"end": 3317,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3200,
											"end": 3317,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3200,
											"end": 3317,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3200,
											"end": 3317,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 3200,
											"end": 3317,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3200,
											"end": 3317,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3200,
											"end": 3317,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 3200,
											"end": 3317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3200,
											"end": 3317,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 3200,
											"end": 3317,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3200,
											"end": 3317,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 3200,
											"end": 3317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3200,
											"end": 3317,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 3200,
											"end": 3317,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3200,
											"end": 3317,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3200,
											"end": 3317,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3200,
											"end": 3317,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 3200,
											"end": 3317,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3200,
											"end": 3317,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3200,
											"end": 3317,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3200,
											"end": 3317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3200,
											"end": 3317,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 3200,
											"end": 3317,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3200,
											"end": 3317,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3200,
											"end": 3317,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3200,
											"end": 3317,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3200,
											"end": 3317,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3200,
											"end": 3317,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3200,
											"end": 3317,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3200,
											"end": 3317,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4286,
											"end": 5077,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 4286,
											"end": 5077,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4431,
											"end": 4435,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4452,
											"end": 4457,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4452,
											"end": 4463,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4458,
											"end": 4462,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4452,
											"end": 4463,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4452,
											"end": 4463,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4452,
											"end": 4463,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4452,
											"end": 4463,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4452,
											"end": 4463,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4452,
											"end": 4463,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4452,
											"end": 4463,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4452,
											"end": 4463,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4452,
											"end": 4463,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4452,
											"end": 4463,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4452,
											"end": 4463,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4452,
											"end": 4463,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4452,
											"end": 4463,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4452,
											"end": 4463,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4452,
											"end": 4463,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4452,
											"end": 4476,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4452,
											"end": 4476,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4452,
											"end": 4476,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4452,
											"end": 4476,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4452,
											"end": 4476,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4452,
											"end": 4476,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4452,
											"end": 4476,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 4452,
											"end": 4476,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 4452,
											"end": 4476,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4452,
											"end": 4476,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 4452,
											"end": 4476,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 4452,
											"end": 4476,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4451,
											"end": 4476,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4451,
											"end": 4537,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4451,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 4451,
											"end": 4537,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4451,
											"end": 4537,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4481,
											"end": 4486,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4481,
											"end": 4492,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4487,
											"end": 4491,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4481,
											"end": 4492,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4481,
											"end": 4492,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4481,
											"end": 4492,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4481,
											"end": 4492,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4481,
											"end": 4492,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4481,
											"end": 4492,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4481,
											"end": 4492,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4481,
											"end": 4492,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4481,
											"end": 4492,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4481,
											"end": 4492,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4481,
											"end": 4492,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4481,
											"end": 4492,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4481,
											"end": 4492,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4481,
											"end": 4492,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4481,
											"end": 4492,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4481,
											"end": 4509,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4481,
											"end": 4509,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4481,
											"end": 4524,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4510,
											"end": 4523,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4481,
											"end": 4524,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4481,
											"end": 4524,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4481,
											"end": 4524,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4481,
											"end": 4524,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4481,
											"end": 4524,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4481,
											"end": 4524,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4481,
											"end": 4524,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4481,
											"end": 4524,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4481,
											"end": 4524,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4481,
											"end": 4524,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4481,
											"end": 4524,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4481,
											"end": 4524,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4481,
											"end": 4524,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4481,
											"end": 4524,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4481,
											"end": 4524,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4481,
											"end": 4537,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4481,
											"end": 4537,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4481,
											"end": 4537,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4481,
											"end": 4537,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4481,
											"end": 4537,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4481,
											"end": 4537,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4481,
											"end": 4537,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 4481,
											"end": 4537,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 4481,
											"end": 4537,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4481,
											"end": 4537,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 4481,
											"end": 4537,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 4481,
											"end": 4537,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4480,
											"end": 4537,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4451,
											"end": 4537,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 4451,
											"end": 4537,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4447,
											"end": 4576,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4447,
											"end": 4576,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 4447,
											"end": 4576,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4560,
											"end": 4565,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4553,
											"end": 4565,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4553,
											"end": 4565,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4553,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4553,
											"end": 4565,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4447,
											"end": 4576,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 4447,
											"end": 4576,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4586,
											"end": 4616,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4619,
											"end": 4624,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4619,
											"end": 4630,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4625,
											"end": 4629,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 4619,
											"end": 4630,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4619,
											"end": 4630,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4619,
											"end": 4630,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4619,
											"end": 4630,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4619,
											"end": 4630,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4619,
											"end": 4630,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4619,
											"end": 4630,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4619,
											"end": 4630,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4619,
											"end": 4630,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4619,
											"end": 4630,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4619,
											"end": 4630,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4619,
											"end": 4630,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4619,
											"end": 4630,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4619,
											"end": 4630,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4619,
											"end": 4630,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4619,
											"end": 4647,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4619,
											"end": 4647,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4619,
											"end": 4662,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4648,
											"end": 4661,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4619,
											"end": 4662,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4619,
											"end": 4662,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4619,
											"end": 4662,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4619,
											"end": 4662,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4619,
											"end": 4662,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4619,
											"end": 4662,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4619,
											"end": 4662,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4619,
											"end": 4662,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4619,
											"end": 4662,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4619,
											"end": 4662,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4619,
											"end": 4662,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4619,
											"end": 4662,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4619,
											"end": 4662,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4619,
											"end": 4662,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4619,
											"end": 4662,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4619,
											"end": 4680,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4619,
											"end": 4680,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4586,
											"end": 4680,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4586,
											"end": 4680,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4695,
											"end": 4701,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4690,
											"end": 5050,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 4690,
											"end": 5050,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4711,
											"end": 4721,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4711,
											"end": 4721,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4711,
											"end": 4728,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4711,
											"end": 4728,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4707,
											"end": 4708,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4707,
											"end": 4728,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 4690,
											"end": 5050,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4690,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4690,
											"end": 5050,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4749,
											"end": 4767,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4794,
											"end": 4800,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4789,
											"end": 4994,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 4789,
											"end": 4994,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4810,
											"end": 4822,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4810,
											"end": 4829,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4810,
											"end": 4829,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4810,
											"end": 4829,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4810,
											"end": 4829,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4806,
											"end": 4807,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4806,
											"end": 4829,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 4789,
											"end": 4994,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4789,
											"end": 4994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 4789,
											"end": 4994,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4875,
											"end": 4887,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4888,
											"end": 4889,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4875,
											"end": 4890,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4875,
											"end": 4890,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4875,
											"end": 4890,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4875,
											"end": 4890,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 4875,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 4875,
											"end": 4890,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4875,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 4875,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 4875,
											"end": 4890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4875,
											"end": 4890,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 4875,
											"end": 4890,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4875,
											"end": 4890,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 4875,
											"end": 4890,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4875,
											"end": 4890,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4875,
											"end": 4890,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4875,
											"end": 4890,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4875,
											"end": 4890,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4875,
											"end": 4890,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4875,
											"end": 4890,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4875,
											"end": 4890,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4875,
											"end": 4890,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4858,
											"end": 4868,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 4858,
											"end": 4868,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 4869,
											"end": 4870,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4858,
											"end": 4871,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4858,
											"end": 4871,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4858,
											"end": 4871,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 4858,
											"end": 4871,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 4858,
											"end": 4871,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4858,
											"end": 4871,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 4858,
											"end": 4871,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 4858,
											"end": 4871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4858,
											"end": 4871,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 4858,
											"end": 4871,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4858,
											"end": 4871,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 4858,
											"end": 4871,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4858,
											"end": 4871,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4858,
											"end": 4871,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4858,
											"end": 4871,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4858,
											"end": 4871,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 4858,
											"end": 4871,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4858,
											"end": 4871,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 4858,
											"end": 4890,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4854,
											"end": 4980,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 4854,
											"end": 4980,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4930,
											"end": 4934,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4914,
											"end": 4934,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4914,
											"end": 4934,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4956,
											"end": 4961,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 4956,
											"end": 4961,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4854,
											"end": 4980,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 4854,
											"end": 4980,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4831,
											"end": 4834,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4831,
											"end": 4834,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4831,
											"end": 4834,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4831,
											"end": 4834,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4831,
											"end": 4834,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4831,
											"end": 4834,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4831,
											"end": 4834,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4789,
											"end": 4994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 4789,
											"end": 4994,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4789,
											"end": 4994,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 4789,
											"end": 4994,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4789,
											"end": 4994,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5012,
											"end": 5025,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5007,
											"end": 5039,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 5007,
											"end": 5039,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5034,
											"end": 5039,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5027,
											"end": 5039,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 5027,
											"end": 5039,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5027,
											"end": 5039,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5027,
											"end": 5039,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5027,
											"end": 5039,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5027,
											"end": 5039,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5027,
											"end": 5039,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5007,
											"end": 5039,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 5007,
											"end": 5039,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4735,
											"end": 5050,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4730,
											"end": 4733,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4730,
											"end": 4733,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4730,
											"end": 4733,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4730,
											"end": 4733,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4730,
											"end": 4733,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4730,
											"end": 4733,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4730,
											"end": 4733,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4690,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 4690,
											"end": 5050,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4690,
											"end": 5050,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4690,
											"end": 5050,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4690,
											"end": 5050,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5066,
											"end": 5070,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5059,
											"end": 5070,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5059,
											"end": 5070,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5059,
											"end": 5070,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4286,
											"end": 5077,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4286,
											"end": 5077,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4286,
											"end": 5077,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 4286,
											"end": 5077,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4286,
											"end": 5077,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4286,
											"end": 5077,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4286,
											"end": 5077,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4286,
											"end": 5077,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4286,
											"end": 5077,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3550,
											"end": 3946,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3550,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3660,
											"end": 3676,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3696,
											"end": 3701,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3696,
											"end": 3707,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3702,
											"end": 3706,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3696,
											"end": 3707,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3696,
											"end": 3707,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3696,
											"end": 3707,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3696,
											"end": 3707,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3696,
											"end": 3707,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3696,
											"end": 3707,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3696,
											"end": 3707,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3696,
											"end": 3707,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3696,
											"end": 3707,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3696,
											"end": 3707,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3696,
											"end": 3707,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3696,
											"end": 3707,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3696,
											"end": 3707,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3696,
											"end": 3707,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3696,
											"end": 3707,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3696,
											"end": 3720,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3696,
											"end": 3720,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3696,
											"end": 3720,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3696,
											"end": 3720,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3696,
											"end": 3720,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3696,
											"end": 3720,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3696,
											"end": 3720,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3696,
											"end": 3720,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 3696,
											"end": 3720,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3696,
											"end": 3720,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 3696,
											"end": 3720,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 3696,
											"end": 3720,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3688,
											"end": 3744,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 3688,
											"end": 3744,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3688,
											"end": 3744,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3688,
											"end": 3744,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3688,
											"end": 3744,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3688,
											"end": 3744,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3688,
											"end": 3744,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3688,
											"end": 3744,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3688,
											"end": 3744,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3688,
											"end": 3744,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 3688,
											"end": 3744,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3688,
											"end": 3744,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 3688,
											"end": 3744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3688,
											"end": 3744,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 3688,
											"end": 3744,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3688,
											"end": 3744,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3688,
											"end": 3744,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3688,
											"end": 3744,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3688,
											"end": 3744,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3688,
											"end": 3744,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3688,
											"end": 3744,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3688,
											"end": 3744,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3688,
											"end": 3744,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 3688,
											"end": 3744,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3762,
											"end": 3767,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3762,
											"end": 3773,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3768,
											"end": 3772,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3762,
											"end": 3773,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3762,
											"end": 3773,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3762,
											"end": 3773,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3762,
											"end": 3773,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3762,
											"end": 3773,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3762,
											"end": 3773,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3762,
											"end": 3773,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3762,
											"end": 3773,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3762,
											"end": 3773,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3762,
											"end": 3773,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3762,
											"end": 3773,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3762,
											"end": 3773,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3762,
											"end": 3773,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3762,
											"end": 3773,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3762,
											"end": 3773,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3762,
											"end": 3790,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3762,
											"end": 3790,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3762,
											"end": 3805,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3791,
											"end": 3804,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3762,
											"end": 3805,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3762,
											"end": 3805,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3762,
											"end": 3805,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3762,
											"end": 3805,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3762,
											"end": 3805,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3762,
											"end": 3805,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3762,
											"end": 3805,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3762,
											"end": 3805,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3762,
											"end": 3805,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3762,
											"end": 3805,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3762,
											"end": 3805,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3762,
											"end": 3805,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3762,
											"end": 3805,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3762,
											"end": 3805,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3762,
											"end": 3805,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3762,
											"end": 3818,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3762,
											"end": 3818,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3762,
											"end": 3818,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3762,
											"end": 3818,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3762,
											"end": 3818,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3762,
											"end": 3818,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3762,
											"end": 3818,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3762,
											"end": 3818,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 3762,
											"end": 3818,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3762,
											"end": 3818,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 3762,
											"end": 3818,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 3762,
											"end": 3818,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3754,
											"end": 3852,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 3754,
											"end": 3852,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3754,
											"end": 3852,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3754,
											"end": 3852,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3754,
											"end": 3852,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3754,
											"end": 3852,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3754,
											"end": 3852,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3754,
											"end": 3852,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3754,
											"end": 3852,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3754,
											"end": 3852,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 3754,
											"end": 3852,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3754,
											"end": 3852,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 3754,
											"end": 3852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3754,
											"end": 3852,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 3754,
											"end": 3852,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3754,
											"end": 3852,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3754,
											"end": 3852,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3754,
											"end": 3852,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3754,
											"end": 3852,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3754,
											"end": 3852,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3754,
											"end": 3852,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3754,
											"end": 3852,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3754,
											"end": 3852,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 3754,
											"end": 3852,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3878,
											"end": 3883,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3878,
											"end": 3889,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3884,
											"end": 3888,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3878,
											"end": 3889,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3878,
											"end": 3889,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3878,
											"end": 3889,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3878,
											"end": 3889,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3878,
											"end": 3889,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3878,
											"end": 3889,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3878,
											"end": 3889,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3878,
											"end": 3889,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3878,
											"end": 3889,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3878,
											"end": 3889,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3878,
											"end": 3889,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3878,
											"end": 3889,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3878,
											"end": 3889,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3878,
											"end": 3889,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3878,
											"end": 3889,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3878,
											"end": 3906,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3878,
											"end": 3906,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3878,
											"end": 3921,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3907,
											"end": 3920,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3878,
											"end": 3921,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3878,
											"end": 3921,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3878,
											"end": 3921,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3878,
											"end": 3921,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3878,
											"end": 3921,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3878,
											"end": 3921,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3878,
											"end": 3921,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3878,
											"end": 3921,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3878,
											"end": 3921,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3878,
											"end": 3921,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3878,
											"end": 3921,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3878,
											"end": 3921,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3878,
											"end": 3921,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3878,
											"end": 3921,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3878,
											"end": 3921,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3878,
											"end": 3939,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3878,
											"end": 3939,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3871,
											"end": 3939,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3871,
											"end": 3939,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3871,
											"end": 3939,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3871,
											"end": 3939,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3871,
											"end": 3939,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 3871,
											"end": 3939,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3871,
											"end": 3939,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3871,
											"end": 3939,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3871,
											"end": 3939,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3871,
											"end": 3939,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3871,
											"end": 3939,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3871,
											"end": 3939,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3871,
											"end": 3939,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3871,
											"end": 3939,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3871,
											"end": 3939,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3871,
											"end": 3939,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3871,
											"end": 3939,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3871,
											"end": 3939,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3871,
											"end": 3939,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3871,
											"end": 3939,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3871,
											"end": 3939,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3871,
											"end": 3939,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3871,
											"end": 3939,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3871,
											"end": 3939,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3871,
											"end": 3939,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3871,
											"end": 3939,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3871,
											"end": 3939,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3871,
											"end": 3939,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3871,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3871,
											"end": 3939,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3871,
											"end": 3939,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3871,
											"end": 3939,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 3871,
											"end": 3939,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3871,
											"end": 3939,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3871,
											"end": 3939,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3871,
											"end": 3939,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3871,
											"end": 3939,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3871,
											"end": 3939,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3871,
											"end": 3939,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3871,
											"end": 3939,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3871,
											"end": 3939,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3871,
											"end": 3939,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3871,
											"end": 3939,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 3871,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3871,
											"end": 3939,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3871,
											"end": 3939,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3871,
											"end": 3939,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3871,
											"end": 3939,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3871,
											"end": 3939,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3871,
											"end": 3939,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3871,
											"end": 3939,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3871,
											"end": 3939,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3871,
											"end": 3939,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3871,
											"end": 3939,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3871,
											"end": 3939,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3871,
											"end": 3939,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3871,
											"end": 3939,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3871,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 3871,
											"end": 3939,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3871,
											"end": 3939,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3871,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3871,
											"end": 3939,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3871,
											"end": 3939,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3871,
											"end": 3939,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3871,
											"end": 3939,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3871,
											"end": 3939,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3871,
											"end": 3939,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3871,
											"end": 3939,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3550,
											"end": 3946,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3550,
											"end": 3946,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3550,
											"end": 3946,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3550,
											"end": 3946,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3550,
											"end": 3946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5253,
											"end": 6142,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 5253,
											"end": 6142,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5321,
											"end": 5337,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5357,
											"end": 5362,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5357,
											"end": 5368,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5363,
											"end": 5367,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5357,
											"end": 5368,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5357,
											"end": 5368,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5357,
											"end": 5368,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5357,
											"end": 5368,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5357,
											"end": 5368,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5357,
											"end": 5368,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5357,
											"end": 5368,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5357,
											"end": 5368,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5357,
											"end": 5368,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5357,
											"end": 5368,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5357,
											"end": 5368,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5357,
											"end": 5368,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5357,
											"end": 5368,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5357,
											"end": 5368,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5357,
											"end": 5368,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5357,
											"end": 5381,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5357,
											"end": 5381,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5357,
											"end": 5381,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5357,
											"end": 5381,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5357,
											"end": 5381,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5357,
											"end": 5381,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5357,
											"end": 5381,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5357,
											"end": 5381,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 5357,
											"end": 5381,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5357,
											"end": 5381,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 5357,
											"end": 5381,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 5357,
											"end": 5381,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5349,
											"end": 5405,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 5349,
											"end": 5405,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5349,
											"end": 5405,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5349,
											"end": 5405,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5349,
											"end": 5405,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5349,
											"end": 5405,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5349,
											"end": 5405,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5349,
											"end": 5405,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5349,
											"end": 5405,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5349,
											"end": 5405,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 5349,
											"end": 5405,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5349,
											"end": 5405,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 5349,
											"end": 5405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5349,
											"end": 5405,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 5349,
											"end": 5405,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5349,
											"end": 5405,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5349,
											"end": 5405,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5349,
											"end": 5405,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5349,
											"end": 5405,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5349,
											"end": 5405,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5349,
											"end": 5405,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5349,
											"end": 5405,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5349,
											"end": 5405,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 5349,
											"end": 5405,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5501,
											"end": 5514,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5533,
											"end": 5539,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5528,
											"end": 5709,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 5528,
											"end": 5709,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5549,
											"end": 5564,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 5549,
											"end": 5571,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5549,
											"end": 5571,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5549,
											"end": 5571,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5549,
											"end": 5571,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5545,
											"end": 5546,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5545,
											"end": 5571,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 5528,
											"end": 5709,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5528,
											"end": 5709,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 5528,
											"end": 5709,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5596,
											"end": 5601,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5596,
											"end": 5607,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5602,
											"end": 5606,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5596,
											"end": 5607,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5596,
											"end": 5607,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5596,
											"end": 5607,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5596,
											"end": 5607,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5596,
											"end": 5607,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5596,
											"end": 5607,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5596,
											"end": 5607,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5596,
											"end": 5607,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5596,
											"end": 5607,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5596,
											"end": 5607,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5596,
											"end": 5607,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5596,
											"end": 5607,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5596,
											"end": 5607,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5596,
											"end": 5607,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5596,
											"end": 5607,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5596,
											"end": 5624,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5596,
											"end": 5624,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5596,
											"end": 5644,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5625,
											"end": 5640,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 5641,
											"end": 5642,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5625,
											"end": 5643,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5625,
											"end": 5643,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5625,
											"end": 5643,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5625,
											"end": 5643,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 5625,
											"end": 5643,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 5625,
											"end": 5643,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5625,
											"end": 5643,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 5625,
											"end": 5643,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 5625,
											"end": 5643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5625,
											"end": 5643,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 5625,
											"end": 5643,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5625,
											"end": 5643,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 5625,
											"end": 5643,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5625,
											"end": 5643,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5625,
											"end": 5643,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5625,
											"end": 5643,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5625,
											"end": 5643,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5625,
											"end": 5643,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5625,
											"end": 5643,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5625,
											"end": 5643,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5625,
											"end": 5643,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5625,
											"end": 5643,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5625,
											"end": 5643,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5625,
											"end": 5643,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5625,
											"end": 5643,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5625,
											"end": 5643,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 5625,
											"end": 5643,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5625,
											"end": 5643,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 5625,
											"end": 5643,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5625,
											"end": 5643,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5596,
											"end": 5644,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5596,
											"end": 5644,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5596,
											"end": 5644,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5596,
											"end": 5644,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5596,
											"end": 5644,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5596,
											"end": 5644,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5596,
											"end": 5644,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5596,
											"end": 5644,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5596,
											"end": 5644,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5596,
											"end": 5644,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5596,
											"end": 5644,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5596,
											"end": 5644,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5596,
											"end": 5644,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5596,
											"end": 5644,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5596,
											"end": 5644,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5596,
											"end": 5657,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5596,
											"end": 5657,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5596,
											"end": 5657,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5596,
											"end": 5657,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5596,
											"end": 5657,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5596,
											"end": 5657,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5596,
											"end": 5657,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5596,
											"end": 5657,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 5596,
											"end": 5657,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5596,
											"end": 5657,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 5596,
											"end": 5657,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 5596,
											"end": 5657,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5592,
											"end": 5699,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5592,
											"end": 5699,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 5592,
											"end": 5699,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5677,
											"end": 5684,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5677,
											"end": 5684,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5677,
											"end": 5684,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 5677,
											"end": 5684,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5677,
											"end": 5684,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 5677,
											"end": 5684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5677,
											"end": 5684,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 5677,
											"end": 5684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5677,
											"end": 5684,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5677,
											"end": 5684,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5677,
											"end": 5684,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5592,
											"end": 5699,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 5592,
											"end": 5699,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5573,
											"end": 5576,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5573,
											"end": 5576,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5573,
											"end": 5576,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5573,
											"end": 5576,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5573,
											"end": 5576,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5573,
											"end": 5576,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5573,
											"end": 5576,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5528,
											"end": 5709,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 5528,
											"end": 5709,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5528,
											"end": 5709,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 5528,
											"end": 5709,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5528,
											"end": 5709,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5764,
											"end": 5795,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5812,
											"end": 5817,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 5818,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5798,
											"end": 5818,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 5818,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 5818,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 5818,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 5798,
											"end": 5818,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 5818,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 5798,
											"end": 5818,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5798,
											"end": 5818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 5818,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 5798,
											"end": 5818,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 5818,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 5798,
											"end": 5818,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 5818,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5798,
											"end": 5818,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 5818,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 5818,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 5818,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 5818,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 5818,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 5818,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5798,
											"end": 5818,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 5818,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5798,
											"end": 5818,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 5818,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 5818,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 5818,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5798,
											"end": 5818,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 5818,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 5818,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 5818,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 5798,
											"end": 5818,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 5818,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 5818,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5798,
											"end": 5818,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 5818,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5798,
											"end": 5818,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 5818,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 5818,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 5818,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 5818,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 5818,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 5818,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 5818,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 5818,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 5818,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 5818,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 5818,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 5818,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 5818,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 5818,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 5798,
											"end": 5818,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5798,
											"end": 5818,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5764,
											"end": 5818,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5764,
											"end": 5818,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5828,
											"end": 5841,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5860,
											"end": 5866,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5855,
											"end": 6096,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 5855,
											"end": 6096,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5876,
											"end": 5891,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 5876,
											"end": 5898,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5876,
											"end": 5898,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5876,
											"end": 5898,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5876,
											"end": 5898,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5872,
											"end": 5873,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5872,
											"end": 5898,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 5855,
											"end": 6096,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5855,
											"end": 6096,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 5855,
											"end": 6096,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5923,
											"end": 5928,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5923,
											"end": 5934,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5929,
											"end": 5933,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5923,
											"end": 5934,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5923,
											"end": 5934,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5923,
											"end": 5934,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5923,
											"end": 5934,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5923,
											"end": 5934,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5923,
											"end": 5934,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5923,
											"end": 5934,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5923,
											"end": 5934,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5923,
											"end": 5934,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5923,
											"end": 5934,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5923,
											"end": 5934,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5923,
											"end": 5934,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5923,
											"end": 5934,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5923,
											"end": 5934,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5923,
											"end": 5934,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5923,
											"end": 5951,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5923,
											"end": 5951,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5923,
											"end": 5971,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5952,
											"end": 5967,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 5968,
											"end": 5969,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5952,
											"end": 5970,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5952,
											"end": 5970,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5952,
											"end": 5970,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5952,
											"end": 5970,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 5952,
											"end": 5970,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 5952,
											"end": 5970,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5952,
											"end": 5970,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 5952,
											"end": 5970,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 5952,
											"end": 5970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5952,
											"end": 5970,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 5952,
											"end": 5970,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5952,
											"end": 5970,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 5952,
											"end": 5970,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5952,
											"end": 5970,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5952,
											"end": 5970,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5952,
											"end": 5970,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5952,
											"end": 5970,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5952,
											"end": 5970,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5952,
											"end": 5970,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5952,
											"end": 5970,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5952,
											"end": 5970,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5952,
											"end": 5970,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5952,
											"end": 5970,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5952,
											"end": 5970,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5952,
											"end": 5970,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5952,
											"end": 5970,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 5952,
											"end": 5970,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5952,
											"end": 5970,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 5952,
											"end": 5970,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5952,
											"end": 5970,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5923,
											"end": 5971,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5923,
											"end": 5971,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5923,
											"end": 5971,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5923,
											"end": 5971,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5923,
											"end": 5971,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5923,
											"end": 5971,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5923,
											"end": 5971,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5923,
											"end": 5971,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5923,
											"end": 5971,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5923,
											"end": 5971,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5923,
											"end": 5971,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5923,
											"end": 5971,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5923,
											"end": 5971,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5923,
											"end": 5971,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5923,
											"end": 5971,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5923,
											"end": 5984,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5923,
											"end": 5984,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5923,
											"end": 5984,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5923,
											"end": 5984,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5923,
											"end": 5984,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5923,
											"end": 5984,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5923,
											"end": 5984,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5923,
											"end": 5984,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 5923,
											"end": 5984,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5923,
											"end": 5984,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 5923,
											"end": 5984,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 5923,
											"end": 5984,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5919,
											"end": 6086,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5919,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 5919,
											"end": 6086,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6028,
											"end": 6043,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 6044,
											"end": 6045,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6028,
											"end": 6046,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6028,
											"end": 6046,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6028,
											"end": 6046,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6028,
											"end": 6046,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 6028,
											"end": 6046,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 6028,
											"end": 6046,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6028,
											"end": 6046,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 6028,
											"end": 6046,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 6028,
											"end": 6046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6028,
											"end": 6046,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 6028,
											"end": 6046,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6028,
											"end": 6046,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 6028,
											"end": 6046,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6028,
											"end": 6046,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6028,
											"end": 6046,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6028,
											"end": 6046,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6028,
											"end": 6046,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6028,
											"end": 6046,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6028,
											"end": 6046,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6028,
											"end": 6046,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6028,
											"end": 6046,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6028,
											"end": 6046,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6028,
											"end": 6046,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6028,
											"end": 6046,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6028,
											"end": 6046,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 6028,
											"end": 6046,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 6028,
											"end": 6046,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6028,
											"end": 6046,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 6028,
											"end": 6046,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6028,
											"end": 6046,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6004,
											"end": 6018,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6019,
											"end": 6024,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6004,
											"end": 6025,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6004,
											"end": 6025,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6004,
											"end": 6025,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6004,
											"end": 6025,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 6004,
											"end": 6025,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 6004,
											"end": 6025,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6004,
											"end": 6025,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 6004,
											"end": 6025,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 6004,
											"end": 6025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6004,
											"end": 6025,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 6004,
											"end": 6025,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6004,
											"end": 6025,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 6004,
											"end": 6025,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6004,
											"end": 6025,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6004,
											"end": 6025,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 6004,
											"end": 6025,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6004,
											"end": 6025,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6004,
											"end": 6025,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6004,
											"end": 6046,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6004,
											"end": 6046,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6004,
											"end": 6046,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6004,
											"end": 6046,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6004,
											"end": 6046,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6004,
											"end": 6046,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6004,
											"end": 6046,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6004,
											"end": 6046,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6004,
											"end": 6046,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6004,
											"end": 6046,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6004,
											"end": 6046,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6064,
											"end": 6071,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6064,
											"end": 6071,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6064,
											"end": 6071,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 6064,
											"end": 6071,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6064,
											"end": 6071,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 6064,
											"end": 6071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6064,
											"end": 6071,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 6064,
											"end": 6071,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6064,
											"end": 6071,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6064,
											"end": 6071,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6064,
											"end": 6071,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5919,
											"end": 6086,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 5919,
											"end": 6086,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5900,
											"end": 5903,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5900,
											"end": 5903,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5900,
											"end": 5903,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5900,
											"end": 5903,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5900,
											"end": 5903,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5900,
											"end": 5903,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5900,
											"end": 5903,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5855,
											"end": 6096,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 5855,
											"end": 6096,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5855,
											"end": 6096,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 5855,
											"end": 6096,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5855,
											"end": 6096,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6121,
											"end": 6135,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6114,
											"end": 6135,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6114,
											"end": 6135,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6114,
											"end": 6135,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6114,
											"end": 6135,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6114,
											"end": 6135,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5253,
											"end": 6142,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5253,
											"end": 6142,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5253,
											"end": 6142,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5253,
											"end": 6142,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1881,
											"end": 2493,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 1881,
											"end": 2493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2046,
											"end": 2051,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2046,
											"end": 2057,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2052,
											"end": 2056,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2046,
											"end": 2057,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2046,
											"end": 2057,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2046,
											"end": 2057,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2046,
											"end": 2057,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2046,
											"end": 2057,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2046,
											"end": 2057,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2046,
											"end": 2057,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2046,
											"end": 2057,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2046,
											"end": 2057,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2046,
											"end": 2057,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2046,
											"end": 2057,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2046,
											"end": 2057,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2046,
											"end": 2057,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2046,
											"end": 2057,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2046,
											"end": 2057,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2046,
											"end": 2070,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2046,
											"end": 2070,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2046,
											"end": 2070,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2046,
											"end": 2070,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2046,
											"end": 2070,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2046,
											"end": 2070,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2046,
											"end": 2070,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2046,
											"end": 2070,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2046,
											"end": 2070,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2046,
											"end": 2070,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2046,
											"end": 2070,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 2046,
											"end": 2070,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2038,
											"end": 2094,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 2038,
											"end": 2094,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2038,
											"end": 2094,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2038,
											"end": 2094,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2038,
											"end": 2094,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2038,
											"end": 2094,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2038,
											"end": 2094,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2038,
											"end": 2094,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2038,
											"end": 2094,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2038,
											"end": 2094,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 2038,
											"end": 2094,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2038,
											"end": 2094,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 2038,
											"end": 2094,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2038,
											"end": 2094,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 2038,
											"end": 2094,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2038,
											"end": 2094,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2038,
											"end": 2094,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2038,
											"end": 2094,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2038,
											"end": 2094,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2038,
											"end": 2094,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2038,
											"end": 2094,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2038,
											"end": 2094,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2038,
											"end": 2094,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 2038,
											"end": 2094,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2137,
											"end": 2138,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2112,
											"end": 2139,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2112,
											"end": 2139,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2112,
											"end": 2125,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2112,
											"end": 2139,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2112,
											"end": 2139,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2112,
											"end": 2139,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2104,
											"end": 2166,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 2104,
											"end": 2166,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2104,
											"end": 2166,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2104,
											"end": 2166,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2104,
											"end": 2166,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2104,
											"end": 2166,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2104,
											"end": 2166,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2104,
											"end": 2166,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2104,
											"end": 2166,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2104,
											"end": 2166,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 2104,
											"end": 2166,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2104,
											"end": 2166,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 2104,
											"end": 2166,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2104,
											"end": 2166,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 2104,
											"end": 2166,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2104,
											"end": 2166,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2104,
											"end": 2166,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2104,
											"end": 2166,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2104,
											"end": 2166,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2104,
											"end": 2166,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2104,
											"end": 2166,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2104,
											"end": 2166,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2104,
											"end": 2166,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 2104,
											"end": 2166,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2205,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2184,
											"end": 2194,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2184,
											"end": 2194,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2184,
											"end": 2201,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2184,
											"end": 2201,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2184,
											"end": 2205,
											"modifierDepth": 1,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2176,
											"end": 2233,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 2176,
											"end": 2233,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2176,
											"end": 2233,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2176,
											"end": 2233,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2176,
											"end": 2233,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2176,
											"end": 2233,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2176,
											"end": 2233,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2176,
											"end": 2233,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2176,
											"end": 2233,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2176,
											"end": 2233,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 2176,
											"end": 2233,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2176,
											"end": 2233,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 2176,
											"end": 2233,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2176,
											"end": 2233,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 2176,
											"end": 2233,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2176,
											"end": 2233,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2176,
											"end": 2233,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2176,
											"end": 2233,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2176,
											"end": 2233,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2176,
											"end": 2233,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2176,
											"end": 2233,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2176,
											"end": 2233,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2176,
											"end": 2233,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 2176,
											"end": 2233,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2244,
											"end": 2278,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2281,
											"end": 2286,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2281,
											"end": 2292,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2287,
											"end": 2291,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2281,
											"end": 2292,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2281,
											"end": 2292,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2281,
											"end": 2292,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2281,
											"end": 2292,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2281,
											"end": 2292,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2281,
											"end": 2292,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2281,
											"end": 2292,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2281,
											"end": 2292,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2281,
											"end": 2292,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2281,
											"end": 2292,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2281,
											"end": 2292,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2281,
											"end": 2292,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2281,
											"end": 2292,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2281,
											"end": 2292,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2281,
											"end": 2292,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2281,
											"end": 2309,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2281,
											"end": 2309,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2281,
											"end": 2324,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2310,
											"end": 2323,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2281,
											"end": 2324,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2281,
											"end": 2324,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2281,
											"end": 2324,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2281,
											"end": 2324,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2281,
											"end": 2324,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2281,
											"end": 2324,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2281,
											"end": 2324,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2281,
											"end": 2324,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2281,
											"end": 2324,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2281,
											"end": 2324,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2281,
											"end": 2324,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2281,
											"end": 2324,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2281,
											"end": 2324,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2281,
											"end": 2324,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2281,
											"end": 2324,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2244,
											"end": 2324,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2244,
											"end": 2324,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2360,
											"end": 2364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2334,
											"end": 2344,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2334,
											"end": 2357,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2334,
											"end": 2357,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2334,
											"end": 2357,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2334,
											"end": 2364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2334,
											"end": 2364,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2334,
											"end": 2364,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2334,
											"end": 2364,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2334,
											"end": 2364,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2334,
											"end": 2364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 2334,
											"end": 2364,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2334,
											"end": 2364,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2334,
											"end": 2364,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2334,
											"end": 2364,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2334,
											"end": 2364,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2334,
											"end": 2364,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2334,
											"end": 2364,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2334,
											"end": 2364,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2334,
											"end": 2364,
											"modifierDepth": 1,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 2334,
											"end": 2364,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2334,
											"end": 2364,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2334,
											"end": 2364,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2405,
											"end": 2415,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2405,
											"end": 2415,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2374,
											"end": 2384,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2374,
											"end": 2402,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2374,
											"end": 2402,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2374,
											"end": 2415,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2374,
											"end": 2415,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2374,
											"end": 2415,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 2374,
											"end": 2415,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2374,
											"end": 2415,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2374,
											"end": 2415,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2374,
											"end": 2415,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 2374,
											"end": 2415,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2374,
											"end": 2415,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 2374,
											"end": 2415,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2374,
											"end": 2415,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2473,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2431,
											"end": 2486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2431,
											"end": 2486,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2454,
											"end": 2458,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2431,
											"end": 2486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2431,
											"end": 2486,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2431,
											"end": 2486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "5A1925924B0857CEB006F7400134CECCCEDB6CA75ECEF791A1A109CF8890EDAE"
										},
										{
											"begin": 2475,
											"end": 2485,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2475,
											"end": 2485,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2431,
											"end": 2486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2431,
											"end": 2486,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2431,
											"end": 2486,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 2431,
											"end": 2486,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2431,
											"end": 2486,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2431,
											"end": 2486,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2431,
											"end": 2486,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 2431,
											"end": 2486,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2431,
											"end": 2486,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 2431,
											"end": 2486,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2431,
											"end": 2486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2431,
											"end": 2486,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2431,
											"end": 2486,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2431,
											"end": 2486,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2431,
											"end": 2486,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2431,
											"end": 2486,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2431,
											"end": 2486,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 2028,
											"end": 2493,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1881,
											"end": 2493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1881,
											"end": 2493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1881,
											"end": 2493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1881,
											"end": 2493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1881,
											"end": 2493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2676,
											"end": 3085,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 2676,
											"end": 3085,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2803,
											"end": 2808,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2803,
											"end": 2814,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2813,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2814,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2803,
											"end": 2814,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2814,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2803,
											"end": 2814,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2814,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2814,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2814,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2803,
											"end": 2814,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2814,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2814,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2814,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2814,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2803,
											"end": 2814,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2814,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2803,
											"end": 2814,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2827,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2803,
											"end": 2827,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2827,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2803,
											"end": 2827,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2827,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2827,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2827,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2803,
											"end": 2827,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2827,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2827,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2827,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 2803,
											"end": 2827,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2795,
											"end": 2851,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 2795,
											"end": 2851,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2795,
											"end": 2851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2795,
											"end": 2851,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2795,
											"end": 2851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2795,
											"end": 2851,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2795,
											"end": 2851,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2795,
											"end": 2851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2795,
											"end": 2851,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2795,
											"end": 2851,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 2795,
											"end": 2851,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2795,
											"end": 2851,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 2795,
											"end": 2851,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2795,
											"end": 2851,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 2795,
											"end": 2851,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2795,
											"end": 2851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2795,
											"end": 2851,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2795,
											"end": 2851,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2795,
											"end": 2851,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2795,
											"end": 2851,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2795,
											"end": 2851,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2795,
											"end": 2851,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2795,
											"end": 2851,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 2795,
											"end": 2851,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2869,
											"end": 2874,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2869,
											"end": 2880,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2875,
											"end": 2879,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2869,
											"end": 2880,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2869,
											"end": 2880,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2869,
											"end": 2880,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2869,
											"end": 2880,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2869,
											"end": 2880,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2869,
											"end": 2880,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2869,
											"end": 2880,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2869,
											"end": 2880,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2869,
											"end": 2880,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2869,
											"end": 2880,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2869,
											"end": 2880,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2869,
											"end": 2880,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2869,
											"end": 2880,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2869,
											"end": 2880,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2869,
											"end": 2880,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2869,
											"end": 2897,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2869,
											"end": 2897,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2869,
											"end": 2912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2898,
											"end": 2911,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2869,
											"end": 2912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2869,
											"end": 2912,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2869,
											"end": 2912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2869,
											"end": 2912,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2869,
											"end": 2912,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2869,
											"end": 2912,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2869,
											"end": 2912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2869,
											"end": 2912,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2869,
											"end": 2912,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2869,
											"end": 2912,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2869,
											"end": 2912,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2869,
											"end": 2912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2869,
											"end": 2912,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2869,
											"end": 2912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2869,
											"end": 2912,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2869,
											"end": 2925,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2869,
											"end": 2925,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2869,
											"end": 2925,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2869,
											"end": 2925,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2869,
											"end": 2925,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2869,
											"end": 2925,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2869,
											"end": 2925,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2869,
											"end": 2925,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2869,
											"end": 2925,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2869,
											"end": 2925,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2869,
											"end": 2925,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 2869,
											"end": 2925,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2861,
											"end": 2959,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 2861,
											"end": 2959,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2861,
											"end": 2959,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2861,
											"end": 2959,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2861,
											"end": 2959,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2861,
											"end": 2959,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2861,
											"end": 2959,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2861,
											"end": 2959,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2861,
											"end": 2959,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2861,
											"end": 2959,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 2861,
											"end": 2959,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2861,
											"end": 2959,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 2861,
											"end": 2959,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2861,
											"end": 2959,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 2861,
											"end": 2959,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2861,
											"end": 2959,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2861,
											"end": 2959,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2861,
											"end": 2959,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2861,
											"end": 2959,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2861,
											"end": 2959,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2861,
											"end": 2959,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2861,
											"end": 2959,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2861,
											"end": 2959,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 2861,
											"end": 2959,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2977,
											"end": 2982,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2977,
											"end": 2988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2983,
											"end": 2987,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2977,
											"end": 2988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2977,
											"end": 2988,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2977,
											"end": 2988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2977,
											"end": 2988,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2977,
											"end": 2988,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2977,
											"end": 2988,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2977,
											"end": 2988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2977,
											"end": 2988,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2977,
											"end": 2988,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2977,
											"end": 2988,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2977,
											"end": 2988,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2977,
											"end": 2988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2977,
											"end": 2988,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2977,
											"end": 2988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2977,
											"end": 2988,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2977,
											"end": 3005,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2977,
											"end": 3005,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2977,
											"end": 3020,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3006,
											"end": 3019,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2977,
											"end": 3020,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2977,
											"end": 3020,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2977,
											"end": 3020,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2977,
											"end": 3020,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2977,
											"end": 3020,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2977,
											"end": 3020,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2977,
											"end": 3020,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2977,
											"end": 3020,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2977,
											"end": 3020,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2977,
											"end": 3020,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2977,
											"end": 3020,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2977,
											"end": 3020,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2977,
											"end": 3020,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2977,
											"end": 3020,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2977,
											"end": 3020,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2977,
											"end": 3020,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2970,
											"end": 3020,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2970,
											"end": 3020,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2970,
											"end": 3020,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2970,
											"end": 3020,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2970,
											"end": 3020,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2970,
											"end": 3020,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2970,
											"end": 3020,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2970,
											"end": 3020,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2970,
											"end": 3020,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2970,
											"end": 3020,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 2970,
											"end": 3020,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2970,
											"end": 3020,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2970,
											"end": 3020,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2970,
											"end": 3020,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2970,
											"end": 3020,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2970,
											"end": 3020,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2970,
											"end": 3020,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2970,
											"end": 3020,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2970,
											"end": 3020,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2970,
											"end": 3020,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 2970,
											"end": 3020,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2970,
											"end": 3020,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2970,
											"end": 3020,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 2970,
											"end": 3020,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2970,
											"end": 3020,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 2970,
											"end": 3020,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2970,
											"end": 3020,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2970,
											"end": 3020,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3064,
											"end": 3077,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3078,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3035,
											"end": 3078,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3058,
											"end": 3062,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3078,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3035,
											"end": 3078,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3078,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "B0B93A7D8A8EC4A98F21206AF2D3AF128FC5BA7B8DF65991B7477766ED425622"
										},
										{
											"begin": 3035,
											"end": 3078,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3035,
											"end": 3078,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3078,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3035,
											"end": 3078,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3078,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3078,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3078,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3078,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3078,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 2676,
											"end": 3085,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2676,
											"end": 3085,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2676,
											"end": 3085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1174,
											"end": 1613,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 1174,
											"end": 1613,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1263,
											"end": 1264,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1247,
											"end": 1265,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1247,
											"end": 1265,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1247,
											"end": 1251,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1247,
											"end": 1265,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1247,
											"end": 1265,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1247,
											"end": 1265,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1239,
											"end": 1290,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 1239,
											"end": 1290,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1239,
											"end": 1290,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1239,
											"end": 1290,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1239,
											"end": 1290,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1239,
											"end": 1290,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1239,
											"end": 1290,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1239,
											"end": 1290,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1239,
											"end": 1290,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1239,
											"end": 1290,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 1239,
											"end": 1290,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1239,
											"end": 1290,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 1239,
											"end": 1290,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1239,
											"end": 1290,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 1239,
											"end": 1290,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1239,
											"end": 1290,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1239,
											"end": 1290,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1239,
											"end": 1290,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1239,
											"end": 1290,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1239,
											"end": 1290,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1239,
											"end": 1290,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1239,
											"end": 1290,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1239,
											"end": 1290,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 1239,
											"end": 1290,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1309,
											"end": 1314,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1309,
											"end": 1320,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1315,
											"end": 1319,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1309,
											"end": 1320,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1309,
											"end": 1320,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1309,
											"end": 1320,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1309,
											"end": 1320,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1309,
											"end": 1320,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1309,
											"end": 1320,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1309,
											"end": 1320,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1309,
											"end": 1320,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1309,
											"end": 1320,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1309,
											"end": 1320,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1309,
											"end": 1320,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1309,
											"end": 1320,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1309,
											"end": 1320,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1309,
											"end": 1320,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1309,
											"end": 1320,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1309,
											"end": 1333,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1309,
											"end": 1333,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1309,
											"end": 1333,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1309,
											"end": 1333,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1309,
											"end": 1333,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1309,
											"end": 1333,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1309,
											"end": 1333,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1309,
											"end": 1333,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1309,
											"end": 1333,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1309,
											"end": 1333,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1309,
											"end": 1333,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 1309,
											"end": 1333,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1308,
											"end": 1333,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1300,
											"end": 1361,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 1300,
											"end": 1361,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1300,
											"end": 1361,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1300,
											"end": 1361,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1300,
											"end": 1361,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1300,
											"end": 1361,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1300,
											"end": 1361,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1300,
											"end": 1361,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1300,
											"end": 1361,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1300,
											"end": 1361,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 1300,
											"end": 1361,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1300,
											"end": 1361,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 1300,
											"end": 1361,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1300,
											"end": 1361,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 1300,
											"end": 1361,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1300,
											"end": 1361,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1300,
											"end": 1361,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1300,
											"end": 1361,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1300,
											"end": 1361,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1300,
											"end": 1361,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1300,
											"end": 1361,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1300,
											"end": 1361,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1300,
											"end": 1361,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 1300,
											"end": 1361,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1407,
											"end": 1411,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1380,
											"end": 1385,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1391,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1386,
											"end": 1390,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1391,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1380,
											"end": 1391,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1391,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1380,
											"end": 1391,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1391,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1391,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1391,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1380,
											"end": 1391,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1391,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1391,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1391,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1391,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1380,
											"end": 1391,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1391,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1380,
											"end": 1391,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1404,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1380,
											"end": 1404,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1404,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1380,
											"end": 1411,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1380,
											"end": 1411,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1411,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1411,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1411,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1411,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 1380,
											"end": 1411,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1411,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1411,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1411,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1411,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1411,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1411,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1411,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1411,
											"modifierDepth": 1,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1411,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1411,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1411,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1452,
											"end": 1467,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 1421,
											"end": 1426,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1421,
											"end": 1432,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1431,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1421,
											"end": 1432,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1421,
											"end": 1432,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1421,
											"end": 1432,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1421,
											"end": 1432,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1421,
											"end": 1432,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1421,
											"end": 1432,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1421,
											"end": 1432,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1421,
											"end": 1432,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1421,
											"end": 1432,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1421,
											"end": 1432,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1421,
											"end": 1432,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1421,
											"end": 1432,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1421,
											"end": 1432,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1421,
											"end": 1432,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1421,
											"end": 1432,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1421,
											"end": 1449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1421,
											"end": 1449,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1421,
											"end": 1467,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1421,
											"end": 1467,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1421,
											"end": 1467,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1421,
											"end": 1467,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1504,
											"end": 1514,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1477,
											"end": 1482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1477,
											"end": 1488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1483,
											"end": 1487,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1477,
											"end": 1488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1477,
											"end": 1488,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1477,
											"end": 1488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1477,
											"end": 1488,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1477,
											"end": 1488,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1477,
											"end": 1488,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1477,
											"end": 1488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1477,
											"end": 1488,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1477,
											"end": 1488,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1477,
											"end": 1488,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1477,
											"end": 1488,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1477,
											"end": 1488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1477,
											"end": 1488,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1477,
											"end": 1488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1477,
											"end": 1488,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1477,
											"end": 1501,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1477,
											"end": 1501,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1477,
											"end": 1501,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1477,
											"end": 1514,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1477,
											"end": 1514,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1477,
											"end": 1514,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1477,
											"end": 1514,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1477,
											"end": 1514,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1477,
											"end": 1514,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1477,
											"end": 1514,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1477,
											"end": 1514,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1477,
											"end": 1514,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1477,
											"end": 1514,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1477,
											"end": 1514,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1477,
											"end": 1514,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1477,
											"end": 1514,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1477,
											"end": 1514,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1477,
											"end": 1514,
											"modifierDepth": 1,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1477,
											"end": 1514,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1477,
											"end": 1514,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1477,
											"end": 1514,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1533,
											"end": 1548,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1554,
											"end": 1558,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1533,
											"end": 1559,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1533,
											"end": 1559,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1533,
											"end": 1559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1533,
											"end": 1559,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1533,
											"end": 1559,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1533,
											"end": 1559,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1533,
											"end": 1559,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1533,
											"end": 1559,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1533,
											"end": 1559,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1533,
											"end": 1559,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1533,
											"end": 1559,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1533,
											"end": 1559,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1533,
											"end": 1559,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1533,
											"end": 1559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1533,
											"end": 1559,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1533,
											"end": 1559,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1533,
											"end": 1559,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1533,
											"end": 1559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1533,
											"end": 1559,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1533,
											"end": 1559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1533,
											"end": 1559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1533,
											"end": 1559,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1533,
											"end": 1559,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1533,
											"end": 1559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1533,
											"end": 1559,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1533,
											"end": 1559,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1533,
											"end": 1559,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1533,
											"end": 1559,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1533,
											"end": 1559,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1533,
											"end": 1559,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1533,
											"end": 1559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1533,
											"end": 1559,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1533,
											"end": 1559,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1533,
											"end": 1559,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1533,
											"end": 1559,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1533,
											"end": 1559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1533,
											"end": 1559,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1533,
											"end": 1559,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1533,
											"end": 1559,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1533,
											"end": 1559,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1533,
											"end": 1559,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1533,
											"end": 1559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1533,
											"end": 1559,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1533,
											"end": 1559,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1533,
											"end": 1559,
											"modifierDepth": 1,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1533,
											"end": 1559,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1533,
											"end": 1559,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1533,
											"end": 1559,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1595,
											"end": 1605,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1574,
											"end": 1606,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1574,
											"end": 1606,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1589,
											"end": 1593,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1574,
											"end": 1606,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1574,
											"end": 1606,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1574,
											"end": 1606,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "76EADA2B266F926D3ECB187DECE20428D68DB62016C04BEA8CCB92679F788DE"
										},
										{
											"begin": 1574,
											"end": 1606,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1574,
											"end": 1606,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1574,
											"end": 1606,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1574,
											"end": 1606,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1574,
											"end": 1606,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1574,
											"end": 1606,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1574,
											"end": 1606,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1574,
											"end": 1606,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1574,
											"end": 1606,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 1174,
											"end": 1613,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1174,
											"end": 1613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 580,
											"end": 612,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 580,
											"end": 612,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 580,
											"end": 612,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 580,
											"end": 612,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 580,
											"end": 612,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 580,
											"end": 612,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 580,
											"end": 612,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 580,
											"end": 612,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 580,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 580,
											"end": 612,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 580,
											"end": 612,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 580,
											"end": 612,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 580,
											"end": 612,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 580,
											"end": 612,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 580,
											"end": 612,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 580,
											"end": 612,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 580,
											"end": 612,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 580,
											"end": 612,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 580,
											"end": 612,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 580,
											"end": 612,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 580,
											"end": 612,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 580,
											"end": 612,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 580,
											"end": 612,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 580,
											"end": 612,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 580,
											"end": 612,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 580,
											"end": 612,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 580,
											"end": 612,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 580,
											"end": 612,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 580,
											"end": 612,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 580,
											"end": 612,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 580,
											"end": 612,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 580,
											"end": 612,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 580,
											"end": 612,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 580,
											"end": 612,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 580,
											"end": 612,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3200,
											"end": 3317,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 3200,
											"end": 3317,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3263,
											"end": 3267,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3286,
											"end": 3291,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3286,
											"end": 3297,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3292,
											"end": 3296,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3286,
											"end": 3297,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3286,
											"end": 3297,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3286,
											"end": 3297,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3286,
											"end": 3297,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3286,
											"end": 3297,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3286,
											"end": 3297,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3286,
											"end": 3297,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3286,
											"end": 3297,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3286,
											"end": 3297,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3286,
											"end": 3297,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3286,
											"end": 3297,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3286,
											"end": 3297,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3286,
											"end": 3297,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3286,
											"end": 3297,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3286,
											"end": 3297,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3286,
											"end": 3310,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3286,
											"end": 3310,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3286,
											"end": 3310,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3286,
											"end": 3310,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3286,
											"end": 3310,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3286,
											"end": 3310,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3286,
											"end": 3310,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3286,
											"end": 3310,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 3286,
											"end": 3310,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3286,
											"end": 3310,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 3286,
											"end": 3310,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 3286,
											"end": 3310,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3279,
											"end": 3310,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3279,
											"end": 3310,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3200,
											"end": 3317,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3200,
											"end": 3317,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3200,
											"end": 3317,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3200,
											"end": 3317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "128"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "174"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "175"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "176"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "175"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "176"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "174"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "177"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "178"
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "177"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "139"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "180"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "178"
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "180"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "178"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "181"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "182"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "181"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "182"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 841,
											"end": 958,
											"name": "tag",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 841,
											"end": 958,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 950,
											"end": 951,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 947,
											"end": 948,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 940,
											"end": 952,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 964,
											"end": 1081,
											"name": "tag",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 964,
											"end": 1081,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1073,
											"end": 1074,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1070,
											"end": 1071,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1063,
											"end": 1075,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1087,
											"end": 1204,
											"name": "tag",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 1087,
											"end": 1204,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1196,
											"end": 1197,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1193,
											"end": 1194,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1186,
											"end": 1198,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1227,
											"end": 1795,
											"name": "tag",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 1227,
											"end": 1795,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1300,
											"end": 1308,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1310,
											"end": 1316,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1360,
											"end": 1363,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1353,
											"end": 1357,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1345,
											"end": 1351,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1358,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1337,
											"end": 1364,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1327,
											"end": 1449,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 1327,
											"end": 1449,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1368,
											"end": 1447,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 1368,
											"end": 1447,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 1368,
											"end": 1447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1368,
											"end": 1447,
											"name": "tag",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 1368,
											"end": 1447,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1327,
											"end": 1449,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 1327,
											"end": 1449,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1481,
											"end": 1487,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1468,
											"end": 1488,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1511,
											"end": 1529,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1503,
											"end": 1509,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1500,
											"end": 1530,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1497,
											"end": 1614,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1497,
											"end": 1614,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 1497,
											"end": 1614,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1533,
											"end": 1612,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 1533,
											"end": 1612,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 1533,
											"end": 1612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1533,
											"end": 1612,
											"name": "tag",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 1533,
											"end": 1612,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1497,
											"end": 1614,
											"name": "tag",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 1497,
											"end": 1614,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1647,
											"end": 1651,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1639,
											"end": 1645,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1635,
											"end": 1652,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1623,
											"end": 1652,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1623,
											"end": 1652,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1704,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1693,
											"end": 1697,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1685,
											"end": 1691,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1681,
											"end": 1698,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1671,
											"end": 1679,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1667,
											"end": 1699,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1664,
											"end": 1705,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1661,
											"end": 1789,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1661,
											"end": 1789,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 1661,
											"end": 1789,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1708,
											"end": 1787,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 1708,
											"end": 1787,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 1708,
											"end": 1787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1708,
											"end": 1787,
											"name": "tag",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 1708,
											"end": 1787,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1661,
											"end": 1789,
											"name": "tag",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 1661,
											"end": 1789,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1227,
											"end": 1795,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1227,
											"end": 1795,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1227,
											"end": 1795,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1227,
											"end": 1795,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1227,
											"end": 1795,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1227,
											"end": 1795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1801,
											"end": 2650,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 1801,
											"end": 2650,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1905,
											"end": 1911,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1913,
											"end": 1919,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1921,
											"end": 1927,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1929,
											"end": 1935,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1978,
											"end": 1980,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1966,
											"end": 1975,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1957,
											"end": 1964,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 1953,
											"end": 1976,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1949,
											"end": 1981,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1946,
											"end": 2065,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1946,
											"end": 2065,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 1946,
											"end": 2065,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1984,
											"end": 2063,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 1984,
											"end": 2063,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 1984,
											"end": 2063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1984,
											"end": 2063,
											"name": "tag",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 1984,
											"end": 2063,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1946,
											"end": 2065,
											"name": "tag",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 1946,
											"end": 2065,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2104,
											"end": 2105,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2129,
											"end": 2182,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 2174,
											"end": 2181,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2165,
											"end": 2171,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2154,
											"end": 2163,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 2150,
											"end": 2172,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2129,
											"end": 2182,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 2129,
											"end": 2182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2129,
											"end": 2182,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 2129,
											"end": 2182,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2119,
											"end": 2182,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 2119,
											"end": 2182,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2075,
											"end": 2192,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2231,
											"end": 2233,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2257,
											"end": 2310,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 2302,
											"end": 2309,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2293,
											"end": 2299,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2282,
											"end": 2291,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 2278,
											"end": 2300,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2257,
											"end": 2310,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 2257,
											"end": 2310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2257,
											"end": 2310,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 2257,
											"end": 2310,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2247,
											"end": 2310,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2247,
											"end": 2310,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2202,
											"end": 2320,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2389,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2376,
											"end": 2385,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2372,
											"end": 2390,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2359,
											"end": 2391,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2418,
											"end": 2436,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2410,
											"end": 2416,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2407,
											"end": 2437,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2404,
											"end": 2521,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2404,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 2404,
											"end": 2521,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2440,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 2440,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 2440,
											"end": 2519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2440,
											"end": 2519,
											"name": "tag",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 2440,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2404,
											"end": 2521,
											"name": "tag",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 2404,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2553,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 2625,
											"end": 2632,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2616,
											"end": 2622,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2605,
											"end": 2614,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 2601,
											"end": 2623,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2553,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 2553,
											"end": 2633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2553,
											"end": 2633,
											"name": "tag",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 2553,
											"end": 2633,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2535,
											"end": 2633,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2535,
											"end": 2633,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2535,
											"end": 2633,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2535,
											"end": 2633,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2330,
											"end": 2643,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1801,
											"end": 2650,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1801,
											"end": 2650,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 1801,
											"end": 2650,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1801,
											"end": 2650,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1801,
											"end": 2650,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1801,
											"end": 2650,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1801,
											"end": 2650,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1801,
											"end": 2650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2656,
											"end": 2746,
											"name": "tag",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 2656,
											"end": 2746,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2690,
											"end": 2697,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2733,
											"end": 2738,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2726,
											"end": 2739,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2719,
											"end": 2740,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2708,
											"end": 2740,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2708,
											"end": 2740,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2656,
											"end": 2746,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2656,
											"end": 2746,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2656,
											"end": 2746,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2656,
											"end": 2746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2752,
											"end": 2861,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 2752,
											"end": 2861,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2833,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 2848,
											"end": 2853,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2833,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 2833,
											"end": 2854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2833,
											"end": 2854,
											"name": "tag",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 2833,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2828,
											"end": 2831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2821,
											"end": 2855,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2752,
											"end": 2861,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2752,
											"end": 2861,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2752,
											"end": 2861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2867,
											"end": 3077,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2867,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2954,
											"end": 2958,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2992,
											"end": 2994,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2981,
											"end": 2990,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2977,
											"end": 2995,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2969,
											"end": 2995,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2969,
											"end": 2995,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3005,
											"end": 3070,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 3067,
											"end": 3068,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3056,
											"end": 3065,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3052,
											"end": 3069,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3043,
											"end": 3049,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3005,
											"end": 3070,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 3005,
											"end": 3070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3005,
											"end": 3070,
											"name": "tag",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 3005,
											"end": 3070,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2867,
											"end": 3077,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2867,
											"end": 3077,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2867,
											"end": 3077,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2867,
											"end": 3077,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2867,
											"end": 3077,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3083,
											"end": 3557,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 3083,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3151,
											"end": 3157,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3159,
											"end": 3165,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3208,
											"end": 3210,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3196,
											"end": 3205,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3187,
											"end": 3194,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3183,
											"end": 3206,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3179,
											"end": 3211,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3176,
											"end": 3295,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3176,
											"end": 3295,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 3176,
											"end": 3295,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3214,
											"end": 3293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 3214,
											"end": 3293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 3214,
											"end": 3293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3214,
											"end": 3293,
											"name": "tag",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 3214,
											"end": 3293,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3176,
											"end": 3295,
											"name": "tag",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 3176,
											"end": 3295,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3334,
											"end": 3335,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3359,
											"end": 3412,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 3404,
											"end": 3411,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3395,
											"end": 3401,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3384,
											"end": 3393,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3380,
											"end": 3402,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3359,
											"end": 3412,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 3359,
											"end": 3412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3359,
											"end": 3412,
											"name": "tag",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 3359,
											"end": 3412,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3349,
											"end": 3412,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3349,
											"end": 3412,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3305,
											"end": 3422,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3461,
											"end": 3463,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3487,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 3532,
											"end": 3539,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3523,
											"end": 3529,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3512,
											"end": 3521,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3508,
											"end": 3530,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3487,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 3487,
											"end": 3540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3487,
											"end": 3540,
											"name": "tag",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 3487,
											"end": 3540,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3432,
											"end": 3550,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3083,
											"end": 3557,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3083,
											"end": 3557,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3083,
											"end": 3557,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3083,
											"end": 3557,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3083,
											"end": 3557,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3083,
											"end": 3557,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3677,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 3563,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3630,
											"end": 3636,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3669,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3658,
											"end": 3670,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3648,
											"end": 3670,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3648,
											"end": 3670,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3677,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3677,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3677,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3683,
											"end": 3867,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 3683,
											"end": 3867,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3782,
											"end": 3793,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3816,
											"end": 3822,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3811,
											"end": 3814,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3804,
											"end": 3823,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3856,
											"end": 3860,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3851,
											"end": 3854,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3847,
											"end": 3861,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3832,
											"end": 3861,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3832,
											"end": 3861,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3683,
											"end": 3867,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3683,
											"end": 3867,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3683,
											"end": 3867,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3683,
											"end": 3867,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3683,
											"end": 3867,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3873,
											"end": 4005,
											"name": "tag",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 3873,
											"end": 4005,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3940,
											"end": 3944,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3963,
											"end": 3966,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3955,
											"end": 3966,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3955,
											"end": 3966,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3993,
											"end": 3997,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3988,
											"end": 3991,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3984,
											"end": 3998,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3976,
											"end": 3998,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3976,
											"end": 3998,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3873,
											"end": 4005,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3873,
											"end": 4005,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3873,
											"end": 4005,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3873,
											"end": 4005,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4011,
											"end": 4088,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 4011,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4048,
											"end": 4055,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4077,
											"end": 4082,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4066,
											"end": 4082,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4066,
											"end": 4082,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4011,
											"end": 4088,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4011,
											"end": 4088,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4011,
											"end": 4088,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4011,
											"end": 4088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4094,
											"end": 4202,
											"name": "tag",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 4094,
											"end": 4202,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4171,
											"end": 4195,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 4189,
											"end": 4194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4171,
											"end": 4195,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 4171,
											"end": 4195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4171,
											"end": 4195,
											"name": "tag",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 4171,
											"end": 4195,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4166,
											"end": 4169,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4159,
											"end": 4196,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4094,
											"end": 4202,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4094,
											"end": 4202,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4094,
											"end": 4202,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4208,
											"end": 4387,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 4208,
											"end": 4387,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4277,
											"end": 4287,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4298,
											"end": 4344,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 4340,
											"end": 4343,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4332,
											"end": 4338,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4298,
											"end": 4344,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 4298,
											"end": 4344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4298,
											"end": 4344,
											"name": "tag",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 4298,
											"end": 4344,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4376,
											"end": 4380,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4371,
											"end": 4374,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4367,
											"end": 4381,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4353,
											"end": 4381,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4353,
											"end": 4381,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4208,
											"end": 4387,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4208,
											"end": 4387,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4208,
											"end": 4387,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4208,
											"end": 4387,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4208,
											"end": 4387,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4393,
											"end": 4506,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 4393,
											"end": 4506,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4463,
											"end": 4467,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4495,
											"end": 4499,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4490,
											"end": 4493,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4486,
											"end": 4500,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4478,
											"end": 4500,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4478,
											"end": 4500,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4393,
											"end": 4506,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4393,
											"end": 4506,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4393,
											"end": 4506,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4393,
											"end": 4506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4542,
											"end": 5274,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 4542,
											"end": 5274,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4661,
											"end": 4664,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4690,
											"end": 4744,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 4738,
											"end": 4743,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4690,
											"end": 4744,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 4690,
											"end": 4744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4690,
											"end": 4744,
											"name": "tag",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 4690,
											"end": 4744,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4760,
											"end": 4846,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 4839,
											"end": 4845,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4834,
											"end": 4837,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4760,
											"end": 4846,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 4760,
											"end": 4846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4760,
											"end": 4846,
											"name": "tag",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 4760,
											"end": 4846,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4753,
											"end": 4846,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4753,
											"end": 4846,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4926,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 4920,
											"end": 4925,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4926,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 4870,
											"end": 4926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4926,
											"name": "tag",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 4870,
											"end": 4926,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4949,
											"end": 4956,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4980,
											"end": 4981,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4965,
											"end": 5249,
											"name": "tag",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 4965,
											"end": 5249,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4990,
											"end": 4996,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4987,
											"end": 4988,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4984,
											"end": 4997,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4965,
											"end": 5249,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4965,
											"end": 5249,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 4965,
											"end": 5249,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5066,
											"end": 5072,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5060,
											"end": 5073,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5093,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 5152,
											"end": 5155,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 5137,
											"end": 5150,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5093,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 5093,
											"end": 5156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5093,
											"end": 5156,
											"name": "tag",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 5093,
											"end": 5156,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5086,
											"end": 5156,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 5086,
											"end": 5156,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5179,
											"end": 5239,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 5232,
											"end": 5238,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5179,
											"end": 5239,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 5179,
											"end": 5239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5179,
											"end": 5239,
											"name": "tag",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 5179,
											"end": 5239,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5169,
											"end": 5239,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5169,
											"end": 5239,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5025,
											"end": 5249,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5012,
											"end": 5013,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5009,
											"end": 5010,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5005,
											"end": 5014,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5000,
											"end": 5014,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5000,
											"end": 5014,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4965,
											"end": 5249,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 4965,
											"end": 5249,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4965,
											"end": 5249,
											"name": "tag",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 4965,
											"end": 5249,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4969,
											"end": 4983,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5265,
											"end": 5268,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5258,
											"end": 5268,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 5258,
											"end": 5268,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 5274,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 5274,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 5274,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4542,
											"end": 5274,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4542,
											"end": 5274,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4542,
											"end": 5274,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4542,
											"end": 5274,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4542,
											"end": 5274,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5280,
											"end": 5653,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 5280,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5423,
											"end": 5427,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5461,
											"end": 5463,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5450,
											"end": 5459,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5446,
											"end": 5464,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5438,
											"end": 5464,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5438,
											"end": 5464,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5510,
											"end": 5519,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5504,
											"end": 5508,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5500,
											"end": 5520,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5496,
											"end": 5497,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5485,
											"end": 5494,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5481,
											"end": 5498,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5474,
											"end": 5521,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5538,
											"end": 5646,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 5641,
											"end": 5645,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5632,
											"end": 5638,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5538,
											"end": 5646,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 5538,
											"end": 5646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5538,
											"end": 5646,
											"name": "tag",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 5538,
											"end": 5646,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5530,
											"end": 5646,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5530,
											"end": 5646,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5280,
											"end": 5653,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5280,
											"end": 5653,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5280,
											"end": 5653,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5280,
											"end": 5653,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5280,
											"end": 5653,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5659,
											"end": 5988,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 5659,
											"end": 5988,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5718,
											"end": 5724,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5767,
											"end": 5769,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5755,
											"end": 5764,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5746,
											"end": 5753,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5742,
											"end": 5765,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5738,
											"end": 5770,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5735,
											"end": 5854,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5735,
											"end": 5854,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 5735,
											"end": 5854,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5773,
											"end": 5852,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 5773,
											"end": 5852,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 5773,
											"end": 5852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5773,
											"end": 5852,
											"name": "tag",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 5773,
											"end": 5852,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5735,
											"end": 5854,
											"name": "tag",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 5735,
											"end": 5854,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5893,
											"end": 5894,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5918,
											"end": 5971,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 5963,
											"end": 5970,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5954,
											"end": 5960,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5943,
											"end": 5952,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5939,
											"end": 5961,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5918,
											"end": 5971,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 5918,
											"end": 5971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5918,
											"end": 5971,
											"name": "tag",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 5918,
											"end": 5971,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5908,
											"end": 5971,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5908,
											"end": 5971,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5864,
											"end": 5981,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5659,
											"end": 5988,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5659,
											"end": 5988,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5659,
											"end": 5988,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5659,
											"end": 5988,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5659,
											"end": 5988,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5994,
											"end": 6108,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 5994,
											"end": 6108,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6061,
											"end": 6067,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6095,
											"end": 6100,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6089,
											"end": 6101,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6079,
											"end": 6101,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6079,
											"end": 6101,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5994,
											"end": 6108,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5994,
											"end": 6108,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5994,
											"end": 6108,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5994,
											"end": 6108,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6114,
											"end": 6298,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 6114,
											"end": 6298,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6213,
											"end": 6224,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6247,
											"end": 6253,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6242,
											"end": 6245,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6235,
											"end": 6254,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6287,
											"end": 6291,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6282,
											"end": 6285,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6278,
											"end": 6292,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6263,
											"end": 6292,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6263,
											"end": 6292,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6114,
											"end": 6298,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6114,
											"end": 6298,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6114,
											"end": 6298,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6114,
											"end": 6298,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6114,
											"end": 6298,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6304,
											"end": 6436,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 6304,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6371,
											"end": 6375,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6394,
											"end": 6397,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6386,
											"end": 6397,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6386,
											"end": 6397,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6424,
											"end": 6428,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6419,
											"end": 6422,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6415,
											"end": 6429,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6429,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6407,
											"end": 6429,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6304,
											"end": 6436,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6304,
											"end": 6436,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6304,
											"end": 6436,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6304,
											"end": 6436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6442,
											"end": 6550,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 6442,
											"end": 6550,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6519,
											"end": 6543,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 6537,
											"end": 6542,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6519,
											"end": 6543,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 6519,
											"end": 6543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6519,
											"end": 6543,
											"name": "tag",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 6519,
											"end": 6543,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6514,
											"end": 6517,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6507,
											"end": 6544,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6442,
											"end": 6550,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6442,
											"end": 6550,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6442,
											"end": 6550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6556,
											"end": 6735,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 6556,
											"end": 6735,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6625,
											"end": 6635,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6646,
											"end": 6692,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 6688,
											"end": 6691,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6680,
											"end": 6686,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6646,
											"end": 6692,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 6646,
											"end": 6692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6646,
											"end": 6692,
											"name": "tag",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 6646,
											"end": 6692,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6724,
											"end": 6728,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6719,
											"end": 6722,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6715,
											"end": 6729,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6701,
											"end": 6729,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6701,
											"end": 6729,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6556,
											"end": 6735,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6556,
											"end": 6735,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6556,
											"end": 6735,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6556,
											"end": 6735,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6556,
											"end": 6735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6741,
											"end": 6854,
											"name": "tag",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 6741,
											"end": 6854,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6811,
											"end": 6815,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6843,
											"end": 6847,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6838,
											"end": 6841,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6834,
											"end": 6848,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6826,
											"end": 6848,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6826,
											"end": 6848,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6741,
											"end": 6854,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6741,
											"end": 6854,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6741,
											"end": 6854,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6741,
											"end": 6854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6890,
											"end": 7622,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 6890,
											"end": 7622,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7009,
											"end": 7012,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7038,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 7086,
											"end": 7091,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7038,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 7038,
											"end": 7092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7038,
											"end": 7092,
											"name": "tag",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 7038,
											"end": 7092,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7108,
											"end": 7194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 7187,
											"end": 7193,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7182,
											"end": 7185,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7108,
											"end": 7194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 7108,
											"end": 7194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7108,
											"end": 7194,
											"name": "tag",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 7108,
											"end": 7194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7101,
											"end": 7194,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7101,
											"end": 7194,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7218,
											"end": 7274,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 7268,
											"end": 7273,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7218,
											"end": 7274,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 7218,
											"end": 7274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7218,
											"end": 7274,
											"name": "tag",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 7218,
											"end": 7274,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7297,
											"end": 7304,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7328,
											"end": 7329,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7313,
											"end": 7597,
											"name": "tag",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 7313,
											"end": 7597,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7338,
											"end": 7344,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7335,
											"end": 7336,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7332,
											"end": 7345,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 7313,
											"end": 7597,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7313,
											"end": 7597,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 7313,
											"end": 7597,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7414,
											"end": 7420,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7408,
											"end": 7421,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7441,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 7500,
											"end": 7503,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 7485,
											"end": 7498,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7441,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 7441,
											"end": 7504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7441,
											"end": 7504,
											"name": "tag",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 7441,
											"end": 7504,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7434,
											"end": 7504,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 7434,
											"end": 7504,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7527,
											"end": 7587,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 7580,
											"end": 7586,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7527,
											"end": 7587,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 7527,
											"end": 7587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7527,
											"end": 7587,
											"name": "tag",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 7527,
											"end": 7587,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7517,
											"end": 7587,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7517,
											"end": 7587,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7373,
											"end": 7597,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7360,
											"end": 7361,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7357,
											"end": 7358,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7353,
											"end": 7362,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7348,
											"end": 7362,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7348,
											"end": 7362,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7313,
											"end": 7597,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 7313,
											"end": 7597,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7313,
											"end": 7597,
											"name": "tag",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 7313,
											"end": 7597,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7317,
											"end": 7331,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7613,
											"end": 7616,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7606,
											"end": 7616,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7606,
											"end": 7616,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7014,
											"end": 7622,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7014,
											"end": 7622,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7014,
											"end": 7622,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6890,
											"end": 7622,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6890,
											"end": 7622,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6890,
											"end": 7622,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6890,
											"end": 7622,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6890,
											"end": 7622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7628,
											"end": 8001,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 7628,
											"end": 8001,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7771,
											"end": 7775,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7809,
											"end": 7811,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7798,
											"end": 7807,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7794,
											"end": 7812,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7786,
											"end": 7812,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7786,
											"end": 7812,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7858,
											"end": 7867,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7852,
											"end": 7856,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7848,
											"end": 7868,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7844,
											"end": 7845,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7833,
											"end": 7842,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7829,
											"end": 7846,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7822,
											"end": 7869,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7886,
											"end": 7994,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 7989,
											"end": 7993,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7980,
											"end": 7986,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7886,
											"end": 7994,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 7886,
											"end": 7994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7886,
											"end": 7994,
											"name": "tag",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 7886,
											"end": 7994,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7878,
											"end": 7994,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7878,
											"end": 7994,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7628,
											"end": 8001,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7628,
											"end": 8001,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7628,
											"end": 8001,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7628,
											"end": 8001,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7628,
											"end": 8001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8007,
											"end": 8125,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 8007,
											"end": 8125,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8094,
											"end": 8118,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 8112,
											"end": 8117,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8094,
											"end": 8118,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 8094,
											"end": 8118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8094,
											"end": 8118,
											"name": "tag",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 8094,
											"end": 8118,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8089,
											"end": 8092,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8082,
											"end": 8119,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8007,
											"end": 8125,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8007,
											"end": 8125,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8007,
											"end": 8125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8131,
											"end": 8353,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 8131,
											"end": 8353,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8224,
											"end": 8228,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8262,
											"end": 8264,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8251,
											"end": 8260,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8247,
											"end": 8265,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8239,
											"end": 8265,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8239,
											"end": 8265,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8275,
											"end": 8346,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 8343,
											"end": 8344,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8332,
											"end": 8341,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8328,
											"end": 8345,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8319,
											"end": 8325,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8275,
											"end": 8346,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 8275,
											"end": 8346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8275,
											"end": 8346,
											"name": "tag",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 8275,
											"end": 8346,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8131,
											"end": 8353,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8131,
											"end": 8353,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8131,
											"end": 8353,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8131,
											"end": 8353,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8131,
											"end": 8353,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8359,
											"end": 8436,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 8359,
											"end": 8436,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8396,
											"end": 8403,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8425,
											"end": 8430,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8414,
											"end": 8430,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8414,
											"end": 8430,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8359,
											"end": 8436,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8359,
											"end": 8436,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8359,
											"end": 8436,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8359,
											"end": 8436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8442,
											"end": 8564,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 8442,
											"end": 8564,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8515,
											"end": 8539,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 8533,
											"end": 8538,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8515,
											"end": 8539,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 8515,
											"end": 8539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8515,
											"end": 8539,
											"name": "tag",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 8515,
											"end": 8539,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8508,
											"end": 8513,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8505,
											"end": 8540,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 8495,
											"end": 8558,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 8495,
											"end": 8558,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8554,
											"end": 8555,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8551,
											"end": 8552,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8544,
											"end": 8556,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8495,
											"end": 8558,
											"name": "tag",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 8495,
											"end": 8558,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8442,
											"end": 8564,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8442,
											"end": 8564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8570,
											"end": 8709,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 8570,
											"end": 8709,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8616,
											"end": 8621,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8654,
											"end": 8660,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8641,
											"end": 8661,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 8632,
											"end": 8661,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8632,
											"end": 8661,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8670,
											"end": 8703,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 8697,
											"end": 8702,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8670,
											"end": 8703,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 8670,
											"end": 8703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8670,
											"end": 8703,
											"name": "tag",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 8670,
											"end": 8703,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8570,
											"end": 8709,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8570,
											"end": 8709,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8570,
											"end": 8709,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8570,
											"end": 8709,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8570,
											"end": 8709,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8715,
											"end": 9044,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 8715,
											"end": 9044,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8774,
											"end": 8780,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8823,
											"end": 8825,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8811,
											"end": 8820,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8802,
											"end": 8809,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8798,
											"end": 8821,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8794,
											"end": 8826,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 8791,
											"end": 8910,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8791,
											"end": 8910,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 8791,
											"end": 8910,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8829,
											"end": 8908,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 8829,
											"end": 8908,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 8829,
											"end": 8908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8829,
											"end": 8908,
											"name": "tag",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 8829,
											"end": 8908,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8791,
											"end": 8910,
											"name": "tag",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 8791,
											"end": 8910,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8949,
											"end": 8950,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8974,
											"end": 9027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 9019,
											"end": 9026,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9010,
											"end": 9016,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8999,
											"end": 9008,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8995,
											"end": 9017,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8974,
											"end": 9027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 8974,
											"end": 9027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8974,
											"end": 9027,
											"name": "tag",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 8974,
											"end": 9027,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8964,
											"end": 9027,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8964,
											"end": 9027,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8920,
											"end": 9037,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8715,
											"end": 9044,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8715,
											"end": 9044,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8715,
											"end": 9044,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8715,
											"end": 9044,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8715,
											"end": 9044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9050,
											"end": 9230,
											"name": "tag",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 9050,
											"end": 9230,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9098,
											"end": 9175,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9095,
											"end": 9096,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9088,
											"end": 9176,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9195,
											"end": 9199,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 9192,
											"end": 9193,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9185,
											"end": 9200,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9219,
											"end": 9223,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9216,
											"end": 9217,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9209,
											"end": 9224,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9236,
											"end": 9405,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 9236,
											"end": 9405,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9320,
											"end": 9331,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9354,
											"end": 9360,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9349,
											"end": 9352,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9342,
											"end": 9361,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9394,
											"end": 9398,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9389,
											"end": 9392,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9385,
											"end": 9399,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9370,
											"end": 9399,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9370,
											"end": 9399,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9236,
											"end": 9405,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9236,
											"end": 9405,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9236,
											"end": 9405,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9236,
											"end": 9405,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9236,
											"end": 9405,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9411,
											"end": 9580,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 9411,
											"end": 9580,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9551,
											"end": 9572,
											"name": "PUSH",
											"source": 7,
											"value": "47616D65206E6F74207265676973746572656400000000000000000000000000"
										},
										{
											"begin": 9547,
											"end": 9548,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9539,
											"end": 9545,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9535,
											"end": 9549,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9528,
											"end": 9573,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9411,
											"end": 9580,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9411,
											"end": 9580,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9586,
											"end": 9952,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 9586,
											"end": 9952,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9728,
											"end": 9731,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9749,
											"end": 9816,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 9813,
											"end": 9815,
											"name": "PUSH",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 9808,
											"end": 9811,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9749,
											"end": 9816,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 9749,
											"end": 9816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9749,
											"end": 9816,
											"name": "tag",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 9749,
											"end": 9816,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9742,
											"end": 9816,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9742,
											"end": 9816,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9825,
											"end": 9918,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 9914,
											"end": 9917,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9825,
											"end": 9918,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 9825,
											"end": 9918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9825,
											"end": 9918,
											"name": "tag",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 9825,
											"end": 9918,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9943,
											"end": 9945,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9938,
											"end": 9941,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9934,
											"end": 9946,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9927,
											"end": 9946,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9927,
											"end": 9946,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9586,
											"end": 9952,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9586,
											"end": 9952,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9586,
											"end": 9952,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9586,
											"end": 9952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9958,
											"end": 10377,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 9958,
											"end": 10377,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10124,
											"end": 10128,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10162,
											"end": 10164,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10151,
											"end": 10160,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10147,
											"end": 10165,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10139,
											"end": 10165,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10139,
											"end": 10165,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10211,
											"end": 10220,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10205,
											"end": 10209,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10201,
											"end": 10221,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10197,
											"end": 10198,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10186,
											"end": 10195,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10182,
											"end": 10199,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10175,
											"end": 10222,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10239,
											"end": 10370,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 10365,
											"end": 10369,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10239,
											"end": 10370,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 10239,
											"end": 10370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10239,
											"end": 10370,
											"name": "tag",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 10239,
											"end": 10370,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10231,
											"end": 10370,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10231,
											"end": 10370,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9958,
											"end": 10377,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9958,
											"end": 10377,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9958,
											"end": 10377,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9958,
											"end": 10377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10383,
											"end": 10562,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 10383,
											"end": 10562,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10523,
											"end": 10554,
											"name": "PUSH",
											"source": 7,
											"value": "4173736574206E6F74207265676973746572656420666F722067616D65000000"
										},
										{
											"begin": 10519,
											"end": 10520,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10511,
											"end": 10517,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10507,
											"end": 10521,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10500,
											"end": 10555,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10383,
											"end": 10562,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10383,
											"end": 10562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10568,
											"end": 10934,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 10568,
											"end": 10934,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10710,
											"end": 10713,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10731,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 10795,
											"end": 10797,
											"name": "PUSH",
											"source": 7,
											"value": "1D"
										},
										{
											"begin": 10790,
											"end": 10793,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10731,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 10731,
											"end": 10798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10731,
											"end": 10798,
											"name": "tag",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 10731,
											"end": 10798,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10724,
											"end": 10798,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10724,
											"end": 10798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10807,
											"end": 10900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 10896,
											"end": 10899,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10807,
											"end": 10900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 10807,
											"end": 10900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10807,
											"end": 10900,
											"name": "tag",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 10807,
											"end": 10900,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10925,
											"end": 10927,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10920,
											"end": 10923,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10916,
											"end": 10928,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10909,
											"end": 10928,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10909,
											"end": 10928,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10568,
											"end": 10934,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10568,
											"end": 10934,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10568,
											"end": 10934,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10568,
											"end": 10934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10940,
											"end": 11359,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 10940,
											"end": 11359,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11106,
											"end": 11110,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11144,
											"end": 11146,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11133,
											"end": 11142,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11129,
											"end": 11147,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11121,
											"end": 11147,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11121,
											"end": 11147,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11193,
											"end": 11202,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11187,
											"end": 11191,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11183,
											"end": 11203,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11179,
											"end": 11180,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11168,
											"end": 11177,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11164,
											"end": 11181,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11157,
											"end": 11204,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11221,
											"end": 11352,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 11347,
											"end": 11351,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11221,
											"end": 11352,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 11221,
											"end": 11352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11221,
											"end": 11352,
											"name": "tag",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 11221,
											"end": 11352,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11213,
											"end": 11352,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11213,
											"end": 11352,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10940,
											"end": 11359,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10940,
											"end": 11359,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10940,
											"end": 11359,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10940,
											"end": 11359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11365,
											"end": 11545,
											"name": "tag",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 11365,
											"end": 11545,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11413,
											"end": 11490,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11410,
											"end": 11411,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11403,
											"end": 11491,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11510,
											"end": 11514,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 11507,
											"end": 11508,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 11500,
											"end": 11515,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11534,
											"end": 11538,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 11531,
											"end": 11532,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11524,
											"end": 11539,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 11551,
											"end": 11784,
											"name": "tag",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 11551,
											"end": 11784,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11590,
											"end": 11593,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11613,
											"end": 11637,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 11631,
											"end": 11636,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11613,
											"end": 11637,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 11613,
											"end": 11637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11613,
											"end": 11637,
											"name": "tag",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 11613,
											"end": 11637,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11604,
											"end": 11637,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11604,
											"end": 11637,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11659,
											"end": 11725,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11652,
											"end": 11657,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11649,
											"end": 11726,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11646,
											"end": 11749,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 11646,
											"end": 11749,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11729,
											"end": 11747,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 11729,
											"end": 11747,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 11729,
											"end": 11747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11729,
											"end": 11747,
											"name": "tag",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 11729,
											"end": 11747,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11646,
											"end": 11749,
											"name": "tag",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 11646,
											"end": 11749,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11776,
											"end": 11777,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 11769,
											"end": 11774,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11765,
											"end": 11778,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11758,
											"end": 11778,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11758,
											"end": 11778,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11551,
											"end": 11784,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11551,
											"end": 11784,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11551,
											"end": 11784,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11551,
											"end": 11784,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11790,
											"end": 11970,
											"name": "tag",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 11790,
											"end": 11970,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11838,
											"end": 11915,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11835,
											"end": 11836,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11828,
											"end": 11916,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11935,
											"end": 11939,
											"name": "PUSH",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 11932,
											"end": 11933,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 11925,
											"end": 11940,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11959,
											"end": 11963,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 11956,
											"end": 11957,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11949,
											"end": 11964,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 11976,
											"end": 12148,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 11976,
											"end": 12148,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12116,
											"end": 12140,
											"name": "PUSH",
											"source": 7,
											"value": "496E76616C696420617373657420636F6E747261637400000000000000000000"
										},
										{
											"begin": 12112,
											"end": 12113,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12104,
											"end": 12110,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12100,
											"end": 12114,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12093,
											"end": 12141,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11976,
											"end": 12148,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11976,
											"end": 12148,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12154,
											"end": 12520,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 12154,
											"end": 12520,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12296,
											"end": 12299,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12317,
											"end": 12384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 12381,
											"end": 12383,
											"name": "PUSH",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 12376,
											"end": 12379,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12317,
											"end": 12384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 12317,
											"end": 12384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12317,
											"end": 12384,
											"name": "tag",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 12317,
											"end": 12384,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12310,
											"end": 12384,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12310,
											"end": 12384,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12393,
											"end": 12486,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 12482,
											"end": 12485,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12393,
											"end": 12486,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 12393,
											"end": 12486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12393,
											"end": 12486,
											"name": "tag",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 12393,
											"end": 12486,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12511,
											"end": 12513,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12506,
											"end": 12509,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12502,
											"end": 12514,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12495,
											"end": 12514,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12495,
											"end": 12514,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12154,
											"end": 12520,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12154,
											"end": 12520,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12154,
											"end": 12520,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12154,
											"end": 12520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12526,
											"end": 12945,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 12526,
											"end": 12945,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12692,
											"end": 12696,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12730,
											"end": 12732,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12719,
											"end": 12728,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12715,
											"end": 12733,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12707,
											"end": 12733,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12707,
											"end": 12733,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12779,
											"end": 12788,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12773,
											"end": 12777,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12769,
											"end": 12789,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 12765,
											"end": 12766,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12754,
											"end": 12763,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12750,
											"end": 12767,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12743,
											"end": 12790,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12807,
											"end": 12938,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 12933,
											"end": 12937,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12807,
											"end": 12938,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 12807,
											"end": 12938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12807,
											"end": 12938,
											"name": "tag",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 12807,
											"end": 12938,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12799,
											"end": 12938,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12799,
											"end": 12938,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12526,
											"end": 12945,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12526,
											"end": 12945,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12526,
											"end": 12945,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12526,
											"end": 12945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12951,
											"end": 13124,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 12951,
											"end": 13124,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13091,
											"end": 13116,
											"name": "PUSH",
											"source": 7,
											"value": "4E6F206174747269627574657320737065636966696564000000000000000000"
										},
										{
											"begin": 13087,
											"end": 13088,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13079,
											"end": 13085,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13075,
											"end": 13089,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13068,
											"end": 13117,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12951,
											"end": 13124,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12951,
											"end": 13124,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13130,
											"end": 13496,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 13130,
											"end": 13496,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13272,
											"end": 13275,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13293,
											"end": 13360,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 13357,
											"end": 13359,
											"name": "PUSH",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 13352,
											"end": 13355,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13293,
											"end": 13360,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 13293,
											"end": 13360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13293,
											"end": 13360,
											"name": "tag",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 13293,
											"end": 13360,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13286,
											"end": 13360,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13286,
											"end": 13360,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13369,
											"end": 13462,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 13458,
											"end": 13461,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13369,
											"end": 13462,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 13369,
											"end": 13462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13369,
											"end": 13462,
											"name": "tag",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 13369,
											"end": 13462,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13487,
											"end": 13489,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13482,
											"end": 13485,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13478,
											"end": 13490,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13471,
											"end": 13490,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13471,
											"end": 13490,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13130,
											"end": 13496,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13130,
											"end": 13496,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13130,
											"end": 13496,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13130,
											"end": 13496,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13502,
											"end": 13921,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 13502,
											"end": 13921,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13668,
											"end": 13672,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13706,
											"end": 13708,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13695,
											"end": 13704,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13691,
											"end": 13709,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13683,
											"end": 13709,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13683,
											"end": 13709,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13755,
											"end": 13764,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13749,
											"end": 13753,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13745,
											"end": 13765,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 13741,
											"end": 13742,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13730,
											"end": 13739,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13726,
											"end": 13743,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13719,
											"end": 13766,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13783,
											"end": 13914,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 13909,
											"end": 13913,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13783,
											"end": 13914,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 13783,
											"end": 13914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13783,
											"end": 13914,
											"name": "tag",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 13783,
											"end": 13914,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13775,
											"end": 13914,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13775,
											"end": 13914,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13502,
											"end": 13921,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13502,
											"end": 13921,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13502,
											"end": 13921,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13502,
											"end": 13921,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13927,
											"end": 14044,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 13927,
											"end": 14044,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14036,
											"end": 14037,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14033,
											"end": 14034,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 14026,
											"end": 14038,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 14050,
											"end": 14149,
											"name": "tag",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 14050,
											"end": 14149,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14135,
											"end": 14141,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14130,
											"end": 14133,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14125,
											"end": 14128,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14112,
											"end": 14142,
											"name": "CALLDATACOPY",
											"source": 7
										},
										{
											"begin": 14050,
											"end": 14149,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14050,
											"end": 14149,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14050,
											"end": 14149,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14050,
											"end": 14149,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14185,
											"end": 14722,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 14185,
											"end": 14722,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14313,
											"end": 14316,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14334,
											"end": 14420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 14413,
											"end": 14419,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14408,
											"end": 14411,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 14334,
											"end": 14420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 14334,
											"end": 14420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14334,
											"end": 14420,
											"name": "tag",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 14334,
											"end": 14420,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14327,
											"end": 14420,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 14327,
											"end": 14420,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14444,
											"end": 14510,
											"name": "PUSH",
											"source": 7,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14436,
											"end": 14442,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14433,
											"end": 14511,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 14430,
											"end": 14595,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 14430,
											"end": 14595,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 14430,
											"end": 14595,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 14514,
											"end": 14593,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 14514,
											"end": 14593,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 14514,
											"end": 14593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14514,
											"end": 14593,
											"name": "tag",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 14514,
											"end": 14593,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14430,
											"end": 14595,
											"name": "tag",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 14430,
											"end": 14595,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14626,
											"end": 14630,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14618,
											"end": 14624,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14614,
											"end": 14631,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 14604,
											"end": 14631,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14604,
											"end": 14631,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14641,
											"end": 14684,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 14677,
											"end": 14683,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14672,
											"end": 14675,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 14665,
											"end": 14670,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 14641,
											"end": 14684,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 14641,
											"end": 14684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14641,
											"end": 14684,
											"name": "tag",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 14641,
											"end": 14684,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14709,
											"end": 14715,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14704,
											"end": 14707,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 14700,
											"end": 14716,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14693,
											"end": 14716,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14693,
											"end": 14716,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14185,
											"end": 14722,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 14185,
											"end": 14722,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14185,
											"end": 14722,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14185,
											"end": 14722,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14185,
											"end": 14722,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14185,
											"end": 14722,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14728,
											"end": 15121,
											"name": "tag",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 14728,
											"end": 15121,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14881,
											"end": 14885,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14919,
											"end": 14921,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14908,
											"end": 14917,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14904,
											"end": 14922,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14896,
											"end": 14922,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14896,
											"end": 14922,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14968,
											"end": 14977,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14962,
											"end": 14966,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14958,
											"end": 14978,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 14954,
											"end": 14955,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14943,
											"end": 14952,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14939,
											"end": 14956,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14932,
											"end": 14979,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14996,
											"end": 15114,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 15109,
											"end": 15113,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15100,
											"end": 15106,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 15092,
											"end": 15098,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 14996,
											"end": 15114,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 14996,
											"end": 15114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14996,
											"end": 15114,
											"name": "tag",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 14996,
											"end": 15114,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14988,
											"end": 15114,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14988,
											"end": 15114,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14728,
											"end": 15121,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 14728,
											"end": 15121,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14728,
											"end": 15121,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14728,
											"end": 15121,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14728,
											"end": 15121,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14728,
											"end": 15121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15127,
											"end": 15297,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 15127,
											"end": 15297,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15267,
											"end": 15289,
											"name": "PUSH",
											"source": 7,
											"value": "496E76616C69642067616D652061646472657373000000000000000000000000"
										},
										{
											"begin": 15263,
											"end": 15264,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15255,
											"end": 15261,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15251,
											"end": 15265,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15244,
											"end": 15290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15127,
											"end": 15297,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15127,
											"end": 15297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15303,
											"end": 15669,
											"name": "tag",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 15303,
											"end": 15669,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15445,
											"end": 15448,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15466,
											"end": 15533,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 15530,
											"end": 15532,
											"name": "PUSH",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 15525,
											"end": 15528,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15466,
											"end": 15533,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 15466,
											"end": 15533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15466,
											"end": 15533,
											"name": "tag",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 15466,
											"end": 15533,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15459,
											"end": 15533,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15459,
											"end": 15533,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15542,
											"end": 15635,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 15631,
											"end": 15634,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15542,
											"end": 15635,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 15542,
											"end": 15635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15542,
											"end": 15635,
											"name": "tag",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 15542,
											"end": 15635,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15660,
											"end": 15662,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 15655,
											"end": 15658,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15651,
											"end": 15663,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15644,
											"end": 15663,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15644,
											"end": 15663,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15303,
											"end": 15669,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15303,
											"end": 15669,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15303,
											"end": 15669,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15303,
											"end": 15669,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15675,
											"end": 16094,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 15675,
											"end": 16094,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15841,
											"end": 15845,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15879,
											"end": 15881,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 15868,
											"end": 15877,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15864,
											"end": 15882,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15856,
											"end": 15882,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15856,
											"end": 15882,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15928,
											"end": 15937,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15922,
											"end": 15926,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15918,
											"end": 15938,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 15914,
											"end": 15915,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15903,
											"end": 15912,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15899,
											"end": 15916,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15892,
											"end": 15939,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15956,
											"end": 16087,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 16082,
											"end": 16086,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15956,
											"end": 16087,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 15956,
											"end": 16087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15956,
											"end": 16087,
											"name": "tag",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 15956,
											"end": 16087,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15948,
											"end": 16087,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15948,
											"end": 16087,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15675,
											"end": 16094,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15675,
											"end": 16094,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15675,
											"end": 16094,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15675,
											"end": 16094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16100,
											"end": 16273,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 16100,
											"end": 16273,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16240,
											"end": 16265,
											"name": "PUSH",
											"source": 7,
											"value": "47616D6520616C72656164792072656769737465726564000000000000000000"
										},
										{
											"begin": 16236,
											"end": 16237,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16228,
											"end": 16234,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16224,
											"end": 16238,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16217,
											"end": 16266,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16100,
											"end": 16273,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16100,
											"end": 16273,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16279,
											"end": 16645,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 16279,
											"end": 16645,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16421,
											"end": 16424,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16442,
											"end": 16509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 16506,
											"end": 16508,
											"name": "PUSH",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 16501,
											"end": 16504,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16442,
											"end": 16509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 16442,
											"end": 16509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16442,
											"end": 16509,
											"name": "tag",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 16442,
											"end": 16509,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16435,
											"end": 16509,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16435,
											"end": 16509,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16518,
											"end": 16611,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 16607,
											"end": 16610,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16518,
											"end": 16611,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 16518,
											"end": 16611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16518,
											"end": 16611,
											"name": "tag",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 16518,
											"end": 16611,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16636,
											"end": 16638,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16631,
											"end": 16634,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16627,
											"end": 16639,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16620,
											"end": 16639,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16620,
											"end": 16639,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16279,
											"end": 16645,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16279,
											"end": 16645,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16279,
											"end": 16645,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16279,
											"end": 16645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16651,
											"end": 17070,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 16651,
											"end": 17070,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16817,
											"end": 16821,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16855,
											"end": 16857,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16844,
											"end": 16853,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16840,
											"end": 16858,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16832,
											"end": 16858,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16832,
											"end": 16858,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16904,
											"end": 16913,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16898,
											"end": 16902,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16894,
											"end": 16914,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 16890,
											"end": 16891,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16879,
											"end": 16888,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16875,
											"end": 16892,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16868,
											"end": 16915,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16932,
											"end": 17063,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 17058,
											"end": 17062,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16932,
											"end": 17063,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 16932,
											"end": 17063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16932,
											"end": 17063,
											"name": "tag",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 16932,
											"end": 17063,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16924,
											"end": 17063,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16924,
											"end": 17063,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16651,
											"end": 17070,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16651,
											"end": 17070,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16651,
											"end": 17070,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16651,
											"end": 17070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/lib/BaseGameAsset.sol",
								"contracts/lib/GameRegistry.sol",
								"contracts/lib/IGameAsset.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"getGameAssetContracts(address)": "57f623d0",
							"getGamePermissions(address,address)": "53c02924",
							"grantAssetPermission(address,address,bytes32[])": "64462142",
							"hasPermissions(address,address,bytes32[])": "36e9b39a",
							"isGameRegistered(address)": "ee658e45",
							"owner()": "8da5cb5b",
							"registerGame(address)": "9b36057c",
							"registeredGames(uint256)": "9e3c5a72",
							"renounceOwnership()": "715018a6",
							"revokeAssetPermission(address,address)": "6f6145f0",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"game\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"assetContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"attributes\",\"type\":\"bytes32[]\"}],\"name\":\"AssetPermissionGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"game\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"assetContract\",\"type\":\"address\"}],\"name\":\"AssetPermissionRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"game\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"registeredBy\",\"type\":\"address\"}],\"name\":\"GameRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"game\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"unregisteredBy\",\"type\":\"address\"}],\"name\":\"GameUnregistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"game\",\"type\":\"address\"}],\"name\":\"getGameAssetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"game\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"assetContract\",\"type\":\"address\"}],\"name\":\"getGamePermissions\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"game\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"assetContract\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"attributes\",\"type\":\"bytes32[]\"}],\"name\":\"grantAssetPermission\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"game\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"assetContract\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"attributes\",\"type\":\"bytes32[]\"}],\"name\":\"hasPermissions\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"game\",\"type\":\"address\"}],\"name\":\"isGameRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"game\",\"type\":\"address\"}],\"name\":\"registerGame\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"registeredGames\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"game\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"assetContract\",\"type\":\"address\"}],\"name\":\"revokeAssetPermission\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"getGameAssetContracts(address)\":{\"params\":{\"game\":\"Address of the game\"},\"returns\":{\"_0\":\"Array of asset contract addresses\"}},\"getGamePermissions(address,address)\":{\"params\":{\"assetContract\":\"Address of the asset contract\",\"game\":\"Address of the game\"},\"returns\":{\"_0\":\"Array of allowed attribute IDs\"}},\"grantAssetPermission(address,address,bytes32[])\":{\"params\":{\"assetContract\":\"Address of the asset contract\",\"attributes\":\"Array of attribute IDs the game can modify\",\"game\":\"Address of the game\"}},\"hasPermissions(address,address,bytes32[])\":{\"params\":{\"assetContract\":\"Address of the asset contract\",\"attributes\":\"Array of attribute IDs to check\",\"game\":\"Address of the game\"},\"returns\":{\"_0\":\"bool indicating if the game has all specified permissions\"}},\"isGameRegistered(address)\":{\"params\":{\"game\":\"Address of the game to check\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"registerGame(address)\":{\"params\":{\"game\":\"Address of the game to register\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"revokeAssetPermission(address,address)\":{\"params\":{\"assetContract\":\"Address of the asset contract\",\"game\":\"Address of the game\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getGameAssetContracts(address)\":{\"notice\":\"Get all asset contracts a game has permissions for\"},\"getGamePermissions(address,address)\":{\"notice\":\"Get allowed attributes for a game and asset contract\"},\"grantAssetPermission(address,address,bytes32[])\":{\"notice\":\"Grant permission to a game for specific asset contract attributes\"},\"hasPermissions(address,address,bytes32[])\":{\"notice\":\"Check if a game has permission for specific attributes on an asset contract\"},\"isGameRegistered(address)\":{\"notice\":\"Check if a game is registered\"},\"registerGame(address)\":{\"notice\":\"Register a new game\"},\"revokeAssetPermission(address,address)\":{\"notice\":\"Revoke a game's permission for an asset contract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lib/GameRegistry.sol\":\"GameRegistry\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/lib/GameRegistry.sol\":{\"keccak256\":\"0x80d3dde7a2868ed730d880229411e8a8adc4b52e0b1f53bfb232d9193210760f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bef4240092ed49176399ef7f0515b24f5dd4f83d2399899e8ab6af7f30511e6\",\"dweb:/ipfs/QmTR8q8NMpgEmaRPgQqDdvKoQVX51MPEiLYgzFuNwLvsCH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contracts/lib/GameRegistry.sol:GameRegistry",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 557,
								"contract": "contracts/lib/GameRegistry.sol:GameRegistry",
								"label": "games",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_struct(GameData)552_storage)"
							},
							{
								"astId": 560,
								"contract": "contracts/lib/GameRegistry.sol:GameRegistry",
								"label": "registeredGames",
								"offset": 0,
								"slot": "2",
								"type": "t_array(t_address)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_array(t_bytes32)dyn_storage": {
								"base": "t_bytes32",
								"encoding": "dynamic_array",
								"label": "bytes32[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_struct(AssetPermission)540_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct GameRegistry.AssetPermission)",
								"numberOfBytes": "32",
								"value": "t_struct(AssetPermission)540_storage"
							},
							"t_mapping(t_address,t_struct(GameData)552_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct GameRegistry.GameData)",
								"numberOfBytes": "32",
								"value": "t_struct(GameData)552_storage"
							},
							"t_struct(AssetPermission)540_storage": {
								"encoding": "inplace",
								"label": "struct GameRegistry.AssetPermission",
								"members": [
									{
										"astId": 536,
										"contract": "contracts/lib/GameRegistry.sol:GameRegistry",
										"label": "isRegistered",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 539,
										"contract": "contracts/lib/GameRegistry.sol:GameRegistry",
										"label": "allowedAttributes",
										"offset": 0,
										"slot": "1",
										"type": "t_array(t_bytes32)dyn_storage"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(GameData)552_storage": {
								"encoding": "inplace",
								"label": "struct GameRegistry.GameData",
								"members": [
									{
										"astId": 542,
										"contract": "contracts/lib/GameRegistry.sol:GameRegistry",
										"label": "isRegistered",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 547,
										"contract": "contracts/lib/GameRegistry.sol:GameRegistry",
										"label": "assetPermissions",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_address,t_struct(AssetPermission)540_storage)"
									},
									{
										"astId": 549,
										"contract": "contracts/lib/GameRegistry.sol:GameRegistry",
										"label": "registrationTime",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 551,
										"contract": "contracts/lib/GameRegistry.sol:GameRegistry",
										"label": "registeredBy",
										"offset": 0,
										"slot": "3",
										"type": "t_address"
									}
								],
								"numberOfBytes": "128"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"getGameAssetContracts(address)": {
								"notice": "Get all asset contracts a game has permissions for"
							},
							"getGamePermissions(address,address)": {
								"notice": "Get allowed attributes for a game and asset contract"
							},
							"grantAssetPermission(address,address,bytes32[])": {
								"notice": "Grant permission to a game for specific asset contract attributes"
							},
							"hasPermissions(address,address,bytes32[])": {
								"notice": "Check if a game has permission for specific attributes on an asset contract"
							},
							"isGameRegistered(address)": {
								"notice": "Check if a game is registered"
							},
							"registerGame(address)": {
								"notice": "Register a new game"
							},
							"revokeAssetPermission(address,address)": {
								"notice": "Revoke a game's permission for an asset contract"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/lib/IGameAsset.sol": {
				"IGameAsset": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "game",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "attributeId",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "value",
									"type": "bytes"
								}
							],
							"name": "AttributeModified",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "exists",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes32[]",
									"name": "attributes",
									"type": "bytes32[]"
								}
							],
							"name": "getAttributes",
							"outputs": [
								{
									"internalType": "bytes[]",
									"name": "",
									"type": "bytes[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes32[]",
									"name": "attributes",
									"type": "bytes32[]"
								},
								{
									"internalType": "bytes[]",
									"name": "values",
									"type": "bytes[]"
								}
							],
							"name": "setAttributes",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Core interface for game assets with cross-game compatibility",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"AttributeModified(uint256,address,bytes32,bytes)": {
								"details": "Emitted when an attribute is modified by a registered game"
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"exists(uint256)": {
								"params": {
									"tokenId": "The ID of the token to check"
								},
								"returns": {
									"_0": "bool whether the token exists"
								}
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"getAttributes(uint256,bytes32[])": {
								"params": {
									"attributes": "List of attribute IDs to query",
									"tokenId": "The ID of the token to query"
								}
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"setAttributes(uint256,bytes32[],bytes[])": {
								"params": {
									"attributes": "List of attribute IDs to modify",
									"tokenId": "The ID of the token to modify",
									"values": "List of values for each attribute"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "IGameAsset",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"exists(uint256)": "4f558e79",
							"getApproved(uint256)": "081812fc",
							"getAttributes(uint256,bytes32[])": "0a35e3d7",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"setAttributes(uint256,bytes32[],bytes[])": "a122effb",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"game\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"attributeId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"AttributeModified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"attributes\",\"type\":\"bytes32[]\"}],\"name\":\"getAttributes\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"attributes\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"values\",\"type\":\"bytes[]\"}],\"name\":\"setAttributes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Core interface for game assets with cross-game compatibility\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"AttributeModified(uint256,address,bytes32,bytes)\":{\"details\":\"Emitted when an attribute is modified by a registered game\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"exists(uint256)\":{\"params\":{\"tokenId\":\"The ID of the token to check\"},\"returns\":{\"_0\":\"bool whether the token exists\"}},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"getAttributes(uint256,bytes32[])\":{\"params\":{\"attributes\":\"List of attribute IDs to query\",\"tokenId\":\"The ID of the token to query\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"setAttributes(uint256,bytes32[],bytes[])\":{\"params\":{\"attributes\":\"List of attribute IDs to modify\",\"tokenId\":\"The ID of the token to modify\",\"values\":\"List of values for each attribute\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"IGameAsset\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"exists(uint256)\":{\"notice\":\"Check if a token exists\"},\"getAttributes(uint256,bytes32[])\":{\"notice\":\"Get attributes for a token\"},\"setAttributes(uint256,bytes32[],bytes[])\":{\"notice\":\"Set attributes for a token\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lib/IGameAsset.sol\":\"IGameAsset\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/lib/IGameAsset.sol\":{\"keccak256\":\"0xb81ced17f5fcd00bc0891d2e7bdc112d1ce521e7a88704af1d9095d6e825f880\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://238d27bbcee631693d0bac348a5a1fbcdb3f80a1fbc9acfc3eafd84cdfad22fb\",\"dweb:/ipfs/QmcyCZrCwXTYZBZ7iyHKZWuqhDFMMfC4DPJYxbpKQ2RQFw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"exists(uint256)": {
								"notice": "Check if a token exists"
							},
							"getAttributes(uint256,bytes32[])": {
								"notice": "Get attributes for a token"
							},
							"setAttributes(uint256,bytes32[],bytes[])": {
								"notice": "Set attributes for a token"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							294
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 295,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 294,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 294,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								294
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 276,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							306
						],
						"IERC721": [
							264
						]
					},
					"id": 265,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 265,
							"sourceUnit": 307,
							"src": "134:62:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 306,
										"src": "142:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 153,
										"name": "IERC165",
										"nameLocations": [
											"288:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 306,
										"src": "288:7:1"
									},
									"id": 154,
									"nodeType": "InheritanceSpecifier",
									"src": "288:7:1"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 152,
								"nodeType": "StructuredDocumentation",
								"src": "198:68:1",
								"text": " @dev Required interface of an ERC-721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 264,
							"linearizedBaseContracts": [
								264,
								306
							],
							"name": "IERC721",
							"nameLocation": "277:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 155,
										"nodeType": "StructuredDocumentation",
										"src": "302:88:1",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 163,
									"name": "Transfer",
									"nameLocation": "401:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "426:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "410:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "410:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 159,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "448:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "432:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "432:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 161,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "468:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "452:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "452:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "409:67:1"
									},
									"src": "395:82:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 164,
										"nodeType": "StructuredDocumentation",
										"src": "483:94:1",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 172,
									"name": "Approval",
									"nameLocation": "588:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "613:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "597:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "597:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 168,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "636:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "620:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "620:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "662:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "646:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "596:74:1"
									},
									"src": "582:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 173,
										"nodeType": "StructuredDocumentation",
										"src": "677:117:1",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 181,
									"name": "ApprovalForAll",
									"nameLocation": "805:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "836:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "820:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "859:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "843:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "843:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "874:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "869:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 178,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "869:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:64:1"
									},
									"src": "799:85:1"
								},
								{
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "890:76:1",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 189,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "980:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "998:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "990:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "990:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "989:15:1"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1036:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "1028:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1027:17:1"
									},
									"scope": 264,
									"src": "971:74:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "1051:131:1",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 197,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1196:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1212:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1204:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1204:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1203:17:1"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1252:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1244:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1244:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:15:1"
									},
									"scope": 264,
									"src": "1187:72:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "1265:565:1",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 209,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1844:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1869:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "1861:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1861:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1883:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "1875:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1875:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1895:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "1887:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1919:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "1904:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 205,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1904:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1860:64:1"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1933:0:1"
									},
									"scope": 264,
									"src": "1835:99:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "1940:706:1",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 219,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2660:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "2677:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2699:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "2691:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2691:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2711:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "2703:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2676:43:1"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2728:0:1"
									},
									"scope": 264,
									"src": "2651:78:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "2735:733:1",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 229,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3482:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3503:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "3495:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3495:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3517:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "3509:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3529:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "3521:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3521:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3494:43:1"
									},
									"returnParameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3546:0:1"
									},
									"scope": 264,
									"src": "3473:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 230,
										"nodeType": "StructuredDocumentation",
										"src": "3553:452:1",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 237,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4019:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4035:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "4027:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4027:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4047:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "4039:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4039:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4026:29:1"
									},
									"returnParameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4064:0:1"
									},
									"scope": 264,
									"src": "4010:55:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "4071:315:1",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 245,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4400:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4426:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "4418:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4418:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4441:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "4436:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 241,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4436:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4417:33:1"
									},
									"returnParameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4459:0:1"
									},
									"scope": 264,
									"src": "4391:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 246,
										"nodeType": "StructuredDocumentation",
										"src": "4466:139:1",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 253,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4619:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4639:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "4631:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4631:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4630:17:1"
									},
									"returnParameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4679:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "4671:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4671:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4670:18:1"
									},
									"scope": 264,
									"src": "4610:79:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 254,
										"nodeType": "StructuredDocumentation",
										"src": "4695:138:1",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 263,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4847:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4872:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "4864:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4864:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4887:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "4879:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4879:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4863:33:1"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "4920:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 260,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4920:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4919:6:1"
									},
									"scope": 264,
									"src": "4838:88:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 265,
							"src": "267:4661:1",
							"usedErrors": [],
							"usedEvents": [
								163,
								172,
								181
							]
						}
					],
					"src": "108:4821:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							294
						]
					},
					"id": 295,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 266,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 267,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 294,
							"linearizedBaseContracts": [
								294
							],
							"name": "Context",
							"nameLocation": "642:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 275,
										"nodeType": "Block",
										"src": "718:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 272,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 271,
												"id": 274,
												"nodeType": "Return",
												"src": "728:17:2"
											}
										]
									},
									"id": 276,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:2"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "709:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:2"
									},
									"scope": 294,
									"src": "656:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "825:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 281,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 280,
												"id": 283,
												"nodeType": "Return",
												"src": "835:15:2"
											}
										]
									},
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:2"
									},
									"returnParameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "809:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 278,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:2"
									},
									"scope": 294,
									"src": "758:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 292,
										"nodeType": "Block",
										"src": "935:25:2",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 289,
												"id": 291,
												"nodeType": "Return",
												"src": "945:8:2"
											}
										]
									},
									"id": 293,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:2"
									},
									"returnParameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:2"
									},
									"scope": 294,
									"src": "863:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 295,
							"src": "624:338:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							306
						]
					},
					"id": 307,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 296,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 297,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:3",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 306,
							"linearizedBaseContracts": [
								306
							],
							"name": "IERC165",
							"nameLocation": "432:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 298,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:3",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 305,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "818:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 299,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:3"
									},
									"returnParameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "861:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 302,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:3"
									},
									"scope": 306,
									"src": "791:76:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 307,
							"src": "422:447:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:3"
				},
				"id": 3
			},
			"contracts/lib/BaseGameAsset.sol": {
				"ast": {
					"absolutePath": "contracts/lib/BaseGameAsset.sol",
					"exportedSymbols": {
						"BaseGameAsset": [
							529
						],
						"Context": [
							294
						],
						"GameRegistry": [
							1020
						],
						"IERC165": [
							306
						],
						"IERC721": [
							264
						],
						"IGameAsset": [
							1073
						],
						"Ownable": [
							147
						]
					},
					"id": 530,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 308,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:4"
						},
						{
							"absolutePath": "contracts/lib/IGameAsset.sol",
							"file": "./IGameAsset.sol",
							"id": 309,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 530,
							"sourceUnit": 1074,
							"src": "56:26:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/lib/GameRegistry.sol",
							"file": "./GameRegistry.sol",
							"id": 310,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 530,
							"sourceUnit": 1021,
							"src": "83:28:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 312,
										"name": "IGameAsset",
										"nameLocations": [
											"249:10:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1073,
										"src": "249:10:4"
									},
									"id": 313,
									"nodeType": "InheritanceSpecifier",
									"src": "249:10:4"
								}
							],
							"canonicalName": "BaseGameAsset",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 311,
								"nodeType": "StructuredDocumentation",
								"src": "112:101:4",
								"text": " @title BaseGameAsset\n @dev Abstract implementation of IGameAsset with core functionality"
							},
							"fullyImplemented": false,
							"id": 529,
							"linearizedBaseContracts": [
								529,
								1073,
								264,
								306
							],
							"name": "BaseGameAsset",
							"nameLocation": "232:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "7b103999",
									"id": 316,
									"mutability": "immutable",
									"name": "registry",
									"nameLocation": "343:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 529,
									"src": "313:38:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_GameRegistry_$1020",
										"typeString": "contract GameRegistry"
									},
									"typeName": {
										"id": 315,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 314,
											"name": "GameRegistry",
											"nameLocations": [
												"313:12:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1020,
											"src": "313:12:4"
										},
										"referencedDeclaration": 1020,
										"src": "313:12:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_GameRegistry_$1020",
											"typeString": "contract GameRegistry"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 322,
									"mutability": "mutable",
									"name": "_attributes",
									"nameLocation": "441:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 529,
									"src": "387:65:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_bytes32_$_t_bytes_storage_$_$",
										"typeString": "mapping(uint256 => mapping(bytes32 => bytes))"
									},
									"typeName": {
										"id": 321,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 317,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "395:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "387:45:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_bytes32_$_t_bytes_storage_$_$",
											"typeString": "mapping(uint256 => mapping(bytes32 => bytes))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 320,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 318,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "414:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"nodeType": "Mapping",
											"src": "406:25:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes_storage_$",
												"typeString": "mapping(bytes32 => bytes)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 319,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "425:5:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 326,
									"mutability": "mutable",
									"name": "_tokenExists",
									"nameLocation": "527:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 529,
									"src": "494:45:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
										"typeString": "mapping(uint256 => bool)"
									},
									"typeName": {
										"id": 325,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 323,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "502:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "494:24:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
											"typeString": "mapping(uint256 => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 324,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "513:4:4",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 337,
										"nodeType": "Block",
										"src": "587:57:4",
										"statements": [
											{
												"expression": {
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "registry",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 316,
														"src": "597:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_GameRegistry_$1020",
															"typeString": "contract GameRegistry"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 333,
																"name": "registryAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 328,
																"src": "621:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 332,
															"name": "GameRegistry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1020,
															"src": "608:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_GameRegistry_$1020_$",
																"typeString": "type(contract GameRegistry)"
															}
														},
														"id": 334,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "608:29:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_GameRegistry_$1020",
															"typeString": "contract GameRegistry"
														}
													},
													"src": "597:40:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_GameRegistry_$1020",
														"typeString": "contract GameRegistry"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "597:40:4"
											}
										]
									},
									"id": 338,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "registryAddress",
												"nameLocation": "570:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "562:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 327,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "562:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "561:25:4"
									},
									"returnParameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:0:4"
									},
									"scope": 529,
									"src": "550:94:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 350,
										"nodeType": "Block",
										"src": "780:45:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 346,
														"name": "_tokenExists",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 326,
														"src": "797:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
															"typeString": "mapping(uint256 => bool)"
														}
													},
													"id": 348,
													"indexExpression": {
														"id": 347,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "810:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "797:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 345,
												"id": 349,
												"nodeType": "Return",
												"src": "790:28:4"
											}
										]
									},
									"documentation": {
										"id": 339,
										"nodeType": "StructuredDocumentation",
										"src": "651:53:4",
										"text": "@dev Internal function to check if a token exists"
									},
									"id": 351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "718:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "734:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "726:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "726:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "725:17:4"
									},
									"returnParameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "774:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 343,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "774:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:6:4"
									},
									"scope": 529,
									"src": "709:116:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1072
									],
									"body": {
										"id": 364,
										"nodeType": "Block",
										"src": "960:40:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 361,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 354,
															"src": "985:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 360,
														"name": "_exists",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "977:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (uint256) view returns (bool)"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "977:16:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 359,
												"id": 363,
												"nodeType": "Return",
												"src": "970:23:4"
											}
										]
									},
									"documentation": {
										"id": 352,
										"nodeType": "StructuredDocumentation",
										"src": "831:53:4",
										"text": "@dev External function to check if a token exists"
									},
									"functionSelector": "4f558e79",
									"id": 365,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "exists",
									"nameLocation": "898:6:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 356,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "936:8:4"
									},
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "913:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "905:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "905:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "904:17:4"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "954:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 357,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "954:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "953:6:4"
									},
									"scope": 529,
									"src": "889:111:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 399,
										"nodeType": "Block",
										"src": "1144:241:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 374,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1188:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1192:6:4",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1188:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 372,
																	"name": "registry",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 316,
																	"src": "1162:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_GameRegistry_$1020",
																		"typeString": "contract GameRegistry"
																	}
																},
																"id": 373,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1171:16:4",
																"memberName": "isGameRegistered",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 783,
																"src": "1162:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view external returns (bool)"
																}
															},
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1162:37:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "47616d65206e6f742072656769737465726564",
															"id": 377,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1201:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1edb0667ab871f480cc99b846d0e89fbd59606d5093450b6acb4e5c6386744c5",
																"typeString": "literal_string \"Game not registered\""
															},
															"value": "Game not registered"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1edb0667ab871f480cc99b846d0e89fbd59606d5093450b6acb4e5c6386744c5",
																"typeString": "literal_string \"Game not registered\""
															}
														],
														"id": 371,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1154:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1154:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "1154:69:4"
											},
											{
												"assignments": [
													381
												],
												"declarations": [
													{
														"constant": false,
														"id": 381,
														"mutability": "mutable",
														"name": "hasPermission",
														"nameLocation": "1238:13:4",
														"nodeType": "VariableDeclaration",
														"scope": 399,
														"src": "1233:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 380,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1233:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 392,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1286:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 385,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1278:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 384,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1278:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1278:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 388,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1290:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1294:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1290:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 390,
															"name": "attributes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 369,
															"src": "1302:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
																"typeString": "bytes32[] calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
																"typeString": "bytes32[] calldata"
															}
														],
														"expression": {
															"id": 382,
															"name": "registry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 316,
															"src": "1254:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_GameRegistry_$1020",
																"typeString": "contract GameRegistry"
															}
														},
														"id": 383,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1263:14:4",
														"memberName": "hasPermissions",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 918,
														"src": "1254:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (address,address,bytes32[] memory) view external returns (bool)"
														}
													},
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1254:59:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1233:80:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 394,
															"name": "hasPermission",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "1331:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d697373696e67207065726d697373696f6e",
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1346:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ff5a9105fceb90afaed078ca2663d9bb87689f3db06b15f54300886ae58dcd66",
																"typeString": "literal_string \"Missing permission\""
															},
															"value": "Missing permission"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ff5a9105fceb90afaed078ca2663d9bb87689f3db06b15f54300886ae58dcd66",
																"typeString": "literal_string \"Missing permission\""
															}
														],
														"id": 393,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1323:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1323:44:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 397,
												"nodeType": "ExpressionStatement",
												"src": "1323:44:4"
											},
											{
												"id": 398,
												"nodeType": "PlaceholderStatement",
												"src": "1377:1:4"
											}
										]
									},
									"documentation": {
										"id": 366,
										"nodeType": "StructuredDocumentation",
										"src": "1010:70:4",
										"text": "@notice Modifier to check if game is registered and has permission"
									},
									"id": 400,
									"name": "onlyRegisteredGame",
									"nameLocation": "1094:18:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "attributes",
												"nameLocation": "1132:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "1113:29:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 367,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "1113:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 368,
													"nodeType": "ArrayTypeName",
													"src": "1113:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1112:31:4"
									},
									"src": "1085:300:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1052
									],
									"body": {
										"id": 468,
										"nodeType": "Block",
										"src": "1570:355:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 416,
																	"name": "attributes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 405,
																	"src": "1588:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
																		"typeString": "bytes32[] calldata"
																	}
																},
																"id": 417,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1599:6:4",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1588:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 418,
																	"name": "values",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 408,
																	"src": "1609:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
																		"typeString": "bytes calldata[] calldata"
																	}
																},
																"id": 419,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1616:6:4",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1609:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1588:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c656e677468206d69736d61746368",
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1624:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bb46a6fe2ea6b18f462b236ffc808abf66026114a0bc6a6c72c11149e00d9ea8",
																"typeString": "literal_string \"Length mismatch\""
															},
															"value": "Length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bb46a6fe2ea6b18f462b236ffc808abf66026114a0bc6a6c72c11149e00d9ea8",
																"typeString": "literal_string \"Length mismatch\""
															}
														],
														"id": 415,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1580:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1580:62:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 423,
												"nodeType": "ExpressionStatement",
												"src": "1580:62:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 426,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 402,
																	"src": "1668:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 425,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 351,
																"src": "1660:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1660:16:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e20646f65736e2774206578697374",
															"id": 428,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1678:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0354956d633d36d0ff4b9a7618895a3258d4df8b8ee40a1501f1c8d71bcea5c2",
																"typeString": "literal_string \"Token doesn't exist\""
															},
															"value": "Token doesn't exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0354956d633d36d0ff4b9a7618895a3258d4df8b8ee40a1501f1c8d71bcea5c2",
																"typeString": "literal_string \"Token doesn't exist\""
															}
														],
														"id": 424,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1652:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1652:48:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 430,
												"nodeType": "ExpressionStatement",
												"src": "1652:48:4"
											},
											{
												"body": {
													"id": 466,
													"nodeType": "Block",
													"src": "1764:155:4",
													"statements": [
														{
															"expression": {
																"id": 452,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 442,
																			"name": "_attributes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 322,
																			"src": "1778:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_bytes32_$_t_bytes_storage_$_$",
																				"typeString": "mapping(uint256 => mapping(bytes32 => bytes storage ref))"
																			}
																		},
																		"id": 447,
																		"indexExpression": {
																			"id": 443,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 402,
																			"src": "1790:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1778:20:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes_storage_$",
																			"typeString": "mapping(bytes32 => bytes storage ref)"
																		}
																	},
																	"id": 448,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 444,
																			"name": "attributes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 405,
																			"src": "1799:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
																				"typeString": "bytes32[] calldata"
																			}
																		},
																		"id": 446,
																		"indexExpression": {
																			"id": 445,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 432,
																			"src": "1810:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1799:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1778:35:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage",
																		"typeString": "bytes storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 449,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 408,
																		"src": "1816:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
																			"typeString": "bytes calldata[] calldata"
																		}
																	},
																	"id": 451,
																	"indexExpression": {
																		"id": 450,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 432,
																		"src": "1823:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1816:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	}
																},
																"src": "1778:47:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_storage",
																	"typeString": "bytes storage ref"
																}
															},
															"id": 453,
															"nodeType": "ExpressionStatement",
															"src": "1778:47:4"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 455,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 402,
																		"src": "1862:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 456,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1871:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 457,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1875:6:4",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1871:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 458,
																			"name": "attributes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 405,
																			"src": "1883:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
																				"typeString": "bytes32[] calldata"
																			}
																		},
																		"id": 460,
																		"indexExpression": {
																			"id": 459,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 432,
																			"src": "1894:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1883:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 461,
																			"name": "values",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 408,
																			"src": "1898:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
																				"typeString": "bytes calldata[] calldata"
																			}
																		},
																		"id": 463,
																		"indexExpression": {
																			"id": 462,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 432,
																			"src": "1905:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1898:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	],
																	"id": 454,
																	"name": "AttributeModified",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1040,
																	"src": "1844:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (uint256,address,bytes32,bytes memory)"
																	}
																},
																"id": 464,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1844:64:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 465,
															"nodeType": "EmitStatement",
															"src": "1839:69:4"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 435,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 432,
														"src": "1736:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 436,
															"name": "attributes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "1740:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
																"typeString": "bytes32[] calldata"
															}
														},
														"id": 437,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1751:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1740:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1736:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 467,
												"initializationExpression": {
													"assignments": [
														432
													],
													"declarations": [
														{
															"constant": false,
															"id": 432,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1729:1:4",
															"nodeType": "VariableDeclaration",
															"scope": 467,
															"src": "1724:6:4",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 431,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "1724:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 434,
													"initialValue": {
														"hexValue": "30",
														"id": 433,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1733:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1724:10:4"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 440,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1759:3:4",
														"subExpression": {
															"id": 439,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 432,
															"src": "1759:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 441,
													"nodeType": "ExpressionStatement",
													"src": "1759:3:4"
												},
												"nodeType": "ForStatement",
												"src": "1719:200:4"
											}
										]
									},
									"functionSelector": "a122effb",
									"id": 469,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 412,
													"name": "attributes",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 405,
													"src": "1558:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
														"typeString": "bytes32[] calldata"
													}
												}
											],
											"id": 413,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 411,
												"name": "onlyRegisteredGame",
												"nameLocations": [
													"1539:18:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 400,
												"src": "1539:18:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1539:30:4"
										}
									],
									"name": "setAttributes",
									"nameLocation": "1404:13:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 410,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1530:8:4"
									},
									"parameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1435:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "1427:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1427:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "attributes",
												"nameLocation": "1471:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "1452:29:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 403,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "1452:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 404,
													"nodeType": "ArrayTypeName",
													"src": "1452:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "1508:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "1491:23:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 406,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "1491:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 407,
													"nodeType": "ArrayTypeName",
													"src": "1491:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1417:103:4"
									},
									"returnParameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1570:0:4"
									},
									"scope": 529,
									"src": "1395:530:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1064
									],
									"body": {
										"id": 527,
										"nodeType": "Block",
										"src": "2076:287:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 483,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 471,
																	"src": "2102:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 482,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 351,
																"src": "2094:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2094:16:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e20646f65736e2774206578697374",
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2112:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0354956d633d36d0ff4b9a7618895a3258d4df8b8ee40a1501f1c8d71bcea5c2",
																"typeString": "literal_string \"Token doesn't exist\""
															},
															"value": "Token doesn't exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0354956d633d36d0ff4b9a7618895a3258d4df8b8ee40a1501f1c8d71bcea5c2",
																"typeString": "literal_string \"Token doesn't exist\""
															}
														],
														"id": 481,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2086:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2086:48:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 487,
												"nodeType": "ExpressionStatement",
												"src": "2086:48:4"
											},
											{
												"assignments": [
													492
												],
												"declarations": [
													{
														"constant": false,
														"id": 492,
														"mutability": "mutable",
														"name": "values",
														"nameLocation": "2168:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 527,
														"src": "2153:21:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
															"typeString": "bytes[]"
														},
														"typeName": {
															"baseType": {
																"id": 490,
																"name": "bytes",
																"nodeType": "ElementaryTypeName",
																"src": "2153:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_storage_ptr",
																	"typeString": "bytes"
																}
															},
															"id": 491,
															"nodeType": "ArrayTypeName",
															"src": "2153:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
																"typeString": "bytes[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 499,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 496,
																"name": "attributes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 474,
																"src": "2189:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
																	"typeString": "bytes32[] calldata"
																}
															},
															"id": 497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2200:6:4",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2189:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 495,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2177:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 493,
																"name": "bytes",
																"nodeType": "ElementaryTypeName",
																"src": "2181:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_storage_ptr",
																	"typeString": "bytes"
																}
															},
															"id": 494,
															"nodeType": "ArrayTypeName",
															"src": "2181:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
																"typeString": "bytes[]"
															}
														}
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2177:30:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
														"typeString": "bytes memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2153:54:4"
											},
											{
												"body": {
													"id": 523,
													"nodeType": "Block",
													"src": "2262:72:4",
													"statements": [
														{
															"expression": {
																"id": 521,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 511,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 492,
																		"src": "2276:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
																			"typeString": "bytes memory[] memory"
																		}
																	},
																	"id": 513,
																	"indexExpression": {
																		"id": 512,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 501,
																		"src": "2283:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2276:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 514,
																			"name": "_attributes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 322,
																			"src": "2288:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_bytes32_$_t_bytes_storage_$_$",
																				"typeString": "mapping(uint256 => mapping(bytes32 => bytes storage ref))"
																			}
																		},
																		"id": 516,
																		"indexExpression": {
																			"id": 515,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 471,
																			"src": "2300:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2288:20:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes_storage_$",
																			"typeString": "mapping(bytes32 => bytes storage ref)"
																		}
																	},
																	"id": 520,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 517,
																			"name": "attributes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 474,
																			"src": "2309:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
																				"typeString": "bytes32[] calldata"
																			}
																		},
																		"id": 519,
																		"indexExpression": {
																			"id": 518,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 501,
																			"src": "2320:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2309:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2288:35:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage",
																		"typeString": "bytes storage ref"
																	}
																},
																"src": "2276:47:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 522,
															"nodeType": "ExpressionStatement",
															"src": "2276:47:4"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 504,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "2234:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 505,
															"name": "attributes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "2238:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
																"typeString": "bytes32[] calldata"
															}
														},
														"id": 506,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2249:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2238:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2234:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 524,
												"initializationExpression": {
													"assignments": [
														501
													],
													"declarations": [
														{
															"constant": false,
															"id": 501,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2227:1:4",
															"nodeType": "VariableDeclaration",
															"scope": 524,
															"src": "2222:6:4",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 500,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "2222:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 503,
													"initialValue": {
														"hexValue": "30",
														"id": 502,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2231:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2222:10:4"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 509,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2257:3:4",
														"subExpression": {
															"id": 508,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 501,
															"src": "2257:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 510,
													"nodeType": "ExpressionStatement",
													"src": "2257:3:4"
												},
												"nodeType": "ForStatement",
												"src": "2217:117:4"
											},
											{
												"expression": {
													"id": 525,
													"name": "values",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 492,
													"src": "2350:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
														"typeString": "bytes memory[] memory"
													}
												},
												"functionReturnParameters": 480,
												"id": 526,
												"nodeType": "Return",
												"src": "2343:13:4"
											}
										]
									},
									"functionSelector": "0a35e3d7",
									"id": 528,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAttributes",
									"nameLocation": "1944:13:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 476,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2042:8:4"
									},
									"parameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1975:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "1967:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1967:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "attributes",
												"nameLocation": "2011:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "1992:29:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 472,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "1992:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 473,
													"nodeType": "ArrayTypeName",
													"src": "1992:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1957:70:4"
									},
									"returnParameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "2060:14:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 477,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "2060:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 478,
													"nodeType": "ArrayTypeName",
													"src": "2060:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2059:16:4"
									},
									"scope": 529,
									"src": "1935:428:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 530,
							"src": "214:2151:4",
							"usedErrors": [],
							"usedEvents": [
								163,
								172,
								181,
								1040
							]
						}
					],
					"src": "32:2334:4"
				},
				"id": 4
			},
			"contracts/lib/GameRegistry.sol": {
				"ast": {
					"absolutePath": "contracts/lib/GameRegistry.sol",
					"exportedSymbols": {
						"Context": [
							294
						],
						"GameRegistry": [
							1020
						],
						"Ownable": [
							147
						]
					},
					"id": 1021,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 531,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 532,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1021,
							"sourceUnit": 148,
							"src": "57:52:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 533,
										"name": "Ownable",
										"nameLocations": [
											"136:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "136:7:5"
									},
									"id": 534,
									"nodeType": "InheritanceSpecifier",
									"src": "136:7:5"
								}
							],
							"canonicalName": "GameRegistry",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1020,
							"linearizedBaseContracts": [
								1020,
								147,
								294
							],
							"name": "GameRegistry",
							"nameLocation": "120:12:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "GameRegistry.AssetPermission",
									"id": 540,
									"members": [
										{
											"constant": false,
											"id": 536,
											"mutability": "mutable",
											"name": "isRegistered",
											"nameLocation": "188:12:5",
											"nodeType": "VariableDeclaration",
											"scope": 540,
											"src": "183:17:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 535,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "183:4:5",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 539,
											"mutability": "mutable",
											"name": "allowedAttributes",
											"nameLocation": "220:17:5",
											"nodeType": "VariableDeclaration",
											"scope": 540,
											"src": "210:27:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
												"typeString": "bytes32[]"
											},
											"typeName": {
												"baseType": {
													"id": 537,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "210:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 538,
												"nodeType": "ArrayTypeName",
												"src": "210:9:5",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AssetPermission",
									"nameLocation": "157:15:5",
									"nodeType": "StructDefinition",
									"scope": 1020,
									"src": "150:94:5",
									"visibility": "public"
								},
								{
									"canonicalName": "GameRegistry.GameData",
									"id": 552,
									"members": [
										{
											"constant": false,
											"id": 542,
											"mutability": "mutable",
											"name": "isRegistered",
											"nameLocation": "281:12:5",
											"nodeType": "VariableDeclaration",
											"scope": 552,
											"src": "276:17:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 541,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "276:4:5",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 547,
											"mutability": "mutable",
											"name": "assetPermissions",
											"nameLocation": "397:16:5",
											"nodeType": "VariableDeclaration",
											"scope": 552,
											"src": "361:52:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AssetPermission_$540_storage_$",
												"typeString": "mapping(address => struct GameRegistry.AssetPermission)"
											},
											"typeName": {
												"id": 546,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "369:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "361:35:5",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AssetPermission_$540_storage_$",
													"typeString": "mapping(address => struct GameRegistry.AssetPermission)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 545,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 544,
														"name": "AssetPermission",
														"nameLocations": [
															"380:15:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 540,
														"src": "380:15:5"
													},
													"referencedDeclaration": 540,
													"src": "380:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AssetPermission_$540_storage_ptr",
														"typeString": "struct GameRegistry.AssetPermission"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 549,
											"mutability": "mutable",
											"name": "registrationTime",
											"nameLocation": "431:16:5",
											"nodeType": "VariableDeclaration",
											"scope": 552,
											"src": "423:24:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 548,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "423:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 551,
											"mutability": "mutable",
											"name": "registeredBy",
											"nameLocation": "465:12:5",
											"nodeType": "VariableDeclaration",
											"scope": 552,
											"src": "457:20:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 550,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "457:7:5",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "GameData",
									"nameLocation": "257:8:5",
									"nodeType": "StructDefinition",
									"scope": 1020,
									"src": "250:234:5",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 557,
									"mutability": "mutable",
									"name": "games",
									"nameLocation": "569:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 1020,
									"src": "532:42:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_GameData_$552_storage_$",
										"typeString": "mapping(address => struct GameRegistry.GameData)"
									},
									"typeName": {
										"id": 556,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 553,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "540:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "532:28:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_GameData_$552_storage_$",
											"typeString": "mapping(address => struct GameRegistry.GameData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 555,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 554,
												"name": "GameData",
												"nameLocations": [
													"551:8:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 552,
												"src": "551:8:5"
											},
											"referencedDeclaration": 552,
											"src": "551:8:5",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_GameData_$552_storage_ptr",
												"typeString": "struct GameRegistry.GameData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "9e3c5a72",
									"id": 560,
									"mutability": "mutable",
									"name": "registeredGames",
									"nameLocation": "597:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 1020,
									"src": "580:32:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 558,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "580:7:5",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 559,
										"nodeType": "ArrayTypeName",
										"src": "580:9:5",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "076eada2b266f926d3ecb187dece20428d68db62016c04bea8ccb92679f788de",
									"id": 566,
									"name": "GameRegistered",
									"nameLocation": "625:14:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"indexed": true,
												"mutability": "mutable",
												"name": "game",
												"nameLocation": "656:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "640:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "640:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 564,
												"indexed": true,
												"mutability": "mutable",
												"name": "registeredBy",
												"nameLocation": "678:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "662:28:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 563,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "662:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "639:52:5"
									},
									"src": "619:73:5"
								},
								{
									"anonymous": false,
									"eventSelector": "65878649e6dbcda020be4486d4b9d0da6aea73412dd86aeb4cb8d0c7936bd8b9",
									"id": 572,
									"name": "GameUnregistered",
									"nameLocation": "703:16:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"indexed": true,
												"mutability": "mutable",
												"name": "game",
												"nameLocation": "736:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "720:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "720:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"indexed": true,
												"mutability": "mutable",
												"name": "unregisteredBy",
												"nameLocation": "758:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "742:30:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "742:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "719:54:5"
									},
									"src": "697:77:5"
								},
								{
									"anonymous": false,
									"eventSelector": "5a1925924b0857ceb006f7400134cecccedb6ca75ecef791a1a109cf8890edae",
									"id": 581,
									"name": "AssetPermissionGranted",
									"nameLocation": "785:22:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 574,
												"indexed": true,
												"mutability": "mutable",
												"name": "game",
												"nameLocation": "833:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "817:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "817:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 576,
												"indexed": true,
												"mutability": "mutable",
												"name": "assetContract",
												"nameLocation": "864:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "848:29:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "848:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 579,
												"indexed": false,
												"mutability": "mutable",
												"name": "attributes",
												"nameLocation": "898:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "888:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 577,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "888:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 578,
													"nodeType": "ArrayTypeName",
													"src": "888:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "807:107:5"
									},
									"src": "779:136:5"
								},
								{
									"anonymous": false,
									"eventSelector": "b0b93a7d8a8ec4a98f21206af2d3af128fc5ba7b8df65991b7477766ed425622",
									"id": 587,
									"name": "AssetPermissionRevoked",
									"nameLocation": "926:22:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"indexed": true,
												"mutability": "mutable",
												"name": "game",
												"nameLocation": "974:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "958:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 582,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "958:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 585,
												"indexed": true,
												"mutability": "mutable",
												"name": "assetContract",
												"nameLocation": "1005:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "989:29:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 584,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "948:76:5"
									},
									"src": "920:105:5"
								},
								{
									"body": {
										"id": 594,
										"nodeType": "Block",
										"src": "1064:2:5",
										"statements": []
									},
									"id": 595,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 590,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1053:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1057:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1053:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 592,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 589,
												"name": "Ownable",
												"nameLocations": [
													"1045:7:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1045:7:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1045:19:5"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1042:2:5"
									},
									"returnParameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1064:0:5"
									},
									"scope": 1020,
									"src": "1031:35:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 657,
										"nodeType": "Block",
										"src": "1229:384:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 609,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 604,
																"name": "game",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 598,
																"src": "1247:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 607,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1263:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 606,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1255:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 605,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1255:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 608,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1255:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1247:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642067616d652061646472657373",
															"id": 610,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1267:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7fa703979043a4477af2668208e33e99c2be710d1b8d49bb5cc41b4b3bbac4a8",
																"typeString": "literal_string \"Invalid game address\""
															},
															"value": "Invalid game address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7fa703979043a4477af2668208e33e99c2be710d1b8d49bb5cc41b4b3bbac4a8",
																"typeString": "literal_string \"Invalid game address\""
															}
														],
														"id": 603,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1239:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1239:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 612,
												"nodeType": "ExpressionStatement",
												"src": "1239:51:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1308:25:5",
															"subExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 614,
																		"name": "games",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 557,
																		"src": "1309:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_GameData_$552_storage_$",
																			"typeString": "mapping(address => struct GameRegistry.GameData storage ref)"
																		}
																	},
																	"id": 616,
																	"indexExpression": {
																		"id": 615,
																		"name": "game",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 598,
																		"src": "1315:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1309:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_GameData_$552_storage",
																		"typeString": "struct GameRegistry.GameData storage ref"
																	}
																},
																"id": 617,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1321:12:5",
																"memberName": "isRegistered",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 542,
																"src": "1309:24:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "47616d6520616c72656164792072656769737465726564",
															"id": 619,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1335:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_523a1be2df150250aa7866f2d72f2430b839f9917e1233923df7f810d36fadc8",
																"typeString": "literal_string \"Game already registered\""
															},
															"value": "Game already registered"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_523a1be2df150250aa7866f2d72f2430b839f9917e1233923df7f810d36fadc8",
																"typeString": "literal_string \"Game already registered\""
															}
														],
														"id": 613,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1300:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1300:61:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 621,
												"nodeType": "ExpressionStatement",
												"src": "1300:61:5"
											},
											{
												"expression": {
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 622,
																"name": "games",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 557,
																"src": "1380:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_GameData_$552_storage_$",
																	"typeString": "mapping(address => struct GameRegistry.GameData storage ref)"
																}
															},
															"id": 624,
															"indexExpression": {
																"id": 623,
																"name": "game",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 598,
																"src": "1386:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1380:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_GameData_$552_storage",
																"typeString": "struct GameRegistry.GameData storage ref"
															}
														},
														"id": 625,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1392:12:5",
														"memberName": "isRegistered",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 542,
														"src": "1380:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 626,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1407:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1380:31:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "ExpressionStatement",
												"src": "1380:31:5"
											},
											{
												"expression": {
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 629,
																"name": "games",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 557,
																"src": "1421:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_GameData_$552_storage_$",
																	"typeString": "mapping(address => struct GameRegistry.GameData storage ref)"
																}
															},
															"id": 631,
															"indexExpression": {
																"id": 630,
																"name": "game",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 598,
																"src": "1427:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1421:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_GameData_$552_storage",
																"typeString": "struct GameRegistry.GameData storage ref"
															}
														},
														"id": 632,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1433:16:5",
														"memberName": "registrationTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 549,
														"src": "1421:28:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 633,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1452:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 634,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1458:9:5",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1452:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1421:46:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 636,
												"nodeType": "ExpressionStatement",
												"src": "1421:46:5"
											},
											{
												"expression": {
													"id": 643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 637,
																"name": "games",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 557,
																"src": "1477:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_GameData_$552_storage_$",
																	"typeString": "mapping(address => struct GameRegistry.GameData storage ref)"
																}
															},
															"id": 639,
															"indexExpression": {
																"id": 638,
																"name": "game",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 598,
																"src": "1483:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1477:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_GameData_$552_storage",
																"typeString": "struct GameRegistry.GameData storage ref"
															}
														},
														"id": 640,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1489:12:5",
														"memberName": "registeredBy",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 551,
														"src": "1477:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 641,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1504:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 642,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1508:6:5",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1504:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1477:37:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 644,
												"nodeType": "ExpressionStatement",
												"src": "1477:37:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 648,
															"name": "game",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "1554:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 645,
															"name": "registeredGames",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "1533:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 647,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1549:4:5",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "1533:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1533:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 650,
												"nodeType": "ExpressionStatement",
												"src": "1533:26:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 652,
															"name": "game",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "1589:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 653,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1595:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 654,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1599:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1595:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 651,
														"name": "GameRegistered",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 566,
														"src": "1574:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1574:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 656,
												"nodeType": "EmitStatement",
												"src": "1569:37:5"
											}
										]
									},
									"documentation": {
										"id": 596,
										"nodeType": "StructuredDocumentation",
										"src": "1072:97:5",
										"text": " @notice Register a new game\n @param game Address of the game to register"
									},
									"functionSelector": "9b36057c",
									"id": 658,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 601,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 600,
												"name": "onlyOwner",
												"nameLocations": [
													"1219:9:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1219:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1219:9:5"
										}
									],
									"name": "registerGame",
									"nameLocation": "1183:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "game",
												"nameLocation": "1204:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "1196:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 597,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1196:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1195:14:5"
									},
									"returnParameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1229:0:5"
									},
									"scope": 1020,
									"src": "1174:439:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 725,
										"nodeType": "Block",
										"src": "2028:465:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 672,
																	"name": "games",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 557,
																	"src": "2046:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_GameData_$552_storage_$",
																		"typeString": "mapping(address => struct GameRegistry.GameData storage ref)"
																	}
																},
																"id": 674,
																"indexExpression": {
																	"id": 673,
																	"name": "game",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 661,
																	"src": "2052:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2046:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_GameData_$552_storage",
																	"typeString": "struct GameRegistry.GameData storage ref"
																}
															},
															"id": 675,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2058:12:5",
															"memberName": "isRegistered",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 542,
															"src": "2046:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "47616d65206e6f742072656769737465726564",
															"id": 676,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2072:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1edb0667ab871f480cc99b846d0e89fbd59606d5093450b6acb4e5c6386744c5",
																"typeString": "literal_string \"Game not registered\""
															},
															"value": "Game not registered"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1edb0667ab871f480cc99b846d0e89fbd59606d5093450b6acb4e5c6386744c5",
																"typeString": "literal_string \"Game not registered\""
															}
														],
														"id": 671,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2038:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2038:56:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 678,
												"nodeType": "ExpressionStatement",
												"src": "2038:56:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 685,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 680,
																"name": "assetContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 663,
																"src": "2112:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 683,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2137:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 682,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2129:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 681,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2129:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 684,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2129:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2112:27:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420617373657420636f6e7472616374",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2141:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_052cf812ba7508c49cdec2b16509980e963100ee665849219692e78e8ddd4650",
																"typeString": "literal_string \"Invalid asset contract\""
															},
															"value": "Invalid asset contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_052cf812ba7508c49cdec2b16509980e963100ee665849219692e78e8ddd4650",
																"typeString": "literal_string \"Invalid asset contract\""
															}
														],
														"id": 679,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2104:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2104:62:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "2104:62:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 690,
																	"name": "attributes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 666,
																	"src": "2184:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
																		"typeString": "bytes32[] calldata"
																	}
																},
																"id": 691,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2195:6:5",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2184:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 692,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2204:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2184:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f206174747269627574657320737065636966696564",
															"id": 694,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2207:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e44ec8f4706645e78b250e633c2648c89f9bf6bc2df7092dd012b1ffcc15e7e8",
																"typeString": "literal_string \"No attributes specified\""
															},
															"value": "No attributes specified"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e44ec8f4706645e78b250e633c2648c89f9bf6bc2df7092dd012b1ffcc15e7e8",
																"typeString": "literal_string \"No attributes specified\""
															}
														],
														"id": 689,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2176:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2176:57:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 696,
												"nodeType": "ExpressionStatement",
												"src": "2176:57:5"
											},
											{
												"assignments": [
													699
												],
												"declarations": [
													{
														"constant": false,
														"id": 699,
														"mutability": "mutable",
														"name": "permission",
														"nameLocation": "2268:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 725,
														"src": "2244:34:5",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AssetPermission_$540_storage_ptr",
															"typeString": "struct GameRegistry.AssetPermission"
														},
														"typeName": {
															"id": 698,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 697,
																"name": "AssetPermission",
																"nameLocations": [
																	"2244:15:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 540,
																"src": "2244:15:5"
															},
															"referencedDeclaration": 540,
															"src": "2244:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AssetPermission_$540_storage_ptr",
																"typeString": "struct GameRegistry.AssetPermission"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 706,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 700,
																"name": "games",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 557,
																"src": "2281:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_GameData_$552_storage_$",
																	"typeString": "mapping(address => struct GameRegistry.GameData storage ref)"
																}
															},
															"id": 702,
															"indexExpression": {
																"id": 701,
																"name": "game",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 661,
																"src": "2287:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2281:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_GameData_$552_storage",
																"typeString": "struct GameRegistry.GameData storage ref"
															}
														},
														"id": 703,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2293:16:5",
														"memberName": "assetPermissions",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 547,
														"src": "2281:28:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AssetPermission_$540_storage_$",
															"typeString": "mapping(address => struct GameRegistry.AssetPermission storage ref)"
														}
													},
													"id": 705,
													"indexExpression": {
														"id": 704,
														"name": "assetContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "2310:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2281:43:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AssetPermission_$540_storage",
														"typeString": "struct GameRegistry.AssetPermission storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2244:80:5"
											},
											{
												"expression": {
													"id": 711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 707,
															"name": "permission",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 699,
															"src": "2334:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AssetPermission_$540_storage_ptr",
																"typeString": "struct GameRegistry.AssetPermission storage pointer"
															}
														},
														"id": 709,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2345:12:5",
														"memberName": "isRegistered",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 536,
														"src": "2334:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 710,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2360:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2334:30:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 712,
												"nodeType": "ExpressionStatement",
												"src": "2334:30:5"
											},
											{
												"expression": {
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 713,
															"name": "permission",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 699,
															"src": "2374:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AssetPermission_$540_storage_ptr",
																"typeString": "struct GameRegistry.AssetPermission storage pointer"
															}
														},
														"id": 715,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2385:17:5",
														"memberName": "allowedAttributes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 539,
														"src": "2374:28:5",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 716,
														"name": "attributes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 666,
														"src": "2405:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
															"typeString": "bytes32[] calldata"
														}
													},
													"src": "2374:41:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
														"typeString": "bytes32[] storage ref"
													}
												},
												"id": 718,
												"nodeType": "ExpressionStatement",
												"src": "2374:41:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 720,
															"name": "game",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 661,
															"src": "2454:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 721,
															"name": "assetContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 663,
															"src": "2460:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 722,
															"name": "attributes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 666,
															"src": "2475:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
																"typeString": "bytes32[] calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
																"typeString": "bytes32[] calldata"
															}
														],
														"id": 719,
														"name": "AssetPermissionGranted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 581,
														"src": "2431:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,bytes32[] memory)"
														}
													},
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2431:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 724,
												"nodeType": "EmitStatement",
												"src": "2426:60:5"
											}
										]
									},
									"documentation": {
										"id": 659,
										"nodeType": "StructuredDocumentation",
										"src": "1619:257:5",
										"text": " @notice Grant permission to a game for specific asset contract attributes\n @param game Address of the game\n @param assetContract Address of the asset contract\n @param attributes Array of attribute IDs the game can modify"
									},
									"functionSelector": "64462142",
									"id": 726,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 669,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 668,
												"name": "onlyOwner",
												"nameLocations": [
													"2018:9:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2018:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2018:9:5"
										}
									],
									"name": "grantAssetPermission",
									"nameLocation": "1890:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "game",
												"nameLocation": "1928:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "1920:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 660,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1920:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "assetContract",
												"nameLocation": "1950:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "1942:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 662,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1942:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "attributes",
												"nameLocation": "1992:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "1973:29:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 664,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "1973:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 665,
													"nodeType": "ArrayTypeName",
													"src": "1973:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1910:98:5"
									},
									"returnParameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2028:0:5"
									},
									"scope": 1020,
									"src": "1881:612:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 768,
										"nodeType": "Block",
										"src": "2785:300:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 737,
																	"name": "games",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 557,
																	"src": "2803:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_GameData_$552_storage_$",
																		"typeString": "mapping(address => struct GameRegistry.GameData storage ref)"
																	}
																},
																"id": 739,
																"indexExpression": {
																	"id": 738,
																	"name": "game",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 729,
																	"src": "2809:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2803:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_GameData_$552_storage",
																	"typeString": "struct GameRegistry.GameData storage ref"
																}
															},
															"id": 740,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2815:12:5",
															"memberName": "isRegistered",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 542,
															"src": "2803:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "47616d65206e6f742072656769737465726564",
															"id": 741,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2829:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1edb0667ab871f480cc99b846d0e89fbd59606d5093450b6acb4e5c6386744c5",
																"typeString": "literal_string \"Game not registered\""
															},
															"value": "Game not registered"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1edb0667ab871f480cc99b846d0e89fbd59606d5093450b6acb4e5c6386744c5",
																"typeString": "literal_string \"Game not registered\""
															}
														],
														"id": 736,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2795:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2795:56:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 743,
												"nodeType": "ExpressionStatement",
												"src": "2795:56:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 745,
																			"name": "games",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 557,
																			"src": "2869:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_GameData_$552_storage_$",
																				"typeString": "mapping(address => struct GameRegistry.GameData storage ref)"
																			}
																		},
																		"id": 747,
																		"indexExpression": {
																			"id": 746,
																			"name": "game",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 729,
																			"src": "2875:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2869:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_GameData_$552_storage",
																			"typeString": "struct GameRegistry.GameData storage ref"
																		}
																	},
																	"id": 748,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2881:16:5",
																	"memberName": "assetPermissions",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 547,
																	"src": "2869:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AssetPermission_$540_storage_$",
																		"typeString": "mapping(address => struct GameRegistry.AssetPermission storage ref)"
																	}
																},
																"id": 750,
																"indexExpression": {
																	"id": 749,
																	"name": "assetContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 731,
																	"src": "2898:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2869:43:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AssetPermission_$540_storage",
																	"typeString": "struct GameRegistry.AssetPermission storage ref"
																}
															},
															"id": 751,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2913:12:5",
															"memberName": "isRegistered",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 536,
															"src": "2869:56:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4173736574206e6f74207265676973746572656420666f722067616d65",
															"id": 752,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2927:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_277f09ddce34479b4d8dbf7c94ce9867419d4661334c514823c83992376d37f6",
																"typeString": "literal_string \"Asset not registered for game\""
															},
															"value": "Asset not registered for game"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_277f09ddce34479b4d8dbf7c94ce9867419d4661334c514823c83992376d37f6",
																"typeString": "literal_string \"Asset not registered for game\""
															}
														],
														"id": 744,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2861:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2861:98:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 754,
												"nodeType": "ExpressionStatement",
												"src": "2861:98:5"
											},
											{
												"expression": {
													"id": 761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "2970:50:5",
													"subExpression": {
														"baseExpression": {
															"expression": {
																"baseExpression": {
																	"id": 755,
																	"name": "games",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 557,
																	"src": "2977:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_GameData_$552_storage_$",
																		"typeString": "mapping(address => struct GameRegistry.GameData storage ref)"
																	}
																},
																"id": 757,
																"indexExpression": {
																	"id": 756,
																	"name": "game",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 729,
																	"src": "2983:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2977:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_GameData_$552_storage",
																	"typeString": "struct GameRegistry.GameData storage ref"
																}
															},
															"id": 758,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2989:16:5",
															"memberName": "assetPermissions",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 547,
															"src": "2977:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AssetPermission_$540_storage_$",
																"typeString": "mapping(address => struct GameRegistry.AssetPermission storage ref)"
															}
														},
														"id": 760,
														"indexExpression": {
															"id": 759,
															"name": "assetContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 731,
															"src": "3006:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2977:43:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AssetPermission_$540_storage",
															"typeString": "struct GameRegistry.AssetPermission storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 762,
												"nodeType": "ExpressionStatement",
												"src": "2970:50:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 764,
															"name": "game",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "3058:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 765,
															"name": "assetContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 731,
															"src": "3064:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 763,
														"name": "AssetPermissionRevoked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 587,
														"src": "3035:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3035:43:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 767,
												"nodeType": "EmitStatement",
												"src": "3030:48:5"
											}
										]
									},
									"documentation": {
										"id": 727,
										"nodeType": "StructuredDocumentation",
										"src": "2499:172:5",
										"text": " @notice Revoke a game's permission for an asset contract\n @param game Address of the game\n @param assetContract Address of the asset contract"
									},
									"functionSelector": "6f6145f0",
									"id": 769,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 734,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 733,
												"name": "onlyOwner",
												"nameLocations": [
													"2775:9:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2775:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2775:9:5"
										}
									],
									"name": "revokeAssetPermission",
									"nameLocation": "2685:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "game",
												"nameLocation": "2724:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "2716:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 728,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2716:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "assetContract",
												"nameLocation": "2746:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "2738:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 730,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2706:59:5"
									},
									"returnParameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2785:0:5"
									},
									"scope": 1020,
									"src": "2676:409:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 782,
										"nodeType": "Block",
										"src": "3269:48:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 777,
															"name": "games",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 557,
															"src": "3286:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_GameData_$552_storage_$",
																"typeString": "mapping(address => struct GameRegistry.GameData storage ref)"
															}
														},
														"id": 779,
														"indexExpression": {
															"id": 778,
															"name": "game",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "3292:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3286:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_GameData_$552_storage",
															"typeString": "struct GameRegistry.GameData storage ref"
														}
													},
													"id": 780,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3298:12:5",
													"memberName": "isRegistered",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 542,
													"src": "3286:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 776,
												"id": 781,
												"nodeType": "Return",
												"src": "3279:31:5"
											}
										]
									},
									"documentation": {
										"id": 770,
										"nodeType": "StructuredDocumentation",
										"src": "3091:104:5",
										"text": " @notice Check if a game is registered\n @param game Address of the game to check"
									},
									"functionSelector": "ee658e45",
									"id": 783,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isGameRegistered",
									"nameLocation": "3209:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "game",
												"nameLocation": "3234:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "3226:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 771,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3226:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3225:14:5"
									},
									"returnParameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 775,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "3263:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 774,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3263:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3262:6:5"
									},
									"scope": 1020,
									"src": "3200:117:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 821,
										"nodeType": "Block",
										"src": "3678:268:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 795,
																	"name": "games",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 557,
																	"src": "3696:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_GameData_$552_storage_$",
																		"typeString": "mapping(address => struct GameRegistry.GameData storage ref)"
																	}
																},
																"id": 797,
																"indexExpression": {
																	"id": 796,
																	"name": "game",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 786,
																	"src": "3702:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3696:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_GameData_$552_storage",
																	"typeString": "struct GameRegistry.GameData storage ref"
																}
															},
															"id": 798,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3708:12:5",
															"memberName": "isRegistered",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 542,
															"src": "3696:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "47616d65206e6f742072656769737465726564",
															"id": 799,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3722:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1edb0667ab871f480cc99b846d0e89fbd59606d5093450b6acb4e5c6386744c5",
																"typeString": "literal_string \"Game not registered\""
															},
															"value": "Game not registered"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1edb0667ab871f480cc99b846d0e89fbd59606d5093450b6acb4e5c6386744c5",
																"typeString": "literal_string \"Game not registered\""
															}
														],
														"id": 794,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3688:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3688:56:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 801,
												"nodeType": "ExpressionStatement",
												"src": "3688:56:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 803,
																			"name": "games",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 557,
																			"src": "3762:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_GameData_$552_storage_$",
																				"typeString": "mapping(address => struct GameRegistry.GameData storage ref)"
																			}
																		},
																		"id": 805,
																		"indexExpression": {
																			"id": 804,
																			"name": "game",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 786,
																			"src": "3768:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3762:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_GameData_$552_storage",
																			"typeString": "struct GameRegistry.GameData storage ref"
																		}
																	},
																	"id": 806,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3774:16:5",
																	"memberName": "assetPermissions",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 547,
																	"src": "3762:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AssetPermission_$540_storage_$",
																		"typeString": "mapping(address => struct GameRegistry.AssetPermission storage ref)"
																	}
																},
																"id": 808,
																"indexExpression": {
																	"id": 807,
																	"name": "assetContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 788,
																	"src": "3791:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3762:43:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AssetPermission_$540_storage",
																	"typeString": "struct GameRegistry.AssetPermission storage ref"
																}
															},
															"id": 809,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3806:12:5",
															"memberName": "isRegistered",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 536,
															"src": "3762:56:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4173736574206e6f74207265676973746572656420666f722067616d65",
															"id": 810,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3820:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_277f09ddce34479b4d8dbf7c94ce9867419d4661334c514823c83992376d37f6",
																"typeString": "literal_string \"Asset not registered for game\""
															},
															"value": "Asset not registered for game"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_277f09ddce34479b4d8dbf7c94ce9867419d4661334c514823c83992376d37f6",
																"typeString": "literal_string \"Asset not registered for game\""
															}
														],
														"id": 802,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3754:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3754:98:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 812,
												"nodeType": "ExpressionStatement",
												"src": "3754:98:5"
											},
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"expression": {
																"baseExpression": {
																	"id": 813,
																	"name": "games",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 557,
																	"src": "3878:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_GameData_$552_storage_$",
																		"typeString": "mapping(address => struct GameRegistry.GameData storage ref)"
																	}
																},
																"id": 815,
																"indexExpression": {
																	"id": 814,
																	"name": "game",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 786,
																	"src": "3884:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3878:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_GameData_$552_storage",
																	"typeString": "struct GameRegistry.GameData storage ref"
																}
															},
															"id": 816,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3890:16:5",
															"memberName": "assetPermissions",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 547,
															"src": "3878:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AssetPermission_$540_storage_$",
																"typeString": "mapping(address => struct GameRegistry.AssetPermission storage ref)"
															}
														},
														"id": 818,
														"indexExpression": {
															"id": 817,
															"name": "assetContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 788,
															"src": "3907:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3878:43:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AssetPermission_$540_storage",
															"typeString": "struct GameRegistry.AssetPermission storage ref"
														}
													},
													"id": 819,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3922:17:5",
													"memberName": "allowedAttributes",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 539,
													"src": "3878:61:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
														"typeString": "bytes32[] storage ref"
													}
												},
												"functionReturnParameters": 793,
												"id": 820,
												"nodeType": "Return",
												"src": "3871:68:5"
											}
										]
									},
									"documentation": {
										"id": 784,
										"nodeType": "StructuredDocumentation",
										"src": "3323:222:5",
										"text": " @notice Get allowed attributes for a game and asset contract\n @param game Address of the game\n @param assetContract Address of the asset contract\n @return Array of allowed attribute IDs"
									},
									"functionSelector": "53c02924",
									"id": 822,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getGamePermissions",
									"nameLocation": "3559:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "game",
												"nameLocation": "3595:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "3587:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 785,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3587:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "assetContract",
												"nameLocation": "3617:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "3609:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 787,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3609:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3577:59:5"
									},
									"returnParameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "3660:16:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 790,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "3660:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 791,
													"nodeType": "ArrayTypeName",
													"src": "3660:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3659:18:5"
									},
									"scope": 1020,
									"src": "3550:396:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 917,
										"nodeType": "Block",
										"src": "4437:640:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 839,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4451:25:5",
														"subExpression": {
															"expression": {
																"baseExpression": {
																	"id": 835,
																	"name": "games",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 557,
																	"src": "4452:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_GameData_$552_storage_$",
																		"typeString": "mapping(address => struct GameRegistry.GameData storage ref)"
																	}
																},
																"id": 837,
																"indexExpression": {
																	"id": 836,
																	"name": "game",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 825,
																	"src": "4458:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4452:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_GameData_$552_storage",
																	"typeString": "struct GameRegistry.GameData storage ref"
																}
															},
															"id": 838,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4464:12:5",
															"memberName": "isRegistered",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 542,
															"src": "4452:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"id": 847,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4480:57:5",
														"subExpression": {
															"expression": {
																"baseExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 840,
																			"name": "games",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 557,
																			"src": "4481:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_GameData_$552_storage_$",
																				"typeString": "mapping(address => struct GameRegistry.GameData storage ref)"
																			}
																		},
																		"id": 842,
																		"indexExpression": {
																			"id": 841,
																			"name": "game",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 825,
																			"src": "4487:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4481:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_GameData_$552_storage",
																			"typeString": "struct GameRegistry.GameData storage ref"
																		}
																	},
																	"id": 843,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4493:16:5",
																	"memberName": "assetPermissions",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 547,
																	"src": "4481:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AssetPermission_$540_storage_$",
																		"typeString": "mapping(address => struct GameRegistry.AssetPermission storage ref)"
																	}
																},
																"id": 845,
																"indexExpression": {
																	"id": 844,
																	"name": "assetContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 827,
																	"src": "4510:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4481:43:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AssetPermission_$540_storage",
																	"typeString": "struct GameRegistry.AssetPermission storage ref"
																}
															},
															"id": 846,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4525:12:5",
															"memberName": "isRegistered",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 536,
															"src": "4481:56:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4451:86:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 852,
												"nodeType": "IfStatement",
												"src": "4447:129:5",
												"trueBody": {
													"id": 851,
													"nodeType": "Block",
													"src": "4539:37:5",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 849,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4560:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 834,
															"id": 850,
															"nodeType": "Return",
															"src": "4553:12:5"
														}
													]
												}
											},
											{
												"assignments": [
													857
												],
												"declarations": [
													{
														"constant": false,
														"id": 857,
														"mutability": "mutable",
														"name": "allowedAttrs",
														"nameLocation": "4604:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 917,
														"src": "4586:30:5",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 855,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "4586:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 856,
															"nodeType": "ArrayTypeName",
															"src": "4586:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 865,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"expression": {
																"baseExpression": {
																	"id": 858,
																	"name": "games",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 557,
																	"src": "4619:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_GameData_$552_storage_$",
																		"typeString": "mapping(address => struct GameRegistry.GameData storage ref)"
																	}
																},
																"id": 860,
																"indexExpression": {
																	"id": 859,
																	"name": "game",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 825,
																	"src": "4625:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4619:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_GameData_$552_storage",
																	"typeString": "struct GameRegistry.GameData storage ref"
																}
															},
															"id": 861,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4631:16:5",
															"memberName": "assetPermissions",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 547,
															"src": "4619:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AssetPermission_$540_storage_$",
																"typeString": "mapping(address => struct GameRegistry.AssetPermission storage ref)"
															}
														},
														"id": 863,
														"indexExpression": {
															"id": 862,
															"name": "assetContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 827,
															"src": "4648:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4619:43:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AssetPermission_$540_storage",
															"typeString": "struct GameRegistry.AssetPermission storage ref"
														}
													},
													"id": 864,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4663:17:5",
													"memberName": "allowedAttributes",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 539,
													"src": "4619:61:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
														"typeString": "bytes32[] storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4586:94:5"
											},
											{
												"body": {
													"id": 913,
													"nodeType": "Block",
													"src": "4735:315:5",
													"statements": [
														{
															"assignments": [
																878
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 878,
																	"mutability": "mutable",
																	"name": "hasPermission",
																	"nameLocation": "4754:13:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 913,
																	"src": "4749:18:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 877,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "4749:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 880,
															"initialValue": {
																"hexValue": "66616c7365",
																"id": 879,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4770:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4749:26:5"
														},
														{
															"body": {
																"id": 906,
																"nodeType": "Block",
																"src": "4836:158:5",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			"id": 898,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"baseExpression": {
																					"id": 892,
																					"name": "attributes",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 830,
																					"src": "4858:10:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
																						"typeString": "bytes32[] calldata"
																					}
																				},
																				"id": 894,
																				"indexExpression": {
																					"id": 893,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 867,
																					"src": "4869:1:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "4858:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"baseExpression": {
																					"id": 895,
																					"name": "allowedAttrs",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 857,
																					"src": "4875:12:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																						"typeString": "bytes32[] storage pointer"
																					}
																				},
																				"id": 897,
																				"indexExpression": {
																					"id": 896,
																					"name": "j",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 882,
																					"src": "4888:1:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "4875:15:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "4858:32:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 905,
																		"nodeType": "IfStatement",
																		"src": "4854:126:5",
																		"trueBody": {
																			"id": 904,
																			"nodeType": "Block",
																			"src": "4892:88:5",
																			"statements": [
																				{
																					"expression": {
																						"id": 901,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 899,
																							"name": "hasPermission",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 878,
																							"src": "4914:13:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"hexValue": "74727565",
																							"id": 900,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "bool",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "4930:4:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							},
																							"value": "true"
																						},
																						"src": "4914:20:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 902,
																					"nodeType": "ExpressionStatement",
																					"src": "4914:20:5"
																				},
																				{
																					"id": 903,
																					"nodeType": "Break",
																					"src": "4956:5:5"
																				}
																			]
																		}
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 888,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 885,
																	"name": "j",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 882,
																	"src": "4806:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 886,
																		"name": "allowedAttrs",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 857,
																		"src": "4810:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																			"typeString": "bytes32[] storage pointer"
																		}
																	},
																	"id": 887,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4823:6:5",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "4810:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4806:23:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 907,
															"initializationExpression": {
																"assignments": [
																	882
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 882,
																		"mutability": "mutable",
																		"name": "j",
																		"nameLocation": "4799:1:5",
																		"nodeType": "VariableDeclaration",
																		"scope": 907,
																		"src": "4794:6:5",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 881,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "4794:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 884,
																"initialValue": {
																	"hexValue": "30",
																	"id": 883,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4803:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "4794:10:5"
															},
															"isSimpleCounterLoop": true,
															"loopExpression": {
																"expression": {
																	"id": 890,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "4831:3:5",
																	"subExpression": {
																		"id": 889,
																		"name": "j",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 882,
																		"src": "4831:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 891,
																"nodeType": "ExpressionStatement",
																"src": "4831:3:5"
															},
															"nodeType": "ForStatement",
															"src": "4789:205:5"
														},
														{
															"condition": {
																"id": 909,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "5011:14:5",
																"subExpression": {
																	"id": 908,
																	"name": "hasPermission",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 878,
																	"src": "5012:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 912,
															"nodeType": "IfStatement",
															"src": "5007:32:5",
															"trueBody": {
																"expression": {
																	"hexValue": "66616c7365",
																	"id": 910,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5034:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"functionReturnParameters": 834,
																"id": 911,
																"nodeType": "Return",
																"src": "5027:12:5"
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 870,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 867,
														"src": "4707:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 871,
															"name": "attributes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 830,
															"src": "4711:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
																"typeString": "bytes32[] calldata"
															}
														},
														"id": 872,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4722:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4711:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4707:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 914,
												"initializationExpression": {
													"assignments": [
														867
													],
													"declarations": [
														{
															"constant": false,
															"id": 867,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4700:1:5",
															"nodeType": "VariableDeclaration",
															"scope": 914,
															"src": "4695:6:5",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 866,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "4695:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 869,
													"initialValue": {
														"hexValue": "30",
														"id": 868,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4704:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4695:10:5"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 875,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4730:3:5",
														"subExpression": {
															"id": 874,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 867,
															"src": "4730:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 876,
													"nodeType": "ExpressionStatement",
													"src": "4730:3:5"
												},
												"nodeType": "ForStatement",
												"src": "4690:360:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5066:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 834,
												"id": 916,
												"nodeType": "Return",
												"src": "5059:11:5"
											}
										]
									},
									"documentation": {
										"id": 823,
										"nodeType": "StructuredDocumentation",
										"src": "3952:329:5",
										"text": " @notice Check if a game has permission for specific attributes on an asset contract\n @param game Address of the game\n @param assetContract Address of the asset contract\n @param attributes Array of attribute IDs to check\n @return bool indicating if the game has all specified permissions"
									},
									"functionSelector": "36e9b39a",
									"id": 918,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasPermissions",
									"nameLocation": "4295:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "game",
												"nameLocation": "4327:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "4319:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 824,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4319:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "assetContract",
												"nameLocation": "4349:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "4341:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 826,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4341:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "attributes",
												"nameLocation": "4391:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "4372:29:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 828,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "4372:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 829,
													"nodeType": "ArrayTypeName",
													"src": "4372:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:98:5"
									},
									"returnParameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "4431:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 832,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4431:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4430:6:5"
									},
									"scope": 1020,
									"src": "4286:791:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1018,
										"nodeType": "Block",
										"src": "5339:803:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 928,
																	"name": "games",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 557,
																	"src": "5357:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_GameData_$552_storage_$",
																		"typeString": "mapping(address => struct GameRegistry.GameData storage ref)"
																	}
																},
																"id": 930,
																"indexExpression": {
																	"id": 929,
																	"name": "game",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 921,
																	"src": "5363:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5357:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_GameData_$552_storage",
																	"typeString": "struct GameRegistry.GameData storage ref"
																}
															},
															"id": 931,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5369:12:5",
															"memberName": "isRegistered",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 542,
															"src": "5357:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "47616d65206e6f742072656769737465726564",
															"id": 932,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5383:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1edb0667ab871f480cc99b846d0e89fbd59606d5093450b6acb4e5c6386744c5",
																"typeString": "literal_string \"Game not registered\""
															},
															"value": "Game not registered"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1edb0667ab871f480cc99b846d0e89fbd59606d5093450b6acb4e5c6386744c5",
																"typeString": "literal_string \"Game not registered\""
															}
														],
														"id": 927,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5349:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5349:56:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 934,
												"nodeType": "ExpressionStatement",
												"src": "5349:56:5"
											},
											{
												"assignments": [
													936
												],
												"declarations": [
													{
														"constant": false,
														"id": 936,
														"mutability": "mutable",
														"name": "count",
														"nameLocation": "5509:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 1018,
														"src": "5501:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 935,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5501:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 938,
												"initialValue": {
													"hexValue": "30",
													"id": 937,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5517:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5501:17:5"
											},
											{
												"body": {
													"id": 964,
													"nodeType": "Block",
													"src": "5578:131:5",
													"statements": [
														{
															"condition": {
																"expression": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 950,
																				"name": "games",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 557,
																				"src": "5596:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_GameData_$552_storage_$",
																					"typeString": "mapping(address => struct GameRegistry.GameData storage ref)"
																				}
																			},
																			"id": 952,
																			"indexExpression": {
																				"id": 951,
																				"name": "game",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 921,
																				"src": "5602:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5596:11:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_GameData_$552_storage",
																				"typeString": "struct GameRegistry.GameData storage ref"
																			}
																		},
																		"id": 953,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5608:16:5",
																		"memberName": "assetPermissions",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 547,
																		"src": "5596:28:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AssetPermission_$540_storage_$",
																			"typeString": "mapping(address => struct GameRegistry.AssetPermission storage ref)"
																		}
																	},
																	"id": 957,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 954,
																			"name": "registeredGames",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 560,
																			"src": "5625:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_storage",
																				"typeString": "address[] storage ref"
																			}
																		},
																		"id": 956,
																		"indexExpression": {
																			"id": 955,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 940,
																			"src": "5641:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5625:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5596:48:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AssetPermission_$540_storage",
																		"typeString": "struct GameRegistry.AssetPermission storage ref"
																	}
																},
																"id": 958,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5645:12:5",
																"memberName": "isRegistered",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 536,
																"src": "5596:61:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 963,
															"nodeType": "IfStatement",
															"src": "5592:107:5",
															"trueBody": {
																"id": 962,
																"nodeType": "Block",
																"src": "5659:40:5",
																"statements": [
																	{
																		"expression": {
																			"id": 960,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "5677:7:5",
																			"subExpression": {
																				"id": 959,
																				"name": "count",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 936,
																				"src": "5677:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 961,
																		"nodeType": "ExpressionStatement",
																		"src": "5677:7:5"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 943,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 940,
														"src": "5545:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 944,
															"name": "registeredGames",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "5549:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 945,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5565:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5549:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5545:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 965,
												"initializationExpression": {
													"assignments": [
														940
													],
													"declarations": [
														{
															"constant": false,
															"id": 940,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5538:1:5",
															"nodeType": "VariableDeclaration",
															"scope": 965,
															"src": "5533:6:5",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 939,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "5533:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 942,
													"initialValue": {
														"hexValue": "30",
														"id": 941,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5542:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5533:10:5"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 948,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "5573:3:5",
														"subExpression": {
															"id": 947,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 940,
															"src": "5573:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 949,
													"nodeType": "ExpressionStatement",
													"src": "5573:3:5"
												},
												"nodeType": "ForStatement",
												"src": "5528:181:5"
											},
											{
												"assignments": [
													970
												],
												"declarations": [
													{
														"constant": false,
														"id": 970,
														"mutability": "mutable",
														"name": "assetContracts",
														"nameLocation": "5781:14:5",
														"nodeType": "VariableDeclaration",
														"scope": 1018,
														"src": "5764:31:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 968,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5764:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 969,
															"nodeType": "ArrayTypeName",
															"src": "5764:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 976,
												"initialValue": {
													"arguments": [
														{
															"id": 974,
															"name": "count",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 936,
															"src": "5812:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 973,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "5798:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (address[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 971,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5802:7:5",
																"stateMutability": "nonpayable",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 972,
															"nodeType": "ArrayTypeName",
															"src": "5802:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														}
													},
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5798:20:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5764:54:5"
											},
											{
												"assignments": [
													978
												],
												"declarations": [
													{
														"constant": false,
														"id": 978,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "5836:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 1018,
														"src": "5828:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 977,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5828:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 980,
												"initialValue": {
													"hexValue": "30",
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5844:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5828:17:5"
											},
											{
												"body": {
													"id": 1014,
													"nodeType": "Block",
													"src": "5905:191:5",
													"statements": [
														{
															"condition": {
																"expression": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 992,
																				"name": "games",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 557,
																				"src": "5923:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_GameData_$552_storage_$",
																					"typeString": "mapping(address => struct GameRegistry.GameData storage ref)"
																				}
																			},
																			"id": 994,
																			"indexExpression": {
																				"id": 993,
																				"name": "game",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 921,
																				"src": "5929:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5923:11:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_GameData_$552_storage",
																				"typeString": "struct GameRegistry.GameData storage ref"
																			}
																		},
																		"id": 995,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5935:16:5",
																		"memberName": "assetPermissions",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 547,
																		"src": "5923:28:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AssetPermission_$540_storage_$",
																			"typeString": "mapping(address => struct GameRegistry.AssetPermission storage ref)"
																		}
																	},
																	"id": 999,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 996,
																			"name": "registeredGames",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 560,
																			"src": "5952:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_storage",
																				"typeString": "address[] storage ref"
																			}
																		},
																		"id": 998,
																		"indexExpression": {
																			"id": 997,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 982,
																			"src": "5968:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5952:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5923:48:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AssetPermission_$540_storage",
																		"typeString": "struct GameRegistry.AssetPermission storage ref"
																	}
																},
																"id": 1000,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5972:12:5",
																"memberName": "isRegistered",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 536,
																"src": "5923:61:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1013,
															"nodeType": "IfStatement",
															"src": "5919:167:5",
															"trueBody": {
																"id": 1012,
																"nodeType": "Block",
																"src": "5986:100:5",
																"statements": [
																	{
																		"expression": {
																			"id": 1007,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1001,
																					"name": "assetContracts",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 970,
																					"src": "6004:14:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																						"typeString": "address[] memory"
																					}
																				},
																				"id": 1003,
																				"indexExpression": {
																					"id": 1002,
																					"name": "index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 978,
																					"src": "6019:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "6004:21:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 1004,
																					"name": "registeredGames",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 560,
																					"src": "6028:15:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1006,
																				"indexExpression": {
																					"id": 1005,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 982,
																					"src": "6044:1:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "6028:18:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "6004:42:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1008,
																		"nodeType": "ExpressionStatement",
																		"src": "6004:42:5"
																	},
																	{
																		"expression": {
																			"id": 1010,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "6064:7:5",
																			"subExpression": {
																				"id": 1009,
																				"name": "index",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 978,
																				"src": "6064:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1011,
																		"nodeType": "ExpressionStatement",
																		"src": "6064:7:5"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 985,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "5872:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 986,
															"name": "registeredGames",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "5876:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 987,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5892:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5876:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5872:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1015,
												"initializationExpression": {
													"assignments": [
														982
													],
													"declarations": [
														{
															"constant": false,
															"id": 982,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5865:1:5",
															"nodeType": "VariableDeclaration",
															"scope": 1015,
															"src": "5860:6:5",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 981,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "5860:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 984,
													"initialValue": {
														"hexValue": "30",
														"id": 983,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5869:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5860:10:5"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 990,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "5900:3:5",
														"subExpression": {
															"id": 989,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 982,
															"src": "5900:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 991,
													"nodeType": "ExpressionStatement",
													"src": "5900:3:5"
												},
												"nodeType": "ForStatement",
												"src": "5855:241:5"
											},
											{
												"expression": {
													"id": 1016,
													"name": "assetContracts",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 970,
													"src": "6121:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"functionReturnParameters": 926,
												"id": 1017,
												"nodeType": "Return",
												"src": "6114:21:5"
											}
										]
									},
									"documentation": {
										"id": 919,
										"nodeType": "StructuredDocumentation",
										"src": "5083:165:5",
										"text": " @notice Get all asset contracts a game has permissions for\n @param game Address of the game\n @return Array of asset contract addresses"
									},
									"functionSelector": "57f623d0",
									"id": 1019,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getGameAssetContracts",
									"nameLocation": "5262:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "game",
												"nameLocation": "5292:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "5284:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 920,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5284:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5283:14:5"
									},
									"returnParameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "5321:16:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 923,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "5321:7:5",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 924,
													"nodeType": "ArrayTypeName",
													"src": "5321:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5320:18:5"
									},
									"scope": 1020,
									"src": "5253:889:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1021,
							"src": "111:6033:5",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								566,
								572,
								581,
								587
							]
						}
					],
					"src": "32:6112:5"
				},
				"id": 5
			},
			"contracts/lib/IGameAsset.sol": {
				"ast": {
					"absolutePath": "contracts/lib/IGameAsset.sol",
					"exportedSymbols": {
						"IERC165": [
							306
						],
						"IERC721": [
							264
						],
						"IGameAsset": [
							1073
						]
					},
					"id": 1074,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1022,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 1023,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1074,
							"sourceUnit": 265,
							"src": "57:58:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"id": 1024,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1074,
							"sourceUnit": 307,
							"src": "116:65:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1026,
										"name": "IERC165",
										"nameLocations": [
											"305:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 306,
										"src": "305:7:6"
									},
									"id": 1027,
									"nodeType": "InheritanceSpecifier",
									"src": "305:7:6"
								},
								{
									"baseName": {
										"id": 1028,
										"name": "IERC721",
										"nameLocations": [
											"314:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 264,
										"src": "314:7:6"
									},
									"id": 1029,
									"nodeType": "InheritanceSpecifier",
									"src": "314:7:6"
								}
							],
							"canonicalName": "IGameAsset",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1025,
								"nodeType": "StructuredDocumentation",
								"src": "183:97:6",
								"text": " @title IGameAsset\n @dev Core interface for game assets with cross-game compatibility"
							},
							"fullyImplemented": false,
							"id": 1073,
							"linearizedBaseContracts": [
								1073,
								264,
								306
							],
							"name": "IGameAsset",
							"nameLocation": "291:10:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1030,
										"nodeType": "StructuredDocumentation",
										"src": "328:67:6",
										"text": "@dev Emitted when an attribute is modified by a registered game"
									},
									"eventSelector": "cab43fcefd1cfa7d587c52f0656fac9490f5d331ba70af3c89090fb3e2ce128f",
									"id": 1040,
									"name": "AttributeModified",
									"nameLocation": "406:17:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1032,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "440:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "424:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1031,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "424:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1034,
												"indexed": true,
												"mutability": "mutable",
												"name": "game",
												"nameLocation": "465:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "449:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1033,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "449:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1036,
												"indexed": true,
												"mutability": "mutable",
												"name": "attributeId",
												"nameLocation": "487:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "471:27:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1035,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1038,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "506:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "500:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1037,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "500:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "423:89:6"
									},
									"src": "400:113:6"
								},
								{
									"documentation": {
										"id": 1041,
										"nodeType": "StructuredDocumentation",
										"src": "523:205:6",
										"text": "@notice Set attributes for a token\n @param tokenId The ID of the token to modify\n @param attributes List of attribute IDs to modify\n @param values List of values for each attribute"
									},
									"functionSelector": "a122effb",
									"id": 1052,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setAttributes",
									"nameLocation": "742:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "764:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "756:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1042,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "756:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "attributes",
												"nameLocation": "792:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "773:29:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1044,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "773:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1045,
													"nodeType": "ArrayTypeName",
													"src": "773:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "821:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "804:23:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 1047,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "804:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 1048,
													"nodeType": "ArrayTypeName",
													"src": "804:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "755:73:6"
									},
									"returnParameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "837:0:6"
									},
									"scope": 1073,
									"src": "733:105:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1053,
										"nodeType": "StructuredDocumentation",
										"src": "848:147:6",
										"text": "@notice Get attributes for a token\n @param tokenId The ID of the token to query\n @param attributes List of attribute IDs to query"
									},
									"functionSelector": "0a35e3d7",
									"id": 1064,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAttributes",
									"nameLocation": "1009:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1031:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "1023:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1054,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1023:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "attributes",
												"nameLocation": "1059:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "1040:29:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1056,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "1040:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1057,
													"nodeType": "ArrayTypeName",
													"src": "1040:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1022:48:6"
									},
									"returnParameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "1094:14:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 1060,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "1094:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 1061,
													"nodeType": "ArrayTypeName",
													"src": "1094:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:16:6"
									},
									"scope": 1073,
									"src": "1000:110:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1065,
										"nodeType": "StructuredDocumentation",
										"src": "1116:133:6",
										"text": "@notice Check if a token exists\n @param tokenId The ID of the token to check\n @return bool whether the token exists"
									},
									"functionSelector": "4f558e79",
									"id": 1072,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exists",
									"nameLocation": "1263:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1278:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "1270:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1066,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1270:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1269:17:6"
									},
									"returnParameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "1310:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1069,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1310:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1309:6:6"
									},
									"scope": 1073,
									"src": "1254:62:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1074,
							"src": "281:1037:6",
							"usedErrors": [],
							"usedEvents": [
								163,
								172,
								181,
								1040
							]
						}
					],
					"src": "32:1287:6"
				},
				"id": 6
			}
		}
	}
}